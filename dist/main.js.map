{"version":3,"file":"main.js","mappings":"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AAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAAEA,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,EAC9EA,cAAc,CA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O,EAAE;EAC1B,IAAI,IAA2B,EAAE;IAChC;IACArT,MAAM,CAACtW,OAAO,GAAGA,OAAO,GAAG2pB,OAAO,CAACpT,mBAAO,CAAC,gDAAQ,CAAC,CAAC;EACtD,CAAC,MACI,EAOJ;AACF,CAAC,EAAC,IAAI,EAAE,UAAUuT,QAAQ,EAAE;EAE1B,WAAU9kB,SAAS,EAAE;IAClB;IACA,IAAI+kB,CAAC,GAAGD,QAAQ;IAChB,IAAIE,KAAK,GAAGD,CAAC,CAACE,GAAG;IACjB,IAAIwD,IAAI,GAAGzD,KAAK,CAACyD,IAAI;IACrB,IAAIif,YAAY,GAAG1iB,KAAK,CAAC0D,SAAS;;IAElC;AACL;AACA;IACK,IAAIgW,KAAK,GAAG3Z,CAAC,CAAC4Z,GAAG,GAAG,CAAC,CAAC;;IAEtB;AACL;AACA;IACK,IAAIC,OAAO,GAAGF,KAAK,CAACG,IAAI,GAAGpW,IAAI,CAAC5R,MAAM,CAAC;MACnC;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACSxK,IAAI,EAAE,SAAAA,CAAUyzB,IAAI,EAAEC,GAAG,EAAE;QACvB,IAAI,CAACD,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;MAClB;;MAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACS;MACI;MACA;;MAEA;MACJ;;MAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACS;MACI;MACA;;MAEA;MACJ;;MAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACS;MACI;MACA;;MAEA;MACJ;;MAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACS;MACI;MACA;;MAEA;MACJ;;MAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACS;MACI;MACI;MACA;MACJ;MACI;MACA;MACJ;;MAEA;MACJ;;MAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACS;MACI;MACI;MACA;MACJ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;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCxCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCVA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;UErFA;UACA;UACA;UACA;UACA","sources":["webpack://my-webpack-project/./component/AudioPost.js","webpack://my-webpack-project/./index.js","webpack://my-webpack-project/./node_modules/axios/index.js","webpack://my-webpack-project/./node_modules/axios/lib/adapters/xhr.js","webpack://my-webpack-project/./node_modules/axios/lib/axios.js","webpack://my-webpack-project/./node_modules/axios/lib/cancel/Cancel.js","webpack://my-webpack-project/./node_modules/axios/lib/cancel/CancelToken.js","webpack://my-webpack-project/./node_modules/axios/lib/cancel/isCancel.js","webpack://my-webpack-project/./node_modules/axios/lib/core/Axios.js","webpack://my-webpack-project/./node_modules/axios/lib/core/InterceptorManager.js","webpack://my-webpack-project/./node_modules/axios/lib/core/buildFullPath.js","webpack://my-webpack-project/./node_modules/axios/lib/core/createError.js","webpack://my-webpack-project/./node_modules/axios/lib/core/dispatchRequest.js","webpack://my-webpack-project/./node_modules/axios/lib/core/enhanceError.js","webpack://my-webpack-project/./node_modules/axios/lib/core/mergeConfig.js","webpack://my-webpack-project/./node_modules/axios/lib/core/settle.js","webpack://my-webpack-project/./node_modules/axios/lib/core/transformData.js","webpack://my-webpack-project/./node_modules/axios/lib/defaults/index.js","webpack://my-webpack-project/./node_modules/axios/lib/defaults/transitional.js","webpack://my-webpack-project/./node_modules/axios/lib/env/data.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/bind.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/buildURL.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/combineURLs.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/cookies.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/spread.js","webpack://my-webpack-project/./node_modules/axios/lib/helpers/validator.js","webpack://my-webpack-project/./node_modules/axios/lib/utils.js","webpack://my-webpack-project/./node_modules/bent/src/browser.js","webpack://my-webpack-project/./node_modules/bent/src/core.js","webpack://my-webpack-project/./node_modules/crypto-js/aes.js","webpack://my-webpack-project/./node_modules/crypto-js/cipher-core.js","webpack://my-webpack-project/./node_modules/crypto-js/core.js","webpack://my-webpack-project/./node_modules/crypto-js/enc-base64.js","webpack://my-webpack-project/./node_modules/crypto-js/enc-base64url.js","webpack://my-webpack-project/./node_modules/crypto-js/enc-utf16.js","webpack://my-webpack-project/./node_modules/crypto-js/evpkdf.js","webpack://my-webpack-project/./node_modules/crypto-js/format-hex.js","webpack://my-webpack-project/./node_modules/crypto-js/hmac.js","webpack://my-webpack-project/./node_modules/crypto-js/index.js","webpack://my-webpack-project/./node_modules/crypto-js/lib-typedarrays.js","webpack://my-webpack-project/./node_modules/crypto-js/md5.js","webpack://my-webpack-project/./node_modules/crypto-js/mode-cfb.js","webpack://my-webpack-project/./node_modules/crypto-js/mode-ctr-gladman.js","webpack://my-webpack-project/./node_modules/crypto-js/mode-ctr.js","webpack://my-webpack-project/./node_modules/crypto-js/mode-ecb.js","webpack://my-webpack-project/./node_modules/crypto-js/mode-ofb.js","webpack://my-webpack-project/./node_modules/crypto-js/pad-ansix923.js","webpack://my-webpack-project/./node_modules/crypto-js/pad-iso10126.js","webpack://my-webpack-project/./node_modules/crypto-js/pad-iso97971.js","webpack://my-webpack-project/./node_modules/crypto-js/pad-nopadding.js","webpack://my-webpack-project/./node_modules/crypto-js/pad-zeropadding.js","webpack://my-webpack-project/./node_modules/crypto-js/pbkdf2.js","webpack://my-webpack-project/./node_modules/crypto-js/rabbit-legacy.js","webpack://my-webpack-project/./node_modules/crypto-js/rabbit.js","webpack://my-webpack-project/./node_modules/crypto-js/rc4.js","webpack://my-webpack-project/./node_modules/crypto-js/ripemd160.js","webpack://my-webpack-project/./node_modules/crypto-js/sha1.js","webpack://my-webpack-project/./node_modules/crypto-js/sha224.js","webpack://my-webpack-project/./node_modules/crypto-js/sha256.js","webpack://my-webpack-project/./node_modules/crypto-js/sha3.js","webpack://my-webpack-project/./node_modules/crypto-js/sha384.js","webpack://my-webpack-project/./node_modules/crypto-js/sha512.js","webpack://my-webpack-project/./node_modules/crypto-js/tripledes.js","webpack://my-webpack-project/./node_modules/crypto-js/x64-core.js","webpack://my-webpack-project/./node_modules/form-data/lib/browser.js","webpack://my-webpack-project/microsoft.cognitiveservices.speech.sdk.ts","webpack://my-webpack-project/src/common.browser/ConsoleLoggingListener.ts","webpack://my-webpack-project/src/common.browser/FileAudioSource.ts","webpack://my-webpack-project/src/common.browser/MicAudioSource.ts","webpack://my-webpack-project/src/common.browser/PCMRecorder.ts","webpack://my-webpack-project/src/common.browser/ProxyInfo.ts","webpack://my-webpack-project/src/common.browser/ReplayableAudioNode.ts","webpack://my-webpack-project/src/common.browser/RestConfigBase.ts","webpack://my-webpack-project/src/common.browser/RestMessageAdapter.ts","webpack://my-webpack-project/src/common.browser/WebsocketConnection.ts","webpack://my-webpack-project/src/common.browser/WebsocketMessageAdapter.ts","webpack://my-webpack-project/src/common.speech/AddedLmIntent.ts","webpack://my-webpack-project/src/common.speech/AgentConfig.ts","webpack://my-webpack-project/src/common.speech/CognitiveSubscriptionKeyAuthentication.ts","webpack://my-webpack-project/src/common.speech/CognitiveTokenAuthentication.ts","webpack://my-webpack-project/src/common.speech/ConnectionFactoryBase.ts","webpack://my-webpack-project/src/common.speech/ConversationServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/DialogConnectorFactory.ts","webpack://my-webpack-project/src/common.speech/DialogServiceAdapter.ts","webpack://my-webpack-project/src/common.speech/DialogServiceTurnState.ts","webpack://my-webpack-project/src/common.speech/DialogServiceTurnStateManager.ts","webpack://my-webpack-project/src/common.speech/DynamicGrammarBuilder.ts","webpack://my-webpack-project/src/common.speech/DynamicGrammarInterfaces.ts","webpack://my-webpack-project/src/common.speech/EnumTranslation.ts","webpack://my-webpack-project/src/common.speech/Exports.ts","webpack://my-webpack-project/src/common.speech/HeaderNames.ts","webpack://my-webpack-project/src/common.speech/IAuthentication.ts","webpack://my-webpack-project/src/common.speech/IConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/ISynthesisConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/IntentConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/IntentServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/QueryParameterNames.ts","webpack://my-webpack-project/src/common.speech/RecognitionEvents.ts","webpack://my-webpack-project/src/common.speech/RecognizerConfig.ts","webpack://my-webpack-project/src/common.speech/RequestSession.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/ActivityResponsePayload.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/DetailedSpeechPhrase.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/Enums.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/IntentResponse.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/SimpleSpeechPhrase.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/SpeakerResponse.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/SpeechDetected.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/SpeechHypothesis.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/SpeechKeyword.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/SynthesisAudioMetadata.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/TranslationHypothesis.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/TranslationPhrase.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/TranslationSynthesisEnd.ts","webpack://my-webpack-project/src/common.speech/ServiceMessages/TurnStatusPayload.ts","webpack://my-webpack-project/src/common.speech/ServiceRecognizerBase.ts","webpack://my-webpack-project/src/common.speech/ServiceTelemetryListener.Internal.ts","webpack://my-webpack-project/src/common.speech/SpeakerRecognitionConfig.ts","webpack://my-webpack-project/src/common.speech/SpeakerRecognitionConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/SpeakerServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/SpeechConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/SpeechConnectionMessage.Internal.ts","webpack://my-webpack-project/src/common.speech/SpeechContext.ts","webpack://my-webpack-project/src/common.speech/SpeechServiceInterfaces.ts","webpack://my-webpack-project/src/common.speech/SpeechServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/SpeechSynthesisConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/SynthesisAdapterBase.ts","webpack://my-webpack-project/src/common.speech/SynthesisContext.ts","webpack://my-webpack-project/src/common.speech/SynthesisEvents.ts","webpack://my-webpack-project/src/common.speech/SynthesisRestAdapter.ts","webpack://my-webpack-project/src/common.speech/SynthesisTurn.ts","webpack://my-webpack-project/src/common.speech/SynthesizerConfig.ts","webpack://my-webpack-project/src/common.speech/TranscriberConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/TranscriptionServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationConnectionConfig.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationConnectionMessage.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationManager.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationRequestSession.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationServiceAdapter.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationTranslatorEventArgs.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationTranslatorInterfaces.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationTranslatorRecognizer.ts","webpack://my-webpack-project/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.ts","webpack://my-webpack-project/src/common.speech/Transcription/Exports.ts","webpack://my-webpack-project/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts","webpack://my-webpack-project/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts","webpack://my-webpack-project/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts","webpack://my-webpack-project/src/common.speech/Transcription/TranscriberRecognizer.ts","webpack://my-webpack-project/src/common.speech/TranslationConnectionFactory.ts","webpack://my-webpack-project/src/common.speech/TranslationServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/TranslationStatus.ts","webpack://my-webpack-project/src/common.speech/VoiceServiceRecognizer.ts","webpack://my-webpack-project/src/common.speech/WebsocketMessageFormatter.ts","webpack://my-webpack-project/src/common/AudioSourceEvents.ts","webpack://my-webpack-project/src/common/BackgroundError.ts","webpack://my-webpack-project/src/common/ChunkedArrayBufferStream.ts","webpack://my-webpack-project/src/common/ConnectionEvents.ts","webpack://my-webpack-project/src/common/ConnectionMessage.ts","webpack://my-webpack-project/src/common/ConnectionOpenResponse.ts","webpack://my-webpack-project/src/common/DeferralMap.ts","webpack://my-webpack-project/src/common/DialogEvents.ts","webpack://my-webpack-project/src/common/Error.ts","webpack://my-webpack-project/src/common/EventSource.ts","webpack://my-webpack-project/src/common/Events.ts","webpack://my-webpack-project/src/common/Guid.ts","webpack://my-webpack-project/src/common/IConnection.ts","webpack://my-webpack-project/src/common/List.ts","webpack://my-webpack-project/src/common/PlatformEvent.ts","webpack://my-webpack-project/src/common/Promise.ts","webpack://my-webpack-project/src/common/Queue.ts","webpack://my-webpack-project/src/common/RawWebsocketMessage.ts","webpack://my-webpack-project/src/common/RiffPcmEncoder.ts","webpack://my-webpack-project/src/common/Stream.ts","webpack://my-webpack-project/src/common/StringUtils.ts","webpack://my-webpack-project/src/common/Timeout.ts","webpack://my-webpack-project/src/sdk/ActivityReceivedEventArgs.ts","webpack://my-webpack-project/src/sdk/Audio/AudioConfig.ts","webpack://my-webpack-project/src/sdk/Audio/AudioFileWriter.ts","webpack://my-webpack-project/src/sdk/Audio/AudioInputStream.ts","webpack://my-webpack-project/src/sdk/Audio/AudioOutputFormat.ts","webpack://my-webpack-project/src/sdk/Audio/AudioOutputStream.ts","webpack://my-webpack-project/src/sdk/Audio/AudioStreamFormat.ts","webpack://my-webpack-project/src/sdk/Audio/BaseAudioPlayer.ts","webpack://my-webpack-project/src/sdk/Audio/PullAudioInputStreamCallback.ts","webpack://my-webpack-project/src/sdk/Audio/PushAudioOutputStreamCallback.ts","webpack://my-webpack-project/src/sdk/Audio/SpeakerAudioDestination.ts","webpack://my-webpack-project/src/sdk/AutoDetectSourceLanguageConfig.ts","webpack://my-webpack-project/src/sdk/AutoDetectSourceLanguageResult.ts","webpack://my-webpack-project/src/sdk/BotFrameworkConfig.ts","webpack://my-webpack-project/src/sdk/CancellationDetails.ts","webpack://my-webpack-project/src/sdk/CancellationDetailsBase.ts","webpack://my-webpack-project/src/sdk/CancellationErrorCodes.ts","webpack://my-webpack-project/src/sdk/CancellationEventArgsBase.ts","webpack://my-webpack-project/src/sdk/CancellationReason.ts","webpack://my-webpack-project/src/sdk/Connection.ts","webpack://my-webpack-project/src/sdk/ConnectionEventArgs.ts","webpack://my-webpack-project/src/sdk/ConnectionMessage.ts","webpack://my-webpack-project/src/sdk/ConnectionMessageEventArgs.ts","webpack://my-webpack-project/src/sdk/Contracts.ts","webpack://my-webpack-project/src/sdk/ConversationTranscriptionCanceledEventArgs.ts","webpack://my-webpack-project/src/sdk/CustomCommandsConfig.ts","webpack://my-webpack-project/src/sdk/Diagnostics.ts","webpack://my-webpack-project/src/sdk/DialogServiceConfig.ts","webpack://my-webpack-project/src/sdk/DialogServiceConnector.ts","webpack://my-webpack-project/src/sdk/Exports.ts","webpack://my-webpack-project/src/sdk/IntentRecognitionCanceledEventArgs.ts","webpack://my-webpack-project/src/sdk/IntentRecognitionEventArgs.ts","webpack://my-webpack-project/src/sdk/IntentRecognitionResult.ts","webpack://my-webpack-project/src/sdk/IntentRecognizer.ts","webpack://my-webpack-project/src/sdk/KeywordRecognitionModel.ts","webpack://my-webpack-project/src/sdk/LanguageIdMode.ts","webpack://my-webpack-project/src/sdk/LanguageUnderstandingModel.ts","webpack://my-webpack-project/src/sdk/NoMatchDetails.ts","webpack://my-webpack-project/src/sdk/NoMatchReason.ts","webpack://my-webpack-project/src/sdk/OutputFormat.ts","webpack://my-webpack-project/src/sdk/PhraseListGrammar.ts","webpack://my-webpack-project/src/sdk/ProfanityOption.ts","webpack://my-webpack-project/src/sdk/PronunciationAssessmentConfig.ts","webpack://my-webpack-project/src/sdk/PronunciationAssessmentGradingSystem.ts","webpack://my-webpack-project/src/sdk/PronunciationAssessmentGranularity.ts","webpack://my-webpack-project/src/sdk/PronunciationAssessmentResult.ts","webpack://my-webpack-project/src/sdk/PropertyCollection.ts","webpack://my-webpack-project/src/sdk/PropertyId.ts","webpack://my-webpack-project/src/sdk/RecognitionEventArgs.ts","webpack://my-webpack-project/src/sdk/RecognitionResult.ts","webpack://my-webpack-project/src/sdk/Recognizer.ts","webpack://my-webpack-project/src/sdk/ResultReason.ts","webpack://my-webpack-project/src/sdk/ServiceEventArgs.ts","webpack://my-webpack-project/src/sdk/ServicePropertyChannel.ts","webpack://my-webpack-project/src/sdk/SessionEventArgs.ts","webpack://my-webpack-project/src/sdk/SourceLanguageConfig.ts","webpack://my-webpack-project/src/sdk/SpeakerIdentificationModel.ts","webpack://my-webpack-project/src/sdk/SpeakerRecognitionResult.ts","webpack://my-webpack-project/src/sdk/SpeakerRecognizer.ts","webpack://my-webpack-project/src/sdk/SpeakerVerificationModel.ts","webpack://my-webpack-project/src/sdk/SpeechConfig.ts","webpack://my-webpack-project/src/sdk/SpeechRecognitionCanceledEventArgs.ts","webpack://my-webpack-project/src/sdk/SpeechRecognitionEventArgs.ts","webpack://my-webpack-project/src/sdk/SpeechRecognitionResult.ts","webpack://my-webpack-project/src/sdk/SpeechRecognizer.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisBookmarkEventArgs.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisBoundaryType.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisEventArgs.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisOutputFormat.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisResult.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisVisemeEventArgs.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesisWordBoundaryEventArgs.ts","webpack://my-webpack-project/src/sdk/SpeechSynthesizer.ts","webpack://my-webpack-project/src/sdk/SpeechTranslationConfig.ts","webpack://my-webpack-project/src/sdk/SynthesisResult.ts","webpack://my-webpack-project/src/sdk/SynthesisVoicesResult.ts","webpack://my-webpack-project/src/sdk/Transcription/Conversation.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationCommon.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationExpirationEventArgs.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationTranscriber.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationTranslationEventArgs.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationTranslationResult.ts","webpack://my-webpack-project/src/sdk/Transcription/ConversationTranslator.ts","webpack://my-webpack-project/src/sdk/Transcription/IParticipant.ts","webpack://my-webpack-project/src/sdk/Transcription/ParticipantChangedReason.ts","webpack://my-webpack-project/src/sdk/TranslationRecognitionCanceledEventArgs.ts","webpack://my-webpack-project/src/sdk/TranslationRecognitionEventArgs.ts","webpack://my-webpack-project/src/sdk/TranslationRecognitionResult.ts","webpack://my-webpack-project/src/sdk/TranslationRecognizer.ts","webpack://my-webpack-project/src/sdk/TranslationSynthesisEventArgs.ts","webpack://my-webpack-project/src/sdk/TranslationSynthesisResult.ts","webpack://my-webpack-project/src/sdk/Translations.ts","webpack://my-webpack-project/src/sdk/TurnStatusReceivedEventArgs.ts","webpack://my-webpack-project/src/sdk/VoiceInfo.ts","webpack://my-webpack-project/src/sdk/VoiceProfile.ts","webpack://my-webpack-project/src/sdk/VoiceProfileClient.ts","webpack://my-webpack-project/src/sdk/VoiceProfileEnrollmentResult.ts","webpack://my-webpack-project/src/sdk/VoiceProfilePhraseResult.ts","webpack://my-webpack-project/src/sdk/VoiceProfileResult.ts","webpack://my-webpack-project/src/sdk/VoiceProfileType.ts","webpack://my-webpack-project/./node_modules/openai/dist/api.js","webpack://my-webpack-project/./node_modules/openai/dist/base.js","webpack://my-webpack-project/./node_modules/openai/dist/common.js","webpack://my-webpack-project/./node_modules/openai/dist/configuration.js","webpack://my-webpack-project/./node_modules/openai/dist/index.js","webpack://my-webpack-project/./node_modules/tiktoken/tiktoken.js","webpack://my-webpack-project/./node_modules/tiktoken/tiktoken_bg.js","webpack://my-webpack-project/./node_modules/uuid/dist/esm-browser/native.js","webpack://my-webpack-project/./node_modules/uuid/dist/esm-browser/regex.js","webpack://my-webpack-project/./node_modules/uuid/dist/esm-browser/rng.js","webpack://my-webpack-project/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://my-webpack-project/./node_modules/uuid/dist/esm-browser/v4.js","webpack://my-webpack-project/./node_modules/uuid/dist/esm-browser/validate.js","webpack://my-webpack-project/./node_modules/webm-to-wav-converter/WavRecorder.js","webpack://my-webpack-project/./node_modules/webm-to-wav-converter/downloadUtil.js","webpack://my-webpack-project/./node_modules/webm-to-wav-converter/index.js","webpack://my-webpack-project/./node_modules/webm-to-wav-converter/wavBlobUtil.js","webpack://my-webpack-project/./src/AMRecorder.js","webpack://my-webpack-project/./src/API.js","webpack://my-webpack-project/./src/BtnControl.js","webpack://my-webpack-project/./src/Credential.js","webpack://my-webpack-project/./src/DB.js","webpack://my-webpack-project/./src/Migration.js","webpack://my-webpack-project/./src/MockStream.js","webpack://my-webpack-project/./src/Record.js","webpack://my-webpack-project/./node_modules/openai/package.json","webpack://my-webpack-project/./index.scss","webpack://my-webpack-project/./src/Conversation.ts","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\crypto-js|crypto","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.browser|agent-base","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.browser|fs","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.browser|https-proxy-agent","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.browser|net","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.browser|tls","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.browser|ws","webpack://my-webpack-project/ignored|C:\\Users\\kts\\Documents\\bouncy\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\sdk\\Audio|fs","webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/runtime/async module","webpack://my-webpack-project/webpack/runtime/compat get default export","webpack://my-webpack-project/webpack/runtime/create fake namespace object","webpack://my-webpack-project/webpack/runtime/define property getters","webpack://my-webpack-project/webpack/runtime/ensure chunk","webpack://my-webpack-project/webpack/runtime/get javascript chunk filename","webpack://my-webpack-project/webpack/runtime/get mini-css chunk filename","webpack://my-webpack-project/webpack/runtime/global","webpack://my-webpack-project/webpack/runtime/harmony module decorator","webpack://my-webpack-project/webpack/runtime/hasOwnProperty shorthand","webpack://my-webpack-project/webpack/runtime/load script","webpack://my-webpack-project/webpack/runtime/make namespace object","webpack://my-webpack-project/webpack/runtime/wasm loading","webpack://my-webpack-project/webpack/runtime/publicPath","webpack://my-webpack-project/webpack/runtime/jsonp chunk loading","webpack://my-webpack-project/webpack/before-startup","webpack://my-webpack-project/webpack/startup","webpack://my-webpack-project/webpack/after-startup"],"sourcesContent":["const res = await import(\"./AudioPost.htm\");\r\nconst text = await res.default;\r\nconst dom = new DOMParser().parseFromString(text, \"text/html\");\r\nconst html = dom.querySelector(\"body\").innerHTML;\r\nconst template = document.createElement(\"template\");\r\ntemplate.innerHTML = html;\r\nconst content = template.content;\r\n\r\nclass AudioPost extends HTMLElement {\r\n    constructor(src, script, api, id) {\r\n        super();\r\n        this.id = id;\r\n        this.root = this.attachShadow({ mode: \"open\" });\r\n        this.root.appendChild(content.cloneNode(true));\r\n        this.audio = this.root.querySelector(\"audio\");\r\n        this.button = this.root.querySelector(\"button#script\");\r\n        this.p = this.root.querySelector(\"p\");\r\n\r\n        async function loadScript(blob) {\r\n            const file = new File([blob], 'temp.wav');\r\n            return await api.recognize(file);\r\n        }\r\n\r\n        if (src) {\r\n            this.src = src;\r\n        }\r\n        if (script) {\r\n            this.script = script;\r\n        }\r\n\r\n        if (this.getAttribute(\"src\")) {\r\n            this.src = this.getAttribute(\"src\");\r\n        }\r\n        if (this.getAttribute(\"script\")) {\r\n            this.script = this.getAttribute(\"script\");\r\n        }\r\n\r\n        this.button.dataset.open = \"false\";\r\n        this.button.dataset.lock = \"false\";\r\n        this.button.onclick = async () => {\r\n            if (this.button.dataset.lock == \"true\") {\r\n                return;\r\n            }\r\n\r\n            if (this.button.dataset.open == \"true\") {\r\n                this.p.classList.remove(\"open\");\r\n                this.button.dataset.open = \"false\";\r\n            } else {\r\n                this.button.dataset.lock = \"true\";\r\n                if (!this.p.textContent) {\r\n                    const res = await fetch(this.src);\r\n                    const blob = await res.blob();\r\n                    this.p.textContent = await loadScript(blob);\r\n                }\r\n                this.button.dataset.lock = \"false\";\r\n\r\n                this.p.classList.add(\"open\");\r\n                this.button.dataset.open = \"true\";\r\n            }\r\n        }\r\n    }\r\n\r\n    set src(value) {\r\n        this.audio.src = value;\r\n    }\r\n\r\n    get src() {\r\n        return this.audio.src;\r\n    }\r\n\r\n    set script(value) {\r\n        this.p.textContent = value;\r\n    }\r\n\r\n    get script() {\r\n        return this.p.textContent;\r\n    }\r\n\r\n    set onDelete(handler) {\r\n        this.root.querySelector(\"button#delete\").onclick = () => {\r\n            handler(Number(this.id));\r\n        };\r\n    }\r\n}\r\n\r\ncustomElements.define(\"audio-post\", AudioPost);\r\n\r\nexport default AudioPost;\r\n","import { getWaveBlob } from \"webm-to-wav-converter\"\r\n\r\nimport AMRecorder from \"./src/AMRecorder.js\";\r\nimport BtnControl from \"./src/BtnControl.js\";\r\nimport MockStream from \"./src/MockStream.js\";\r\nimport AudioPost from \"./component/AudioPost.js\";\r\nimport Record from \"./src/Record.js\";\r\nimport API from \"./src/API.js\";\r\n\r\nconst api = new API();\r\nconst record = new Record();\r\n\r\nfunction add(data) {\r\n    const url = URL.createObjectURL(data.blob);\r\n\r\n    const ul = document.querySelector(\"main ul\");\r\n    const li = document.createElement(\"li\");\r\n    const post = new AudioPost(url, data.script, api, data.id);\r\n    post.onDelete = async (id) => {\r\n        await record.delete(id);\r\n        ul.removeChild(li);\r\n    };\r\n    li.appendChild(post);\r\n    ul.appendChild(li);\r\n}\r\n\r\nasync function init() {\r\n    await record.connect();\r\n    const data = await record.list();\r\n\r\n    data.forEach(add);\r\n}\r\n\r\nasync function save(blob) {\r\n    const data = {\r\n        blob,\r\n        script: null\r\n    };\r\n    await record.connect();\r\n    const id = await record.save(data);\r\n\r\n    add({ ...data, id });\r\n}\r\n\r\nfunction configure(stream) {\r\n    const recorder = new window.MediaRecorder(stream);\r\n    let chunks = [];\r\n    let recording = false;\r\n\r\n    recorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n            chunks.push(event.data);\r\n        }\r\n    };\r\n\r\n    recorder.onstop = async () => { \r\n        const blob = await getWaveBlob(new Blob(chunks)); \r\n        chunks = [];\r\n\r\n        save(blob);\r\n    }\r\n\r\n    function onDown() {\r\n        switch (amr.state) {\r\n            case \"init\":\r\n                amr.toTrans();\r\n                break;\r\n            case \"rec\":\r\n                break;\r\n            default:\r\n                alert(\"error\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    function onLong() {\r\n        switch (amr.state) {\r\n            case \"trans\":\r\n                amr.toShot();\r\n                break;\r\n            case \"rec\":\r\n                break;\r\n            default:\r\n                alert(\"error\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    function onUp() {\r\n        switch (amr.state) {\r\n            case \"trans\":\r\n                amr.toRec();\r\n                break;\r\n            case \"rec\":\r\n                amr.toInit();\r\n                break;\r\n            case \"shot\":\r\n                amr.toInit();\r\n                break;\r\n            default:\r\n                alert(\"error\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    const button = document.querySelector(\"button#record\");\r\n    const bc = new BtnControl(button, onDown, onLong, onUp);\r\n\r\n    function start() {\r\n        if (!recording) {\r\n            recording = true;\r\n            button.classList.add(\"on\");\r\n            recorder.start();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function stop() {\r\n        if (recording) {\r\n            recording = false;\r\n            recorder.stop();\r\n            button.classList.remove(\"on\");\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const amr = new AMRecorder(start, stop);\r\n}\r\n\r\nif (navigator.mediaDevices) {\r\n    navigator.mediaDevices\r\n        .getUserMedia({\r\n            audio: true,\r\n            video: false\r\n        }).then(configure);\r\n}\r\n\r\nconst accountElement = document.querySelector(\"section#account\");\r\nconst signupElements = document.querySelectorAll(\".account_signup\");\r\nconst loginElements = document.querySelectorAll(\".account_login\");\r\nconst login = document.querySelector(\"#login\");\r\nconst logout = document.querySelector(\"#logout\");\r\nconst register = document.querySelector(\"#register\");\r\nconst form = document.querySelector(\"form\")\r\n\r\nlet conversation = null;\r\n\r\nimport(\"./credentials.json\").then(async data => {\r\n    const speech_key = document.querySelector(\"#speech_key\");\r\n    const speech_region = document.querySelector(\"#speech_region\");\r\n    const openai_key = document.querySelector(\"#openai_key\");\r\n    speech_key.value = data.azure.key;\r\n    speech_region.value = data.azure.region;\r\n    openai_key.value = data.openai.key;\r\n}).catch(err => {\r\n    console.log(err);\r\n});\r\n\r\nif (!api.loggedin()) {\r\n    accountElement.classList.add(\"open\");\r\n    if (api.exists()) {\r\n        loginElements.forEach(elem => elem.classList.add(\"open\"));\r\n    } else {\r\n        signupElements.forEach(elem => elem.classList.add(\"open\"));\r\n    }\r\n}\r\n\r\nform.onsubmit = (event) => event.preventDefault();\r\n\r\nlogin.onclick = (event) => {\r\n    const formData = new FormData(form);\r\n    const passwd = formData.get(\"passwd\");\r\n\r\n    if (!api.login(passwd)) {\r\n        alert(\"Failed to login.\");\r\n        return;\r\n    }\r\n    loginElements.forEach(elem => elem.classList.remove(\"open\"));\r\n    accountElement.classList.remove(\"open\");\r\n    conversation = api.conversation();\r\n};\r\n\r\nregister.onclick = (event) => {\r\n    const formData = new FormData(form);\r\n    const speech_key = formData.get(\"speech_key\");\r\n    const speech_region = formData.get(\"speech_region\");\r\n    const openai_key = formData.get(\"openai_key\");\r\n    const passwd = formData.get(\"passwd\");\r\n\r\n    api.signup(speech_key, speech_region, openai_key, passwd);\r\n    accountElement.classList.remove(\"open\");\r\n    conversation = api.conversation();\r\n};\r\n\r\nlogout.onclick = (event) => {\r\n    api.logout();\r\n    loginElements.forEach(elem => elem.classList.remove(\"open\"));\r\n    signupElements.forEach(elem => elem.classList.add(\"open\"));\r\n    conversation = null;\r\n}\r\n\r\nfunction write(msg) {\r\n    const ul = document.querySelector(\"main ul\");\r\n    const li = document.createElement(\"li\");\r\n    li.textContent = msg;\r\n    ul.appendChild(li);\r\n}\r\n\r\nconst say = document.querySelector(\"#say\");\r\nconst textarea = document.querySelector(\"textarea\");\r\nsay.onclick = async () => {\r\n    if (conversation) {\r\n        const req = textarea.value;\r\n        write(req);\r\n        const rep = await conversation.say(req);\r\n        write(rep);\r\n    }\r\n}\r\n\r\ninit();\r\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.26.1\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict'\n/* global fetch, btoa, Headers */\nconst core = require('./core')\n\nclass StatusError extends Error {\n  constructor (res, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StatusError)\n    }\n\n    this.name = 'StatusError'\n    this.message = res.statusMessage\n    this.statusCode = res.status\n    this.res = res\n    this.json = res.json.bind(res)\n    this.text = res.text.bind(res)\n    this.arrayBuffer = res.arrayBuffer.bind(res)\n    let buffer\n    const get = () => {\n      if (!buffer) buffer = this.arrayBuffer()\n      return buffer\n    }\n    Object.defineProperty(this, 'responseBody', { get })\n    // match Node.js headers object\n    this.headers = {}\n    for (const [key, value] of res.headers.entries()) {\n      this.headers[key.toLowerCase()] = value\n    }\n  }\n}\n\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\n  _url = baseurl + (_url || '')\n  let parsed = new URL(_url)\n\n  if (!headers) headers = {}\n  if (parsed.username) {\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\n  }\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\n  }\n\n  if (body) {\n    if (body instanceof ArrayBuffer ||\n      ArrayBuffer.isView(body) ||\n      typeof body === 'string'\n    ) {\n      // noop\n    } else if (typeof body === 'object') {\n      body = JSON.stringify(body)\n      headers['Content-Type'] = 'application/json'\n    } else {\n      throw new Error('Unknown body type.')\n    }\n  }\n\n  _headers = new Headers({ ...(headers || {}), ..._headers })\n\n  const resp = await fetch(parsed, { method, headers: _headers, body })\n  resp.statusCode = resp.status\n\n  if (!statusCodes.has(resp.status)) {\n    throw new StatusError(resp)\n  }\n\n  if (encoding === 'json') return resp.json()\n  else if (encoding === 'buffer') return resp.arrayBuffer()\n  else if (encoding === 'string') return resp.text()\n  else return resp\n}\n\nmodule.exports = core(mkrequest)\n","'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe=true) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe=true) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\treturn CryptoJS.enc.Base64url;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { ConsoleLoggingListener } from \"./src/common.browser/Exports\";\r\nimport { Events } from \"./src/common/Exports\";\r\n\r\n// Common.Storage.SetLocalStorage(new Common.Browser.LocalStorage());\r\n// Common.Storage.SetSessionStorage(new Common.Browser.SessionStorage());\r\nEvents.instance.attachConsoleListener(new ConsoleLoggingListener());\r\n\r\n// Speech SDK API\r\nexport * from \"./src/sdk/Exports\";\r\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { LogLevel } from \"../sdk/LogLevel\";\r\nimport { IEventListener, PlatformEvent } from \"../common/Exports\";\r\nimport { Contracts } from \"../sdk/Contracts\";\r\n\r\nexport class ConsoleLoggingListener implements IEventListener<PlatformEvent> {\r\n    private privLogLevelFilter: LogLevel;\r\n    private privLogPath: fs.PathLike = undefined;\r\n    private privEnableConsoleOutput: boolean = true;\r\n\r\n    public constructor(logLevelFilter: LogLevel = LogLevel.None) { // Console output disabled by default\r\n        this.privLogLevelFilter = logLevelFilter;\r\n    }\r\n\r\n    public set logPath(path: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\r\n        this.privLogPath = path;\r\n    }\r\n\r\n    public set enableConsoleOutput(enableOutput: boolean) {\r\n        this.privEnableConsoleOutput = enableOutput;\r\n    }\r\n\r\n    public onEvent(event: PlatformEvent): void {\r\n        if (event.eventType >= this.privLogLevelFilter) {\r\n            const log = this.toString(event);\r\n            if (!!this.privLogPath) {\r\n                fs.writeFileSync(this.privLogPath, log + \"\\n\", { flag: \"a+\" });\r\n            }\r\n\r\n            if (this.privEnableConsoleOutput) {\r\n                switch (event.eventType) {\r\n                    case LogLevel.Debug:\r\n                        // eslint-disable-next-line no-console\r\n                        console.debug(log);\r\n                        break;\r\n                    case LogLevel.Info:\r\n                        // eslint-disable-next-line no-console\r\n                        console.info(log);\r\n                        break;\r\n                    case LogLevel.Warning:\r\n                        // eslint-disable-next-line no-console\r\n                        console.warn(log);\r\n                        break;\r\n                    case LogLevel.Error:\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(log);\r\n                        break;\r\n                    default:\r\n                        // eslint-disable-next-line no-console\r\n                        console.log(log);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private toString(event: PlatformEvent): string {\r\n        const logFragments = [\r\n            `${event.eventTime}`,\r\n            `${event.name}`,\r\n        ];\r\n\r\n        const e: any = event as any;\r\n        for (const prop in e) {\r\n            if (prop && event.hasOwnProperty(prop) &&\r\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\r\n                prop !== \"eventId\" && prop !== \"name\" &&\r\n                prop !== \"constructor\") {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                const value = e[prop];\r\n                let valueToLog = \"<NULL>\";\r\n                if (value !== undefined && value !== null) {\r\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\r\n                        valueToLog = value.toString();\r\n                    } else {\r\n                        valueToLog = JSON.stringify(value);\r\n                    }\r\n                }\r\n\r\n                logFragments.push(`${prop}: ${valueToLog}`);\r\n            }\r\n\r\n        }\r\n\r\n        return logFragments.join(\" | \");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormat, AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\n\r\nexport class FileAudioSource implements IAudioSource {\r\n\r\n    private privAudioFormatPromise: Promise<AudioStreamFormatImpl>;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privSource: Blob | Buffer;\r\n\r\n    private privFilename: string;\r\n\r\n    private privHeaderEnd: number = 44;\r\n\r\n    public constructor(file: File | Buffer, filename?: string, audioSourceId?: string) {\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privSource = file;\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\r\n            this.privFilename = (file as File).name;\r\n        } else {\r\n            this.privFilename = filename || \"unknown.wav\";\r\n        }\r\n\r\n        // Read the header.\r\n        this.privAudioFormatPromise = this.readHeader();\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privAudioFormatPromise;\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\r\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\"));\r\n            return Promise.reject(errorMsg);\r\n        }\r\n\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        const stream: Stream<ArrayBuffer> = await this.upload(audioNodeId);\r\n\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return Promise.resolve({\r\n            detach: async (): Promise<void> => {\r\n                stream.readEnded();\r\n                delete this.privStreams[audioNodeId];\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                await this.turnOff();\r\n            },\r\n            id: (): string => audioNodeId,\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => stream.read(),\r\n        });\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream && !stream.isClosed) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privAudioFormatPromise.then<ISpeechConfigAudioDevice>((result: AudioStreamFormatImpl): Promise<{\r\n            bitspersample: number;\r\n            channelcount: number;\r\n            connectivity: connectivity.Unknown;\r\n            manufacturer: string;\r\n            model: string;\r\n            samplerate: number;\r\n            type: type.File;\r\n        }> => ( Promise.resolve({\r\n                bitspersample: result.bitsPerSample,\r\n                channelcount: result.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: \"File\",\r\n                samplerate: result.samplesPerSec,\r\n                type: type.File,\r\n            })\r\n        ));\r\n    }\r\n\r\n    private readHeader(): Promise<AudioStreamFormatImpl> {\r\n        // Read the wave header.\r\n        const maxHeaderSize: number = 4296;\r\n        const header: Blob | Buffer = this.privSource.slice(0, maxHeaderSize);\r\n\r\n        const headerResult: Deferred<AudioStreamFormatImpl> = new Deferred<AudioStreamFormatImpl>();\r\n\r\n        const processHeader = (header: ArrayBuffer): void => {\r\n            const view: DataView = new DataView(header);\r\n\r\n            const getWord = (index: number): string => String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\r\n\r\n            // RIFF 4 bytes.\r\n            if (\"RIFF\" !== getWord(0)) {\r\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\r\n                return;\r\n            }\r\n\r\n            // length, 4 bytes\r\n            // RIFF Type & fmt 8 bytes\r\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\r\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\r\n                return;\r\n            }\r\n\r\n            const formatSize: number = view.getInt32(16, true);\r\n            const channelCount: number = view.getUint16(22, true);\r\n            const sampleRate: number = view.getUint32(24, true);\r\n            const bitsPerSample: number = view.getUint16(34, true);\r\n            // Confirm if header is 44 bytes long.\r\n            let pos: number = 36 + Math.max(formatSize - 16, 0);\r\n            for (; getWord(pos) !== \"data\"; pos += 2) {\r\n                if (pos > maxHeaderSize - 8) {\r\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\r\n                    return;\r\n                }\r\n            }\r\n            this.privHeaderEnd = pos + 8;\r\n            headerResult.resolve(AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount) as AudioStreamFormatImpl);\r\n        };\r\n\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\r\n            const reader: FileReader = new FileReader();\r\n\r\n            reader.onload = (event: Event): void => {\r\n                const header: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                processHeader(header);\r\n            };\r\n\r\n            reader.readAsArrayBuffer(header);\r\n        } else {\r\n            const h: Buffer = header as Buffer;\r\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\r\n        }\r\n        return headerResult.promise;\r\n    }\r\n\r\n    private async upload(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        const onerror = (error: string): void => {\r\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\r\n            throw new Error(errorMsg);\r\n        };\r\n\r\n        try {\r\n            await this.turnOn();\r\n\r\n            const format: AudioStreamFormatImpl = await this.privAudioFormatPromise;\r\n            const stream = new ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\r\n\r\n            this.privStreams[audioNodeId] = stream;\r\n            const chunk: Blob | Buffer = this.privSource.slice(this.privHeaderEnd);\r\n\r\n            const processFile = (buff: ArrayBuffer): void => {\r\n                if (stream.isClosed) {\r\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\r\n                }\r\n\r\n                stream.writeStreamChunk({\r\n                    buffer: buff,\r\n                    isEnd: false,\r\n                    timeReceived: Date.now(),\r\n                });\r\n                stream.close();\r\n            };\r\n\r\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\r\n                const reader: FileReader = new FileReader();\r\n                reader.onerror = (ev: ProgressEvent<FileReader>): void  =>  onerror(ev.toString());\r\n\r\n                reader.onload = (event: Event): void => {\r\n                    const fileBuffer: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                    processFile(fileBuffer);\r\n                };\r\n\r\n                reader.readAsArrayBuffer(chunk);\r\n            } else {\r\n                const c: Buffer = chunk as Buffer;\r\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\r\n            }\r\n\r\n            return stream;\r\n        } catch (e) {\r\n            onerror(e as string);\r\n        }\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport { IStreamChunk } from \"../common/Stream\";\r\nimport {\r\n    AudioStreamFormat,\r\n    AudioStreamFormatImpl,\r\n} from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\n// Extending the default definition with browser specific definitions for backward compatibility\r\ninterface INavigator extends Navigator {\r\n    webkitGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback | undefined, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    mozGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback | undefined, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    msGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n}\r\n\r\nexport const AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\r\n\r\nexport class MicAudioSource implements IAudioSource {\r\n\r\n    private static readonly AUDIOFORMAT: AudioStreamFormatImpl = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privInitializeDeferral: Deferred<void>;\r\n\r\n    private privMediaStream: MediaStream;\r\n\r\n    private privContext: AudioContext;\r\n\r\n    private privMicrophoneLabel: string;\r\n\r\n    private privOutputChunkSize: number;\r\n\r\n    private privIsClosing: boolean;\r\n\r\n    public constructor(\r\n        private readonly privRecorder: IRecorder,\r\n        private readonly deviceId?: string,\r\n        audioSourceId?: string,\r\n        mediaStream?: MediaStream\r\n        ) {\r\n\r\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privMediaStream = mediaStream || null;\r\n        this.privIsClosing = false;\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        if (this.privInitializeDeferral) {\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        this.privInitializeDeferral = new Deferred<void>();\r\n\r\n        try {\r\n            this.createAudioContext();\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\r\n            } else {\r\n                this.privInitializeDeferral.reject(error as string);\r\n            }\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        const nav = window.navigator as INavigator;\r\n\r\n        let getUserMedia = (\r\n            // eslint-disable-next-line\r\n            nav.getUserMedia ||\r\n            nav.webkitGetUserMedia ||\r\n            nav.mozGetUserMedia ||\r\n            nav.msGetUserMedia\r\n        );\r\n\r\n        if (!!nav.mediaDevices) {\r\n            getUserMedia = (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void => {\r\n                nav.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(successCallback)\r\n                    .catch(errorCallback);\r\n            };\r\n        }\r\n\r\n        if (!getUserMedia) {\r\n            const errorMsg = \"Browser does not support getUserMedia.\";\r\n            this.privInitializeDeferral.reject(errorMsg);\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\r\n        } else {\r\n            const next = (): void => {\r\n                this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n                if (this.privMediaStream && this.privMediaStream.active) {\r\n                    this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                    this.privInitializeDeferral.resolve();\r\n                } else {\r\n                    getUserMedia(\r\n                        { audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false },\r\n                        (mediaStream: MediaStream): void => {\r\n                            this.privMediaStream = mediaStream;\r\n                            this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                            this.privInitializeDeferral.resolve();\r\n                        }, (error: any): void => {\r\n                            const errorMsg = `Error occurred during microphone initialization: ${error as string}`;\r\n                            this.privInitializeDeferral.reject(errorMsg);\r\n                            this.onEvent(new AudioSourceErrorEvent(this.privId, errorMsg));\r\n                        });\r\n                }\r\n            };\r\n\r\n            if (this.privContext.state === \"suspended\") {\r\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\r\n                // https://github.com/WebAudio/web-audio-api/issues/790\r\n                this.privContext.resume()\r\n                    .then(next)\r\n                    .catch((reason: any): void => {\r\n                        this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason as string}`);\r\n                    });\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n\r\n        return this.privInitializeDeferral.promise;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        return this.listen(audioNodeId).then<IAudioStreamNode>(\r\n            (stream: Stream<ArrayBuffer>): IAudioStreamNode => {\r\n                this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n                return {\r\n                    detach: async (): Promise<void> => {\r\n                        stream.readEnded();\r\n                        delete this.privStreams[audioNodeId];\r\n                        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                        return this.turnOff();\r\n                    },\r\n                    id: (): string => audioNodeId,\r\n                    read: (): Promise<IStreamChunk<ArrayBuffer>> => stream.read(),\r\n                };\r\n            });\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public async turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        if (this.privInitializeDeferral) {\r\n            // Correctly handle when browser forces mic off before turnOn() completes\r\n            // eslint-disable-next-line @typescript-eslint/await-thenable\r\n            await this.privInitializeDeferral;\r\n            this.privInitializeDeferral = null;\r\n        }\r\n\r\n        await this.destroyAudioContext();\r\n\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.getMicrophoneLabel().then((label: string): ISpeechConfigAudioDevice => (\r\n            {\r\n                bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\r\n                channelcount: MicAudioSource.AUDIOFORMAT.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: label,\r\n                samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\r\n                type: type.Microphones,\r\n            }\r\n        ));\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        if (name === AudioWorkletSourceURLPropertyName) {\r\n            this.privRecorder.setWorkletUrl(value);\r\n        } else {\r\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\r\n        }\r\n    }\r\n\r\n    private getMicrophoneLabel(): Promise<string> {\r\n        const defaultMicrophoneName: string = \"microphone\";\r\n\r\n        // If we did this already, return the value.\r\n        if (this.privMicrophoneLabel !== undefined) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        // If the stream isn't currently running, we can't query devices because security.\r\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\r\n            return Promise.resolve(defaultMicrophoneName);\r\n        }\r\n\r\n        // Setup a default\r\n        this.privMicrophoneLabel = defaultMicrophoneName;\r\n\r\n        // Get the id of the device running the audio track.\r\n        const microphoneDeviceId: string = this.privMediaStream.getTracks()[0].getSettings().deviceId;\r\n\r\n        // If the browser doesn't support getting the device ID, set a default and return.\r\n        if (undefined === microphoneDeviceId) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        const deferred: Deferred<string> = new Deferred<string>();\r\n\r\n        // Enumerate the media devices.\r\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]): void => {\r\n            for (const device of devices) {\r\n                if (device.deviceId === microphoneDeviceId) {\r\n                    // Found the device\r\n                    this.privMicrophoneLabel = device.label;\r\n                    break;\r\n                }\r\n            }\r\n            deferred.resolve(this.privMicrophoneLabel);\r\n        }, (): Deferred<string> => deferred.resolve(this.privMicrophoneLabel));\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private async listen(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        await this.turnOn();\r\n        const stream = new ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\r\n        this.privStreams[audioNodeId] = stream;\r\n        try {\r\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\r\n        } catch (error) {\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, error as string));\r\n            throw error;\r\n        }\r\n        const result: Stream<ArrayBuffer> = stream;\r\n        return result;\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private createAudioContext(): void {\r\n        if (!!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\r\n    }\r\n\r\n    private async destroyAudioContext(): Promise<void> {\r\n        if (!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privRecorder.releaseMediaResources(this.privContext);\r\n\r\n        // This pattern brought to you by a bug in the TypeScript compiler where it\r\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\r\n        // https://github.com/Microsoft/TypeScript/issues/11498\r\n        let hasClose: boolean = false;\r\n        if (\"close\" in this.privContext) {\r\n            hasClose = true;\r\n        }\r\n\r\n        if (hasClose) {\r\n            if (!this.privIsClosing) {\r\n                // The audio context close may take enough time that the close is called twice\r\n                this.privIsClosing = true;\r\n                await this.privContext.close();\r\n                this.privContext = null;\r\n                this.privIsClosing = false;\r\n            }\r\n        } else if (null !== this.privContext && this.privContext.state === \"running\") {\r\n            // Suspend actually takes a callback, but analogous to the\r\n            // resume method, it'll be only fired if suspend is called\r\n            // in a direct response to a user action. The later is not always\r\n            // the case, as TurnOff is also called, when we receive an\r\n            // end-of-speech message from the service. So, doing a best effort\r\n            // fire-and-forget here.\r\n            await this.privContext.suspend();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RiffPcmEncoder, Stream } from \"../common/Exports\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\nexport class PcmRecorder implements IRecorder {\r\n    private privMediaResources: IMediaResources;\r\n    private privSpeechProcessorScript: string; // speech-processor.js Url\r\n    private privStopInputOnRelease: boolean;\r\n\r\n    public constructor(stopInputOnRelease: boolean) {\r\n        this.privStopInputOnRelease = stopInputOnRelease;\r\n    }\r\n\r\n    public record(context: AudioContext, mediaStream: MediaStream, outputStream: Stream<ArrayBuffer>): void {\r\n        const desiredSampleRate = 16000;\r\n\r\n        const waveStreamEncoder = new RiffPcmEncoder(context.sampleRate, desiredSampleRate);\r\n\r\n        const micInput = context.createMediaStreamSource(mediaStream);\r\n\r\n        const attachScriptProcessor = (): void => {\r\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n            const scriptNode = (() => {\r\n                let bufferSize = 0;\r\n                try {\r\n                    return context.createScriptProcessor(bufferSize, 1, 1);\r\n                } catch (error) {\r\n                    // Webkit (<= version 31) requires a valid bufferSize.\r\n                    bufferSize = 2048;\r\n                    let audioSampleRate = context.sampleRate;\r\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\r\n                        bufferSize <<= 1;\r\n                        audioSampleRate >>= 1;\r\n                    }\r\n                    return context.createScriptProcessor(bufferSize, 1, 1);\r\n                }\r\n            })();\r\n            scriptNode.onaudioprocess = (event: AudioProcessingEvent): void => {\r\n                const inputFrame = event.inputBuffer.getChannelData(0);\r\n\r\n                if (outputStream && !outputStream.isClosed) {\r\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                    if (!!waveFrame) {\r\n                        outputStream.writeStreamChunk({\r\n                            buffer: waveFrame,\r\n                            isEnd: false,\r\n                            timeReceived: Date.now(),\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            micInput.connect(scriptNode);\r\n            scriptNode.connect(context.destination);\r\n            this.privMediaResources = {\r\n                scriptProcessorNode: scriptNode,\r\n                source: micInput,\r\n                stream: mediaStream,\r\n            };\r\n        };\r\n\r\n        // https://webaudio.github.io/web-audio-api/#audioworklet\r\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\r\n\r\n        if (!!context.audioWorklet) {\r\n            if (!this.privSpeechProcessorScript) {\r\n                const workletScript = `class SP extends AudioWorkletProcessor {\r\n                    constructor(options) {\r\n                      super(options);\r\n                    }\r\n                    process(inputs, outputs) {\r\n                      const input = inputs[0];\r\n                      const output = [];\r\n                      for (let channel = 0; channel < input.length; channel += 1) {\r\n                        output[channel] = input[channel];\r\n                      }\r\n                      this.port.postMessage(output[0]);\r\n                      return true;\r\n                    }\r\n                  }\r\n                  registerProcessor('speech-processor', SP);`;\r\n                const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\r\n                this.privSpeechProcessorScript = URL.createObjectURL(blob);\r\n            }\r\n\r\n            context.audioWorklet\r\n                .addModule(this.privSpeechProcessorScript)\r\n                .then((): void => {\r\n                    const workletNode = new AudioWorkletNode(context, \"speech-processor\");\r\n                    workletNode.port.onmessage = (ev: MessageEvent): void => {\r\n                        const inputFrame: Float32Array = ev.data as Float32Array;\r\n\r\n                        if (outputStream && !outputStream.isClosed) {\r\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                            if (!!waveFrame) {\r\n                                outputStream.writeStreamChunk({\r\n                                    buffer: waveFrame,\r\n                                    isEnd: false,\r\n                                    timeReceived: Date.now(),\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                    micInput.connect(workletNode);\r\n                    workletNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: workletNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                })\r\n                .catch((): void => {\r\n                    attachScriptProcessor();\r\n                });\r\n        } else {\r\n            try {\r\n                attachScriptProcessor();\r\n            } catch (err) {\r\n                throw new Error(`Unable to start audio worklet node for PCMRecorder: ${err as string}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    public releaseMediaResources(context: AudioContext): void {\r\n        if (this.privMediaResources) {\r\n            if (this.privMediaResources.scriptProcessorNode) {\r\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\r\n                this.privMediaResources.scriptProcessorNode = null;\r\n            }\r\n            if (this.privMediaResources.source) {\r\n                this.privMediaResources.source.disconnect();\r\n                if (this.privStopInputOnRelease) {\r\n                    this.privMediaResources.stream.getTracks().forEach((track: MediaStreamTrack): void => track.stop());\r\n                }\r\n                this.privMediaResources.source = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setWorkletUrl(url: string): void {\r\n        this.privSpeechProcessorScript = url;\r\n    }\r\n}\r\n\r\ninterface IMediaResources {\r\n    source: MediaStreamAudioSourceNode;\r\n    scriptProcessorNode: ScriptProcessorNode | AudioWorkletNode;\r\n    stream: MediaStream;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognizerConfig } from \"../common.speech/Exports\";\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport class ProxyInfo {\r\n    private privProxyHostName: string;\r\n    private privProxyPort: number;\r\n    private privProxyUserName: string;\r\n    private privProxyPassword: string;\r\n\r\n    private constructor(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string) {\r\n        this.privProxyHostName = proxyHostName;\r\n        this.privProxyPort = proxyPort;\r\n        this.privProxyUserName = proxyUserName;\r\n        this.privProxyPassword = proxyPassword;\r\n    }\r\n\r\n    public static fromParameters(parameters: PropertyCollection): ProxyInfo {\r\n        return new ProxyInfo(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyHostName),\r\n            parseInt(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPort), 10),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyUserName),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPassword));\r\n    }\r\n\r\n    public static fromRecognizerConfig(config: RecognizerConfig): ProxyInfo {\r\n        return this.fromParameters(config.parameters);\r\n    }\r\n\r\n    public get HostName(): string {\r\n        return this.privProxyHostName;\r\n    }\r\n\r\n    public get Port(): number {\r\n        return this.privProxyPort;\r\n    }\r\n\r\n    public get UserName(): string {\r\n        return this.privProxyUserName;\r\n    }\r\n\r\n    public get Password(): string {\r\n        return this.privProxyPassword;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport {\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n} from \"../common/Exports\";\r\n\r\nexport class ReplayableAudioNode implements IAudioStreamNode {\r\n    private privAudioNode: IAudioStreamNode;\r\n    private privBytesPerSecond: number;\r\n    private privBuffers: BufferEntry[] = [];\r\n    private privReplayOffset: number = 0;\r\n    private privLastShrinkOffset: number = 0;\r\n    private privBufferStartOffset: number = 0;\r\n    private privBufferSerial: number = 0;\r\n    private privBufferedBytes: number = 0;\r\n    private privReplay: boolean = false;\r\n    private privLastChunkAcquiredTime: number = 0;\r\n\r\n    public constructor(audioSource: IAudioStreamNode, bytesPerSecond: number) {\r\n        this.privAudioNode = audioSource;\r\n        this.privBytesPerSecond = bytesPerSecond;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privAudioNode.id();\r\n    }\r\n\r\n    // Reads and returns the next chunk of audio buffer.\r\n    // If replay of existing buffers are needed, read() will first seek and replay\r\n    // existing content, and upoin completion it will read new content from the underlying\r\n    // audio node, saving that content into the replayable buffers.\r\n    public read(): Promise<IStreamChunk<ArrayBuffer>> {\r\n        // if there is a replay request to honor.\r\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\r\n            // Find the start point in the buffers.\r\n            // Offsets are in 100ns increments.\r\n            // So how many bytes do we need to seek to get the right offset?\r\n            const offsetToSeek: number = this.privReplayOffset - this.privBufferStartOffset;\r\n\r\n            let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n            if (0 !== (bytesToSeek % 2)) {\r\n                bytesToSeek++;\r\n            }\r\n\r\n            let i: number = 0;\r\n\r\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n            }\r\n\r\n            if (i < this.privBuffers.length) {\r\n                const retVal: ArrayBuffer = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\r\n\r\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\r\n\r\n                // If we've reached the end of the buffers, stop replaying.\r\n                if (i === this.privBuffers.length - 1) {\r\n                    this.privReplay = false;\r\n                }\r\n\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: retVal,\r\n                    isEnd: false,\r\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.privAudioNode.read()\r\n            .then((result: IStreamChunk<ArrayBuffer>): IStreamChunk<ArrayBuffer> => {\r\n                if (result && result.buffer) {\r\n                    this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\r\n                    this.privBufferedBytes += result.buffer.byteLength;\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    public detach(): Promise<void> {\r\n        this.privBuffers = undefined;\r\n        return this.privAudioNode.detach();\r\n    }\r\n\r\n    public replay(): void {\r\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\r\n            this.privReplay = true;\r\n            this.privReplayOffset = this.privLastShrinkOffset;\r\n        }\r\n    }\r\n\r\n    // Shrinks the existing audio buffers to start at the new offset, or at the\r\n    // beginning of the buffer closest to the requested offset.\r\n    // A replay request will start from the last shrink point.\r\n    public shrinkBuffers(offset: number): void {\r\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.privLastShrinkOffset = offset;\r\n\r\n        // Find the start point in the buffers.\r\n        // Offsets are in 100ns increments.\r\n        // So how many bytes do we need to seek to get the right offset?\r\n        const offsetToSeek: number = offset - this.privBufferStartOffset;\r\n\r\n        let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n\r\n        let i: number = 0;\r\n\r\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n        }\r\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\r\n        this.privBuffers = this.privBuffers.slice(i);\r\n    }\r\n\r\n    // Finds the time a buffer of audio was first seen by offset.\r\n    public findTimeAtOffset(offset: number): number {\r\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\r\n            return 0;\r\n        }\r\n\r\n        for (const value of this.privBuffers) {\r\n            const startOffset: number = (value.byteOffset / this.privBytesPerSecond) * 1e7;\r\n            const endOffset: number = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\r\n\r\n            if (offset >= startOffset && offset <= endOffset) {\r\n                return value.chunk.timeReceived;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Primary use of this class is to help debugging problems with the replay\r\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\r\n// the ArrayBuffer directly.\r\nclass BufferEntry {\r\n    public chunk: IStreamChunk<ArrayBuffer>;\r\n    public serial: number;\r\n    public byteOffset: number;\r\n\r\n    public constructor(chunk: IStreamChunk<ArrayBuffer>, serial: number, byteOffset: number) {\r\n        this.chunk = chunk;\r\n        this.serial = serial;\r\n        this.byteOffset = byteOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport bent, { BentResponse, RequestBody } from \"bent\";\r\nimport {\r\n    ArgumentNullError,\r\n    Deferred\r\n} from \"../common/Exports\";\r\nimport { IRequestOptions } from \"./Exports\";\r\n\r\nexport enum RestRequestType {\r\n    Get = \"GET\",\r\n    Post = \"POST\",\r\n    Delete = \"DELETE\",\r\n    File = \"file\",\r\n}\r\n\r\nexport interface IRestResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: any;\r\n    headers: string;\r\n}\r\n\r\ninterface JsonError {\r\n    error?: {\r\n        message: string;\r\n    };\r\n}\r\n\r\n// accept rest operations via request method and return abstracted objects from server response\r\nexport class RestMessageAdapter {\r\n\r\n    private privIgnoreCache: boolean;\r\n    private privHeaders: { [key: string]: string };\r\n\r\n    public constructor(\r\n        configParams: IRequestOptions\r\n        ) {\r\n\r\n        if (!configParams) {\r\n            throw new ArgumentNullError(\"configParams\");\r\n        }\r\n\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public static extractHeaderValue(headerKey: string, headers: string): string {\r\n        let headerValue: string = \"\";\r\n\r\n        try {\r\n            const arr = headers.trim().split(/[\\r\\n]+/);\r\n            const headerMap: { [key: string]: string } = {};\r\n            arr.forEach((line: string): void => {\r\n                const parts = line.split(\": \");\r\n                const header = parts.shift().toLowerCase();\r\n                const value = parts.join(\": \");\r\n                headerMap[header] = value;\r\n            });\r\n\r\n            headerValue = headerMap[headerKey.toLowerCase()];\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n\r\n        return headerValue;\r\n    }\r\n\r\n    public set options(configParams: IRequestOptions) {\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public setHeaders(key: string, value: string): void {\r\n        this.privHeaders[key] = value;\r\n    }\r\n\r\n    public request(\r\n        method: RestRequestType,\r\n        uri: string,\r\n        queryParams: { [key: string]: any } = {},\r\n        body: any = null,\r\n        ): Promise<IRestResponse> {\r\n\r\n        const responseReceivedDeferral = new Deferred<IRestResponse>();\r\n\r\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\r\n        const handleRestResponse = (data: BentResponse, j: JsonError = {}): IRestResponse => {\r\n            const d: { statusText?: string; statusMessage?: string } = data;\r\n            return {\r\n                data: JSON.stringify(j),\r\n                headers: JSON.stringify(data.headers),\r\n                json: j,\r\n                ok: data.statusCode >= 200 && data.statusCode < 300,\r\n                status: data.statusCode,\r\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\r\n            };\r\n        };\r\n\r\n        const send = (postData: RequestBody): void => {\r\n            const sendRequest = bent(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\r\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : `?${this.queryParams(queryParams)}`;\r\n            sendRequest(params, postData).then( async (data: BentResponse): Promise<void> => {\r\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\r\n                    // No JSON from Delete and reset (204) operations\r\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                } else {\r\n                    try {\r\n                        const j: JsonError = await data.json() as JsonError;\r\n                        responseReceivedDeferral.resolve(handleRestResponse(data, j));\r\n                    } catch {\r\n                        responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                    }\r\n                }\r\n            }).catch((error: string): void => {\r\n                responseReceivedDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        if (this.privIgnoreCache) {\r\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\r\n        }\r\n\r\n        if (method === RestRequestType.Post && body) {\r\n            this.privHeaders[\"content-type\"] = \"application/json\";\r\n            this.privHeaders[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        send(body as RequestBody);\r\n        return responseReceivedDeferral.promise;\r\n    }\r\n\r\n    private queryParams(params: { [key: string]: string } = {}): string {\r\n        return Object.keys(params)\r\n            .map((k: string): string => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n            .join(\"&\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionOpenResponse,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IConnection,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\nimport { WebsocketMessageAdapter } from \"./WebsocketMessageAdapter\";\r\n\r\nexport class WebsocketConnection implements IConnection {\r\n\r\n    private privUri: string;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privConnectionMessageAdapter: WebsocketMessageAdapter;\r\n    private privId: string;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        queryParameters: IStringDictionary<string>,\r\n        headers: IStringDictionary<string>,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        enableCompression: boolean = false,\r\n        connectionId?: string) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.privMessageFormatter = messageFormatter;\r\n\r\n        let queryParams = \"\";\r\n        let i = 0;\r\n\r\n        if (queryParameters) {\r\n            for (const paramName in queryParameters) {\r\n                if (paramName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n\r\n                    const key = encodeURIComponent(paramName);\r\n                    queryParams += key;\r\n\r\n                    let val = queryParameters[paramName];\r\n                    if (val) {\r\n                        val = encodeURIComponent(val);\r\n                        queryParams += `=${val}`;\r\n                    }\r\n\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (headers) {\r\n            for (const headerName in headers) {\r\n                if (headerName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(headers[headerName]);\r\n                    queryParams += `${headerName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.privUri = uri + queryParams;\r\n        this.privId = connectionId ? connectionId : createNoDashGuid();\r\n\r\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter(\r\n            this.privUri,\r\n            this.id,\r\n            this.privMessageFormatter,\r\n            proxyInfo,\r\n            headers,\r\n            enableCompression);\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        this.privIsDisposed = true;\r\n\r\n        if (this.privConnectionMessageAdapter) {\r\n            await this.privConnectionMessageAdapter.close();\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public state(): ConnectionState {\r\n        return this.privConnectionMessageAdapter.state;\r\n    }\r\n\r\n    public open(): Promise<ConnectionOpenResponse> {\r\n        return this.privConnectionMessageAdapter.open();\r\n    }\r\n\r\n    public send(message: ConnectionMessage): Promise<void> {\r\n        return this.privConnectionMessageAdapter.send(message);\r\n    }\r\n\r\n    public read(): Promise<ConnectionMessage> {\r\n        return this.privConnectionMessageAdapter.read();\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionMessageAdapter.events;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Node.JS specific web socket / browser support.\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\nimport * as http from \"http\";\r\nimport * as net from \"net\";\r\nimport * as tls from \"tls\";\r\nimport Agent from \"agent-base\";\r\nimport HttpsProxyAgent from \"https-proxy-agent\";\r\n\r\nimport ws from \"ws\";\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ArgumentNullError,\r\n    BackgroundEvent,\r\n    ConnectionClosedEvent,\r\n    ConnectionErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    ConnectionOpenResponse,\r\n    ConnectionStartEvent,\r\n    ConnectionState,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    Queue,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\ninterface ISendItem {\r\n    Message: ConnectionMessage;\r\n    RawWebsocketMessage: RawWebsocketMessage;\r\n    sendStatusDeferral: Deferred<void>;\r\n}\r\n\r\nexport class WebsocketMessageAdapter {\r\n    private privConnectionState: ConnectionState;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privWebsocketClient: WebSocket | ws;\r\n\r\n    private privSendMessageQueue: Queue<ISendItem>;\r\n    private privReceivingMessageQueue: Queue<ConnectionMessage>;\r\n    private privConnectionEstablishDeferral: Deferred<ConnectionOpenResponse>;\r\n    private privCertificateValidatedDeferral: Deferred<void>;\r\n    private privDisconnectDeferral: Deferred<void>;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privConnectionId: string;\r\n    private privUri: string;\r\n    private proxyInfo: ProxyInfo;\r\n    private privHeaders: { [key: string]: string };\r\n    private privLastErrorReceived: string;\r\n    private privEnableCompression: boolean;\r\n\r\n    public static forceNpmWebSocket: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        connectionId: string,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        headers: { [key: string]: string },\r\n        enableCompression: boolean) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.proxyInfo = proxyInfo;\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privConnectionId = connectionId;\r\n        this.privMessageFormatter = messageFormatter;\r\n        this.privConnectionState = ConnectionState.None;\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n        this.privEnableCompression = enableCompression;\r\n\r\n        // Add the connection ID to the headers\r\n        this.privHeaders[HeaderNames.ConnectionId] = this.privConnectionId;\r\n\r\n        this.privLastErrorReceived = \"\";\r\n    }\r\n\r\n    public get state(): ConnectionState {\r\n        return this.privConnectionState;\r\n    }\r\n\r\n    public open(): Promise<ConnectionOpenResponse> {\r\n        if (this.privConnectionState === ConnectionState.Disconnected) {\r\n            return Promise.reject<ConnectionOpenResponse>(`Cannot open a connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        if (this.privConnectionEstablishDeferral) {\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.privConnectionEstablishDeferral = new Deferred<ConnectionOpenResponse>();\r\n        this.privCertificateValidatedDeferral = new Deferred<void>();\r\n\r\n        this.privConnectionState = ConnectionState.Connecting;\r\n\r\n        try {\r\n\r\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\r\n                // Browser handles cert checks.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                this.privWebsocketClient = new WebSocket(this.privUri);\r\n            } else {\r\n                const options: ws.ClientOptions = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression };\r\n                // The ocsp library will handle validation for us and fail the connection if needed.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                options.agent = this.getAgent();\r\n                // Workaround for https://github.com/microsoft/cognitive-services-speech-sdk-js/issues/465\r\n                // Which is root caused by https://github.com/TooTallNate/node-agent-base/issues/61\r\n                const uri = new URL(this.privUri);\r\n                let protocol: string = uri.protocol;\r\n\r\n                if (protocol?.toLocaleLowerCase() === \"wss:\") {\r\n                    protocol = \"https:\";\r\n                } else if (protocol?.toLocaleLowerCase() === \"ws:\") {\r\n                    protocol = \"http:\";\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                (options.agent as any).protocol = protocol;\r\n                this.privWebsocketClient = new ws(this.privUri, options);\r\n            }\r\n\r\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\r\n            this.privReceivingMessageQueue = new Queue<ConnectionMessage>();\r\n            this.privDisconnectDeferral = new Deferred<void>();\r\n            this.privSendMessageQueue = new Queue<ISendItem>();\r\n            this.processSendQueue().catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        } catch (error) {\r\n            this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500, error as string));\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.onEvent(new ConnectionStartEvent(this.privConnectionId, this.privUri));\r\n\r\n        this.privWebsocketClient.onopen = (): void => {\r\n            this.privCertificateValidatedDeferral.promise.then((): void => {\r\n                this.privConnectionState = ConnectionState.Connected;\r\n                this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200, \"\"));\r\n            }, (error: string): void => {\r\n                this.privConnectionEstablishDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onerror = (e: { error: any; message: string; type: string; target: WebSocket | ws }): void => {\r\n            this.onEvent(new ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\r\n            this.privLastErrorReceived = e.message;\r\n        };\r\n\r\n        this.privWebsocketClient.onclose = (e: { wasClean: boolean; code: number; reason: string; target: WebSocket | ws }): void => {\r\n            if (this.privConnectionState === ConnectionState.Connecting) {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\r\n            } else {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                this.privWebsocketClient = null;\r\n                this.onEvent(new ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\r\n            }\r\n\r\n            this.onClose(e.code, e.reason).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onmessage = (e: { data: ws.Data; type: string; target: WebSocket | ws }): void => {\r\n            const networkReceivedTime = new Date().toISOString();\r\n            if (this.privConnectionState === ConnectionState.Connected) {\r\n                const deferred = new Deferred<ConnectionMessage>();\r\n                // let id = ++this.idCounter;\r\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\r\n                if (e.data instanceof ArrayBuffer) {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Binary, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage): void => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string): void => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid binary message format. Error: ${error}`);\r\n                        });\r\n                } else {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Text, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage): void => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string): void => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid text message format. Error: ${error}`);\r\n                        });\r\n                }\r\n            }\r\n        };\r\n\r\n        return this.privConnectionEstablishDeferral.promise;\r\n    }\r\n\r\n    public send(message: ConnectionMessage): Promise<void> {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(`Cannot send on connection that is in ${ConnectionState[this.privConnectionState]} state`);\r\n        }\r\n\r\n        const messageSendStatusDeferral = new Deferred<void>();\r\n        const messageSendDeferral = new Deferred<ISendItem>();\r\n\r\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\r\n\r\n        this.privMessageFormatter\r\n            .fromConnectionMessage(message)\r\n            .then((rawMessage: RawWebsocketMessage): void => {\r\n                messageSendDeferral.resolve({\r\n                    Message: message,\r\n                    RawWebsocketMessage: rawMessage,\r\n                    sendStatusDeferral: messageSendStatusDeferral,\r\n                });\r\n            }, (error: string): void => {\r\n                messageSendDeferral.reject(`Error formatting the message. ${error}`);\r\n            });\r\n\r\n        return messageSendStatusDeferral.promise;\r\n    }\r\n\r\n    public read(): Promise<ConnectionMessage> {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject<ConnectionMessage>(`Cannot read on connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        return this.privReceivingMessageQueue.dequeue();\r\n    }\r\n\r\n    public close(reason?: string): Promise<void> {\r\n        if (this.privWebsocketClient) {\r\n            if (this.privConnectionState !== ConnectionState.Disconnected) {\r\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\r\n            }\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.privDisconnectDeferral.promise;\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    private sendRawMessage(sendItem: ISendItem): Promise<void> {\r\n        try {\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\r\n\r\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\r\n            if (this.isWebsocketOpen) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\r\n            } else {\r\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\r\n            }\r\n            return Promise.resolve();\r\n\r\n        } catch (e) {\r\n            return Promise.reject(`websocket send error: ${e as string}`);\r\n        }\r\n    }\r\n\r\n    private async onClose(code: number, reason: string): Promise<void> {\r\n        const closeReason = `Connection closed. ${code}: ${reason}`;\r\n        this.privConnectionState = ConnectionState.Disconnected;\r\n        this.privDisconnectDeferral.resolve();\r\n        await this.privReceivingMessageQueue.drainAndDispose((): void => {\r\n            // TODO: Events for these ?\r\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\r\n        }, closeReason);\r\n\r\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem: ISendItem): void => {\r\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\r\n        }, closeReason);\r\n    }\r\n\r\n    private async processSendQueue(): Promise<void> {\r\n        while (true) {\r\n            const itemToSend: Promise<ISendItem> = this.privSendMessageQueue.dequeue();\r\n            const sendItem: ISendItem = await itemToSend;\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.sendRawMessage(sendItem);\r\n                sendItem.sendStatusDeferral.resolve();\r\n            } catch (sendError) {\r\n                sendItem.sendStatusDeferral.reject(sendError as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onEvent(event: ConnectionEvent): void {\r\n        this.privConnectionEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    private getAgent(): http.Agent {\r\n        // eslint-disable-next-line @typescript-eslint/unbound-method\r\n        const agent: { proxyInfo: ProxyInfo } = new Agent.Agent(this.createConnection) as unknown as { proxyInfo: ProxyInfo } ;\r\n\r\n        if (this.proxyInfo !== undefined &&\r\n            this.proxyInfo.HostName !== undefined &&\r\n            this.proxyInfo.Port > 0) {\r\n            agent.proxyInfo = this.proxyInfo;\r\n        }\r\n\r\n        return agent as unknown as http.Agent;\r\n    }\r\n\r\n    private static GetProxyAgent(proxyInfo: ProxyInfo): HttpsProxyAgent {\r\n        const httpProxyOptions: HttpsProxyAgent.HttpsProxyAgentOptions = {\r\n            host: proxyInfo.HostName,\r\n            port: proxyInfo.Port,\r\n        };\r\n\r\n        if (!!proxyInfo.UserName) {\r\n            httpProxyOptions.headers = {\r\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(`${proxyInfo.UserName}:${(proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password}`).toString(\"base64\"),\r\n            };\r\n        } else {\r\n            httpProxyOptions.headers = {};\r\n        }\r\n\r\n        httpProxyOptions.headers.requestOCSP = \"true\";\r\n\r\n        const httpProxyAgent: HttpsProxyAgent = new HttpsProxyAgent(httpProxyOptions);\r\n        return httpProxyAgent;\r\n    }\r\n\r\n    private createConnection(request: Agent.ClientRequest, options: Agent.RequestOptions): Promise<net.Socket> {\r\n        let socketPromise: Promise<net.Socket>;\r\n\r\n        options = {\r\n            ...options,\r\n            ...{\r\n                requestOCSP: true,\r\n                servername: options.host\r\n            }\r\n        };\r\n\r\n        if (!!this.proxyInfo) {\r\n            const httpProxyAgent: HttpsProxyAgent = WebsocketMessageAdapter.GetProxyAgent(this.proxyInfo);\r\n            const baseAgent: Agent.Agent = httpProxyAgent as unknown as Agent.Agent;\r\n\r\n            socketPromise = new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void): void => {\r\n                baseAgent.callback(request, options, (error: Error, socket: net.Socket): void => {\r\n                    if (!!error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve(socket);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            if (!!options.secureEndpoint) {\r\n                socketPromise = Promise.resolve(tls.connect(options));\r\n            } else {\r\n                socketPromise = Promise.resolve(net.connect(options));\r\n            }\r\n        }\r\n\r\n        return socketPromise;\r\n    }\r\n\r\n    private get isWebsocketOpen(): boolean {\r\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { LanguageUnderstandingModelImpl } from \"../sdk/LanguageUnderstandingModel\";\r\n\r\n/**\r\n * @class AddedLmIntent\r\n */\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class AddedLmIntent {\r\n    public modelImpl: LanguageUnderstandingModelImpl;\r\n    public intentName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param modelImpl - The model.\r\n     * @param intentName - The intent name.\r\n     */\r\n    public constructor(modelImpl: LanguageUnderstandingModelImpl, intentName: string) {\r\n        this.modelImpl = modelImpl;\r\n        this.intentName = intentName;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents the JSON used in the agent.config message sent to the speech service.\r\n */\r\nexport class AgentConfig {\r\n    private iPrivConfig: IAgentConfig;\r\n\r\n    public toJsonString(): string {\r\n        return JSON.stringify(this.iPrivConfig);\r\n    }\r\n\r\n    public get(): IAgentConfig {\r\n        return this.iPrivConfig;\r\n    }\r\n\r\n    /**\r\n     * Setter for the agent.config object.\r\n     * @param value a JSON serializable object.\r\n     */\r\n    public set(value: IAgentConfig): void {\r\n        this.iPrivConfig = value;\r\n    }\r\n}\r\n\r\nexport interface IAgentConfig {\r\n    botInfo: {\r\n        commType: string;\r\n        connectionId: string;\r\n        conversationId: string;\r\n        fromId: string;\r\n        commandsCulture: string;\r\n        ttsAudioFormat: string;\r\n    };\r\n    version: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    public constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public fetch(authFetchEventId: string): Promise<AuthInfo> {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo> {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private static privTokenPrefix: string = \"bearer \";\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    public constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch(authFetchEventId: string): Promise<AuthInfo> {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string): AuthInfo => new AuthInfo(HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n\r\n    public fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo> {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string): AuthInfo => new AuthInfo(HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ServicePropertiesPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { PropertyId } from \"../sdk/Exports\";\r\nimport { AuthInfo, IConnectionFactory, RecognizerConfig } from \"./Exports\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport abstract class ConnectionFactoryBase implements IConnectionFactory {\r\n\r\n    public static getHostSuffix(region: string): string {\r\n        if (!!region) {\r\n            if (region.toLowerCase().startsWith(\"china\")) {\r\n                return \".azure.cn\";\r\n            }\r\n            if (region.toLowerCase().startsWith(\"usgov\")) {\r\n                return \".azure.us\";\r\n            }\r\n        }\r\n        return \".microsoft.com\";\r\n    }\r\n\r\n    public abstract create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n\r\n    protected setCommonUrlParams(\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const propertyIdToParameterMap: Map<number, string> = new Map([\r\n            [PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames.SegmentationSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames.EnableAudioLogging],\r\n            [PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames.EndSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames.InitialSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames.Postprocessing],\r\n            [PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames.Profanity],\r\n            [PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames.EnableWordLevelTimestamps],\r\n            [PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames.StableIntermediateThreshold],\r\n        ]);\r\n\r\n        propertyIdToParameterMap.forEach((parameterName: string, propertyId: PropertyId): void => {\r\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\r\n        });\r\n\r\n\r\n        const serviceProperties: IStringDictionary<string> = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        Object.keys(serviceProperties).forEach((value: string): void => {\r\n            queryParams[value] = serviceProperties[value];\r\n        });\r\n    }\r\n\r\n    protected setUrlParameter(\r\n        propId: PropertyId,\r\n        parameterName: string,\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const value: string = config.parameters.getProperty(propId, undefined);\r\n\r\n        // FIXME: The .search() check will incorrectly match parameter name anywhere in the string\r\n        //        including e.g. the path portion, or even as a substring of other query parameters\r\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\r\n            queryParams[parameterName] = value.toLocaleLowerCase();\r\n        }\r\n    }\r\n\r\n}\r\n","import { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    ResultReason,\r\n    SpeechRecognitionResult\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis\r\n} from \"./Exports\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class ConversationServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.handleSpeechPhraseMessage = async (textBody: string): Promise<void> => this.handleSpeechPhrase(textBody);\r\n        this.handleSpeechHypothesisMessage = (textBody: string): void => this.handleSpeechHypothesis(textBody);\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n        void connectionMessage;\r\n        return;\r\n    }\r\n\r\n    protected handleRecognizedCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        void result;\r\n        void offset;\r\n        void sessionId;\r\n        return;\r\n    }\r\n\r\n    protected handleRecognizingCallback(result: SpeechRecognitionResult, duration: number, sessionId: string): void {\r\n        void result;\r\n        void duration;\r\n        void sessionId;\r\n        return;\r\n    }\r\n\r\n    protected async processSpeechMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n        let processed: boolean = false;\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                if (!!this.handleSpeechHypothesisMessage) {\r\n                    this.handleSpeechHypothesisMessage(connectionMessage.textBody);\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                if (!!this.handleSpeechPhraseMessage) {\r\n                    await this.handleSpeechPhraseMessage(connectionMessage.textBody);\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n            // Implementing to allow inheritance\r\n            void sessionId;\r\n            void requestId;\r\n            void cancellationReason;\r\n            void errorCode;\r\n            void error;\r\n        }\r\n\r\n    protected async handleSpeechPhrase(textBody: string): Promise<void> {\r\n\r\n        const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(textBody);\r\n        const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, textBody);\r\n        const simpleOffset = simple.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n        let offset = simpleOffset;\r\n\r\n        this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n        if (ResultReason.Canceled === resultReason) {\r\n            const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n            const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n            await this.cancelRecognitionLocal(\r\n                cancelReason,\r\n                cancellationErrorCode,\r\n                EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n        } else {\r\n            if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                    result = new SpeechRecognitionResult(\r\n                        this.privRequestSession.requestId,\r\n                        resultReason,\r\n                        simple.DisplayText,\r\n                        simple.Duration,\r\n                        simpleOffset,\r\n                        simple.Language,\r\n                        simple.LanguageDetectionConfidence,\r\n                        simple.SpeakerId,\r\n                        undefined,\r\n                        textBody,\r\n                        resultProps);\r\n                } else {\r\n                    const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(textBody);\r\n                    const totalOffset: number = detailed.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n                    const offsetCorrectedJson: string = detailed.getJsonWithCorrectedOffsets(totalOffset);\r\n\r\n                    result = new SpeechRecognitionResult(\r\n                        this.privRequestSession.requestId,\r\n                        resultReason,\r\n                        detailed.Text,\r\n                        detailed.Duration,\r\n                        totalOffset,\r\n                        detailed.Language,\r\n                        detailed.LanguageDetectionConfidence,\r\n                        detailed.SpeakerId,\r\n                        undefined,\r\n                        offsetCorrectedJson,\r\n                        resultProps);\r\n\r\n                        offset = result.offset;\r\n                }\r\n\r\n                this.handleRecognizedCallback(result, offset, this.privRequestSession.sessionId);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleSpeechHypothesis(textBody: string): void {\r\n        const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(textBody);\r\n        const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, textBody);\r\n\r\n        const result = new SpeechRecognitionResult(\r\n            this.privRequestSession.requestId,\r\n            ResultReason.RecognizingSpeech,\r\n            hypothesis.Text,\r\n            hypothesis.Duration,\r\n            offset,\r\n            hypothesis.Language,\r\n            hypothesis.LanguageDetectionConfidence,\r\n            hypothesis.SpeakerId,\r\n            undefined,\r\n            textBody,\r\n            resultProps);\r\n\r\n        this.privRequestSession.onHypothesis(offset);\r\n\r\n        this.handleRecognizingCallback(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport { OutputFormatPropertyName } from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { DialogServiceConfig, OutputFormat, PropertyId } from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { AuthInfo, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport class DialogConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private static readonly ApiKey: string = \"api\";\r\n    private static readonly BaseUrl: string = \"convai.speech\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        const applicationId: string = config.parameters.getProperty(PropertyId.Conversation_ApplicationId, \"\");\r\n        const dialogType: string = config.parameters.getProperty(PropertyId.Conversation_DialogType);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\r\n        const requestTurnStatus: string = config.parameters.getProperty(PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[HeaderNames.ConnectionId] = connectionId;\r\n        queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        queryParams[QueryParameterNames.Language] = language;\r\n        queryParams[QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\r\n        if (applicationId) {\r\n            queryParams[QueryParameterNames.BotId] = applicationId;\r\n            if (dialogType === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                queryParams[HeaderNames.CustomCommandsAppId] = applicationId;\r\n            }\r\n        }\r\n\r\n        const resourceInfix: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\r\n            : \"\";\r\n        const version: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\r\n            : dialogType === DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\r\n            : \"v0\";\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (authInfo.token != null && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n\r\n        // The URL used for connection is chosen in a priority order of specification:\r\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\r\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\r\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, \"\");\r\n        if (!endpoint) {\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(\r\n                PropertyId.SpeechServiceConnection_Host,\r\n                `wss://${region}.${DialogConnectionFactory.BaseUrl}${hostSuffix}`);\r\n            const standardizedHost: string = host.endsWith(\"/\") ? host : host + \"/\";\r\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.ApiKey}/${version}`;\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ReplayableAudioNode\r\n} from \"../common.browser/Exports\";\r\nimport { SendingAgentContextMessageEvent } from \"../common/DialogEvents\";\r\nimport {\r\n    BackgroundEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    createGuid,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    DialogEvent,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    ActivityReceivedEventArgs,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    DialogServiceConfig,\r\n    DialogServiceConnector,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    TurnStatusReceivedEventArgs,\r\n} from \"../sdk/Exports\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechDetected,\r\n    SpeechHypothesis,\r\n    SpeechKeyword,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognitionMode, RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class DialogServiceAdapter extends ServiceRecognizerBase {\r\n    private privDialogServiceConnector: DialogServiceConnector;\r\n\r\n    private privDialogAudioSource: IAudioSource;\r\n\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private agentConfigSent: boolean;\r\n    private privLastResult: SpeechRecognitionResult;\r\n    private privEvents: EventSource<DialogEvent>;\r\n\r\n    // Turns are of two kinds:\r\n    // 1: SR turns, end when the SR result is returned and then turn end.\r\n    // 2: Service turns where an activity is sent by the service along with the audio.\r\n    private privTurnStateManager: DialogServiceTurnStateManager;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        dialogServiceConnector: DialogServiceConnector) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\r\n\r\n        this.privEvents = new EventSource<DialogEvent>();\r\n        this.privDialogServiceConnector = dialogServiceConnector;\r\n        this.receiveMessageOverride = (): Promise<void> => this.receiveDialogMessageOverride();\r\n        this.privTurnStateManager = new DialogServiceTurnStateManager();\r\n        this.recognizeOverride =\r\n            (recoMode: RecognitionMode, successCallback: (e: SpeechRecognitionResult) => void, errorCallback: (e: string) => void): Promise<void> =>\r\n            this.listenOnce(recoMode, successCallback, errorCallback);\r\n        this.postConnectImplOverride = (connection: Promise<IConnection>): Promise<IConnection> => this.dialogConnectImpl(connection);\r\n        this.configConnectionOverride = (connection: IConnection): Promise<IConnection> => this.configConnection(connection);\r\n        this.disconnectOverride = (): Promise<void> => this.privDisconnect();\r\n        this.privDialogAudioSource = audioSource;\r\n\r\n        this.agentConfigSent = false;\r\n        this.privLastResult = null;\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                this.terminateMessageLoop = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const interactionGuid: string = createGuid();\r\n        const requestId: string = createNoDashGuid();\r\n\r\n        const agentMessage: any = {\r\n            context: {\r\n                interactionId: interactionGuid\r\n            },\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n            messagePayload: JSON.parse(message),\r\n            version: 0.5\r\n        };\r\n\r\n        const agentMessageJson = JSON.stringify(agentMessage);\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"agent\",\r\n            requestId,\r\n            \"application/json\",\r\n            agentMessageJson));\r\n\r\n    }\r\n\r\n    protected async privDisconnect(): Promise<void> {\r\n        await this.cancelRecognition(this.privRequestSession.sessionId,\r\n            this.privRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        this.agentConfigSent = false;\r\n        return;\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        let result: SpeechRecognitionResult;\r\n        let processed: boolean;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.phrase\":\r\n                const speechPhrase: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + speechPhrase.Offset + speechPhrase.Duration);\r\n\r\n                if (speechPhrase.RecognitionStatus !== RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== RecognitionStatus.Error) {\r\n                    const args: SpeechRecognitionEventArgs = this.fireEventForResult(speechPhrase, resultProps);\r\n                    this.privLastResult = args.result;\r\n\r\n                    if (!!this.privDialogServiceConnector.recognized) {\r\n                        try {\r\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\r\n                            /* eslint-disable no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.hypothesis\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognizing) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.keyword\":\r\n                const keyword: SpeechKeyword = SpeechKeyword.fromJSON(connectionMessage.textBody);\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    keyword.Status === \"Accepted\" ? ResultReason.RecognizedKeyword : ResultReason.NoMatch,\r\n                    keyword.Text,\r\n                    keyword.Duration,\r\n                    keyword.Offset,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                if (keyword.Status !== \"Accepted\") {\r\n                    this.privLastResult = result;\r\n                }\r\n\r\n                const event = new SpeechRecognitionEventArgs(result, result.duration, result.resultId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognized) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"audio\":\r\n                {\r\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\r\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\r\n                    try {\r\n                        // Empty binary message signals end of stream.\r\n                        if (!connectionMessage.binaryBody) {\r\n                            turn.endAudioStream();\r\n                        } else {\r\n                            turn.audioStream.write(connectionMessage.binaryBody);\r\n                        }\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"response\":\r\n                {\r\n                    this.handleResponseMessage(connectionMessage);\r\n\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n        }\r\n\r\n        if (!!this.privDialogServiceConnector.canceled) {\r\n            const properties: PropertyCollection = new PropertyCollection();\r\n            properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n\r\n            try {\r\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n\r\n            if (!!this.privSuccessCallback) {\r\n                const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                    undefined, // ResultId\r\n                    ResultReason.Canceled,\r\n                    undefined, // Text\r\n                    undefined, // Duration\r\n                    undefined, // Offset\r\n                    undefined, // Language\r\n                    undefined, // Language Detection Confidence\r\n                    undefined, // Speaker Id\r\n                    error,\r\n                    undefined, // Json\r\n                    properties);\r\n                try {\r\n                    this.privSuccessCallback(result);\r\n                    this.privSuccessCallback = undefined;\r\n                    /* eslint-disable no-empty */\r\n                } catch { }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async listenOnce(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallback: (e: string) => void\r\n    ): Promise<void> {\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallback;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages();\r\n\r\n        const node: IAudioStreamNode = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privDialogAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privDialogAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error as string);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* eslint-disable no-empty */\r\n        audioSendPromise.then((): void => { /* add? return true;*/ }, async (error: string): Promise<void> => {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n    }\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    private dialogConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    private receiveDialogMessageOverride(): Promise<void> {\r\n\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        const loop = async (): Promise<void> => {\r\n            try {\r\n                const isDisposed: boolean = this.isDisposed();\r\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\r\n                if (isDisposed || terminateMessageLoop) {\r\n                    // We're done.\r\n                    communicationCustodian.resolve(undefined);\r\n                    return;\r\n                }\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const message: ConnectionMessage = await connection.read();\r\n\r\n                if (!message) {\r\n                    return loop();\r\n                }\r\n\r\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        {\r\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.StartTurn(turnRequestId);\r\n                            } else {\r\n                                this.privRequestSession.onServiceTurnStartResponse();\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n\r\n                        let json: string;\r\n\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n\r\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        {\r\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\r\n\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnEndRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\r\n                            } else {\r\n                                // Audio session turn\r\n\r\n                                const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\r\n\r\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                                    if (!!this.privRecognizer.sessionStopped) {\r\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                                    }\r\n                                }\r\n\r\n                                // report result to promise.\r\n                                if (!!this.privSuccessCallback && this.privLastResult) {\r\n                                    try {\r\n                                        this.privSuccessCallback(this.privLastResult);\r\n                                        this.privLastResult = null;\r\n                                    } catch (e) {\r\n                                        if (!!this.privErrorCallback) {\r\n                                            this.privErrorCallback(e as string);\r\n                                        }\r\n                                    }\r\n                                    // Only invoke the call back once.\r\n                                    // and if it's successful don't invoke the\r\n                                    // error after that.\r\n                                    this.privSuccessCallback = undefined;\r\n                                    this.privErrorCallback = undefined;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        try {\r\n                            const processed = await this.processTypeSpecificMessages(connectionMessage);\r\n                            if (!processed) {\r\n                                if (!!this.serviceEvents) {\r\n                                    this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                                }\r\n                            }\r\n                        } catch (e) {\r\n                            //\r\n                        }\r\n                }\r\n                const ret: Promise<void> = loop();\r\n\r\n                return ret;\r\n            } catch (error) {\r\n                this.terminateMessageLoop = true;\r\n                communicationCustodian.resolve();\r\n            }\r\n        };\r\n\r\n        loop().catch((reason: string): void => {\r\n            Events.instance.onEvent(new BackgroundEvent(reason));\r\n        });\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n\r\n        this.terminateMessageLoop = false;\r\n\r\n        try {\r\n            await this.receiveDialogMessageOverride();\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error as string);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configConnection(connection: IConnection): Promise<IConnection> {\r\n        if (this.terminateMessageLoop) {\r\n            this.terminateMessageLoop = false;\r\n            return Promise.reject(\"Connection to service terminated.\");\r\n        }\r\n\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendAgentConfig(connection);\r\n        return connection;\r\n    }\r\n\r\n    private async sendPreAudioMessages(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.addKeywordContextData();\r\n        await this.sendSpeechContext(connection, true);\r\n        await this.sendAgentContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n    }\r\n\r\n    private sendAgentConfig(connection: IConnection): Promise<void> {\r\n        if (this.agentConfig && !this.agentConfigSent) {\r\n\r\n            if (this.privRecognizerConfig\r\n                .parameters\r\n                .getProperty(PropertyId.Conversation_DialogType) === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                const config = this.agentConfig.get();\r\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\r\n                this.agentConfig.set(config);\r\n            }\r\n            this.onEvent(new SendingAgentContextMessageEvent(this.agentConfig));\r\n\r\n            const agentConfigJson = this.agentConfig.toJsonString();\r\n\r\n            // guard against sending this multiple times on one connection\r\n            this.agentConfigSent = true;\r\n\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"agent.config\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                agentConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    private sendAgentContext(connection: IConnection): Promise<void> {\r\n        const guid: string = createGuid();\r\n\r\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n\r\n        const agentContext: any = {\r\n            channelData: \"\",\r\n            context: {\r\n                interactionId: guid\r\n            },\r\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\r\n            version: 0.5\r\n        };\r\n\r\n        const agentContextJson = JSON.stringify(agentContext);\r\n\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speech.agent.context\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            agentContextJson));\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: SimpleSpeechPhrase, properties: PropertyCollection): SpeechRecognitionEventArgs {\r\n        const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\r\n\r\n        const offset: number = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n        const result = new SpeechRecognitionResult(\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.DisplayText,\r\n            serviceResult.Duration,\r\n            offset,\r\n            serviceResult.Language,\r\n            serviceResult.LanguageDetectionConfidence,\r\n            undefined,\r\n            undefined,\r\n            JSON.stringify(serviceResult),\r\n            properties);\r\n\r\n        const ev = new SpeechRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private handleResponseMessage(responseMessage: SpeechConnectionMessage): void {\r\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\r\n        // event according to the message type that's specified.\r\n        const responsePayload: { messageType: string } = JSON.parse(responseMessage.textBody) as { messageType: string };\r\n        switch (responsePayload.messageType.toLowerCase()) {\r\n            case \"message\":\r\n                const responseRequestId = responseMessage.requestId.toUpperCase();\r\n                const activityPayload: ActivityPayloadResponse = ActivityPayloadResponse.fromJSON(responseMessage.textBody);\r\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\r\n\r\n                // update the conversation Id\r\n                if (activityPayload.conversationId) {\r\n                    const updateAgentConfig = this.agentConfig.get();\r\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\r\n                    this.agentConfig.set(updateAgentConfig);\r\n                }\r\n\r\n                const pullAudioOutputStream: PullAudioOutputStreamImpl = turn.processActivityPayload(\r\n                    activityPayload,\r\n                    AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\r\n                const activity = new ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\r\n                if (!!this.privDialogServiceConnector.activityReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\r\n                        /* eslint-disable-next-line no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"messagestatus\":\r\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.turnStatusReceived(\r\n                            this.privDialogServiceConnector,\r\n                            new TurnStatusReceivedEventArgs(responseMessage.textBody));\r\n                        /* eslint-disable-next-line no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            default:\r\n                Events.instance.onEvent(\r\n                    new BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onEvent(event: DialogEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private addKeywordContextData(): void {\r\n        const keywordPropertyValue: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\r\n        if (keywordPropertyValue === undefined) {\r\n            return;\r\n        }\r\n\r\n        const keywordOffsetPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\r\n        const keywordDurationPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\r\n\r\n        const keywords = keywordPropertyValue.split(\";\");\r\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\r\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\r\n\r\n        const keywordDefinitionArray = [];\r\n        for (let i = 0; i < keywords.length; i++) {\r\n            const definition: { [section: string]: any } = {};\r\n            definition.text = keywords[i];\r\n            if (i < keywordOffsets.length) {\r\n                definition.offset = Number(keywordOffsets[i]);\r\n            }\r\n            if (i < keywordDurations.length) {\r\n                definition.duration = Number(keywordDurations[i]);\r\n            }\r\n            keywordDefinitionArray.push(definition);\r\n        }\r\n\r\n        this.speechContext.setSection(\"invocationSource\", \"VoiceActivationWithKeyword\");\r\n        this.speechContext.setSection(\"keywordDetection\", [{\r\n            clientDetectedKeywords: keywordDefinitionArray,\r\n            onReject: { action: \"EndOfTurn\" },\r\n            type: \"startTrigger\"\r\n        }]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport { ActivityPayloadResponse, MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnState {\r\n    private privRequestId: string;\r\n    private privIsCompleted: boolean;\r\n    private privAudioStream: PullAudioOutputStreamImpl;\r\n    private privTimeoutToken: any;\r\n    private privTurnManager: DialogServiceTurnStateManager;\r\n\r\n    public constructor(manager: DialogServiceTurnStateManager, requestId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privIsCompleted = false;\r\n        this.privAudioStream = null;\r\n        this.privTurnManager = manager;\r\n        this.resetTurnEndTimeout();\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStreamImpl {\r\n        // Called when is needed to stream.\r\n        this.resetTurnEndTimeout();\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public processActivityPayload(payload: ActivityPayloadResponse, audioFormat?: AudioOutputFormatImpl): PullAudioOutputStreamImpl {\r\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\r\n            this.privAudioStream = AudioOutputStream.createPullStream() as PullAudioOutputStreamImpl;\r\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public endAudioStream(): void {\r\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\r\n            this.privAudioStream.close();\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.endAudioStream();\r\n    }\r\n\r\n    private resetTurnEndTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.privTimeoutToken = setTimeout((): void => {\r\n            this.privTurnManager.CompleteTurn(this.privRequestId);\r\n            return;\r\n        }, 2000);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    public constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IDynamicGrammar,\r\n    IDynamicGrammarGeneric,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\r\n * @class DynamicGrammarBuilder\r\n */\r\nexport class DynamicGrammarBuilder {\r\n\r\n    private privPhrases: string[];\r\n    private privGrammars: string[];\r\n\r\n    // Adds one more reference phrases to the dynamic grammar to send.\r\n    // All added phrases are generic phrases.\r\n    public addPhrase(phrase: string | string[]): void {\r\n        if (!this.privPhrases) {\r\n            this.privPhrases = [];\r\n        }\r\n\r\n        if (phrase instanceof Array) {\r\n            this.privPhrases = this.privPhrases.concat(phrase);\r\n        } else {\r\n            this.privPhrases.push(phrase);\r\n        }\r\n    }\r\n\r\n    // Clears all phrases stored in the current object.\r\n    public clearPhrases(): void {\r\n        this.privPhrases = undefined;\r\n    }\r\n\r\n    // Adds one or more reference grammars to the current grammar.\r\n    public addReferenceGrammar(grammar: string | string[]): void {\r\n        if (!this.privGrammars) {\r\n            this.privGrammars = [];\r\n        }\r\n\r\n        if (grammar instanceof Array) {\r\n            this.privGrammars = this.privGrammars.concat(grammar);\r\n        } else {\r\n            this.privGrammars.push(grammar);\r\n        }\r\n    }\r\n\r\n    // clears all grammars stored on the recognizer.\r\n    public clearGrammars(): void {\r\n        this.privGrammars = undefined;\r\n    }\r\n\r\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\r\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\r\n    // of a DynamicGrammarBuilder\r\n    public generateGrammarObject(): IDynamicGrammar {\r\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const retObj: IDynamicGrammar = {};\r\n        retObj.ReferenceGrammars = this.privGrammars;\r\n\r\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\r\n            const retPhrases: IDynamicGrammarGeneric[] = [];\r\n\r\n            this.privPhrases.forEach((value: string): void => {\r\n                retPhrases.push({\r\n                    Text: value,\r\n                });\r\n            });\r\n\r\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\r\n        }\r\n\r\n        return retObj;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Interfaces in this file represent the various nodes in the JSON that the speech service accepts\r\n// for dynamic grammars.\r\n\r\n/**\r\n * Top level grammar node\r\n */\r\nexport interface IDynamicGrammar {\r\n    ReferenceGrammars?: string[];\r\n    Groups?: IDynamicGrammarGroup[];\r\n}\r\n\r\n/**\r\n * Group of Dynamic Grammar items of a common type.\r\n */\r\nexport interface IDynamicGrammarGroup {\r\n    Type: string;\r\n    Name?: string;\r\n    SubstringMatch?: string; // None, LeftRooted, PartialName\r\n    Items: IDynamicGrammarPeople[] | IDynamicGrammarGeneric[];\r\n}\r\n\r\nexport interface IDynamicGrammarPeople {\r\n    Name: string;\r\n    First?: string;\r\n    Middle?: string;\r\n    Last?: string;\r\n    Synonyms?: string[];\r\n    Weight?: number;\r\n}\r\n\r\n/**\r\n * Generic phrase based dynamic grammars\r\n */\r\nexport interface IDynamicGrammarGeneric {\r\n    Text: string;\r\n    Synonyms?: string[];\r\n    Weight?: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports\";\r\nimport { RecognitionStatus } from \"./Exports\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            case RecognitionStatus.BadRequest:\r\n                reason = CancellationErrorCode.BadRequestParameters;\r\n                break;\r\n            case RecognitionStatus.Forbidden:\r\n                reason = CancellationErrorCode.Forbidden;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n    public static implTranslateErrorDetails(cancellationErrorCode: CancellationErrorCode): string {\r\n        let errorDetails: string = \"The speech service encountered an internal error and could not continue.\";\r\n        switch (cancellationErrorCode) {\r\n            case CancellationErrorCode.Forbidden:\r\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\r\n                break;\r\n            case CancellationErrorCode.BadRequestParameters:\r\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\r\n                break;\r\n            case CancellationErrorCode.TooManyRequests:\r\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return errorDetails;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Make sure not to export internal modules.\r\n//\r\nexport * from \"./CognitiveSubscriptionKeyAuthentication\";\r\nexport * from \"./CognitiveTokenAuthentication\";\r\nexport * from \"./IAuthentication\";\r\nexport * from \"./IConnectionFactory\";\r\nexport * from \"./ISynthesisConnectionFactory\";\r\nexport * from \"./IntentConnectionFactory\";\r\nexport * from \"./SpeakerRecognitionConnectionFactory\";\r\nexport * from \"./RecognitionEvents\";\r\nexport * from \"./ServiceRecognizerBase\";\r\nexport * from \"./ConversationServiceRecognizer\";\r\nexport * from \"./RecognizerConfig\";\r\nexport * from \"./SpeechServiceInterfaces\";\r\nexport * from \"./WebsocketMessageFormatter\";\r\nexport * from \"./SpeechConnectionFactory\";\r\nexport * from \"./TranscriberConnectionFactory\";\r\nexport * from \"./TranslationConnectionFactory\";\r\nexport * from \"./SpeechSynthesisConnectionFactory\";\r\nexport * from \"./EnumTranslation\";\r\nexport * from \"./ServiceMessages/Enums\";\r\nexport * from \"./ServiceMessages/TranslationSynthesisEnd\";\r\nexport * from \"./ServiceMessages/TranslationHypothesis\";\r\nexport * from \"./ServiceMessages/TranslationPhrase\";\r\nexport * from \"./TranslationServiceRecognizer\";\r\nexport * from \"./ServiceMessages/SpeechDetected\";\r\nexport * from \"./ServiceMessages/SpeechHypothesis\";\r\nexport * from \"./ServiceMessages/SpeechKeyword\";\r\nexport * from \"./SpeechServiceRecognizer\";\r\nexport * from \"./TranscriptionServiceRecognizer\";\r\nexport * from \"./ServiceMessages/DetailedSpeechPhrase\";\r\nexport * from \"./ServiceMessages/SimpleSpeechPhrase\";\r\nexport * from \"./AddedLmIntent\";\r\nexport * from \"./IntentServiceRecognizer\";\r\nexport * from \"./ServiceMessages/IntentResponse\";\r\nexport * from \"./ServiceMessages/SpeakerResponse\";\r\nexport * from \"./RequestSession\";\r\nexport * from \"./SpeechContext\";\r\nexport * from \"./DynamicGrammarBuilder\";\r\nexport * from \"./DynamicGrammarInterfaces\";\r\nexport * from \"./DialogServiceAdapter\";\r\nexport * from \"./AgentConfig\";\r\nexport * from \"./Transcription/Exports\";\r\nexport * from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nexport * from \"./SynthesisTurn\";\r\nexport * from \"./SynthesisAdapterBase\";\r\nexport * from \"./SynthesisRestAdapter\";\r\nexport * from \"./SynthesizerConfig\";\r\nexport * from \"./SynthesisContext\";\r\nexport * from \"./SpeakerRecognitionConfig\";\r\nexport * from \"./SpeakerServiceRecognizer\";\r\nexport * from \"./VoiceServiceRecognizer\";\r\n\r\nexport const OutputFormatPropertyName: string = \"OutputFormat\";\r\nexport const CancellationErrorCodePropertyName: string = \"CancellationErrorCode\";\r\nexport const ServicePropertiesPropertyName: string = \"ServiceProperties\";\r\nexport const ForceDictationPropertyName: string = \"ForceDictation\";\r\nexport const AutoDetectSourceLanguagesOpenRangeOptionName: string = \"OpenRange\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class HeaderNames {\r\n    public static AuthKey: string = \"Ocp-Apim-Subscription-Key\";\r\n    public static Authorization: string = \"Authorization\";\r\n    public static SpIDAuthKey: string = \"Apim-Subscription-Id\";\r\n    public static ConnectionId: string = \"X-ConnectionId\";\r\n    public static ContentType: string = \"Content-Type\";\r\n    public static CustomCommandsAppId: string = \"X-CommandsAppId\";\r\n    public static Path: string = \"Path\";\r\n    public static RequestId: string = \"X-RequestId\";\r\n    public static RequestStreamId: string = \"X-StreamId\";\r\n    public static RequestTimestamp: string = \"X-Timestamp\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface IAuthentication {\r\n    fetch(authFetchEventId: string): Promise<AuthInfo>;\r\n    fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo>;\r\n}\r\n\r\nexport class AuthInfo {\r\n    private privHeaderName: string;\r\n    private privToken: string;\r\n\r\n    public constructor(headerName: string, token: string) {\r\n        this.privHeaderName = headerName;\r\n        this.privToken = token;\r\n    }\r\n\r\n    public get headerName(): string {\r\n        return this.privHeaderName;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privToken;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IConnection } from \"../common/Exports\";\r\nimport { AuthInfo } from \"./IAuthentication\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\n\r\nexport interface IConnectionFactory {\r\n    create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IConnection } from \"../common/Exports\";\r\nimport { AuthInfo } from \"./IAuthentication\";\r\nimport { SynthesizerConfig } from \"./SynthesizerConfig\";\r\n\r\nexport interface ISynthesisConnectionFactory {\r\n    create(\r\n        config: SynthesizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class IntentConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_IntentRegion);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\r\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            format: \"simple\",\r\n            language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    private getSpeechRegionFromIntentRegion(intentRegion: string): string {\r\n        switch (intentRegion) {\r\n            case \"West US\":\r\n            case \"US West\":\r\n            case \"westus\":\r\n                return \"uswest\";\r\n            case \"West US 2\":\r\n            case \"US West 2\":\r\n            case \"westus2\":\r\n                return \"uswest2\";\r\n            case \"South Central US\":\r\n            case \"US South Central\":\r\n            case \"southcentralus\":\r\n                return \"ussouthcentral\";\r\n            case \"West Central US\":\r\n            case \"US West Central\":\r\n            case \"westcentralus\":\r\n                return \"uswestcentral\";\r\n            case \"East US\":\r\n            case \"US East\":\r\n            case \"eastus\":\r\n                return \"useast\";\r\n            case \"East US 2\":\r\n            case \"US East 2\":\r\n            case \"eastus2\":\r\n                return \"useast2\";\r\n            case \"West Europe\":\r\n            case \"Europe West\":\r\n            case \"westeurope\":\r\n                return \"europewest\";\r\n            case \"North Europe\":\r\n            case \"Europe North\":\r\n            case \"northeurope\":\r\n                return \"europenorth\";\r\n            case \"Brazil South\":\r\n            case \"South Brazil\":\r\n            case \"southbrazil\":\r\n                return \"brazilsouth\";\r\n            case \"Australia East\":\r\n            case \"East Australia\":\r\n            case \"eastaustralia\":\r\n                return \"australiaeast\";\r\n            case \"Southeast Asia\":\r\n            case \"Asia Southeast\":\r\n            case \"southeastasia\":\r\n                return \"asiasoutheast\";\r\n            case \"East Asia\":\r\n            case \"Asia East\":\r\n            case \"eastasia\":\r\n                return \"asiaeast\";\r\n            default:\r\n                return intentRegion;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    Deferred,\r\n    IAudioSource,\r\n    MessageType,\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    IntentRecognizer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AddedLmIntent,\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    IntentResponse,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class IntentServiceRecognizer extends ServiceRecognizerBase {\r\n    private privIntentRecognizer: IntentRecognizer;\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent };\r\n    private privIntentDataSent: boolean;\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n    private privPendingIntentArgs: IntentRecognitionEventArgs;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: IntentRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privIntentRecognizer = recognizer;\r\n        this.privIntentDataSent = false;\r\n    }\r\n\r\n    public setIntents(addedIntents: { [id: string]: AddedLmIntent }, umbrellaIntent: AddedLmIntent): void {\r\n        this.privAddedLmIntents = addedIntents;\r\n        this.privUmbrellaIntent = umbrellaIntent;\r\n        this.privIntentDataSent = true;\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: IntentRecognitionResult;\r\n        let ev: IntentRecognitionEventArgs;\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n                const speechHypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingIntent,\r\n                    speechHypothesis.Text,\r\n                    speechHypothesis.Duration,\r\n                    speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                    speechHypothesis.Language,\r\n                    speechHypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(result.offset);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privIntentRecognizer.recognizing) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus),\r\n                    simple.DisplayText,\r\n                    simple.Duration,\r\n                    simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                    simple.Language,\r\n                    simple.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                const sendEvent: () => void = (): void => {\r\n                    if (!!this.privIntentRecognizer.recognized) {\r\n                        try {\r\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                            /* eslint-disable no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e as string);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                };\r\n\r\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\r\n                // If no intent data was sent, the terminal event is speech recognition being successful.\r\n                if (false === this.privIntentDataSent || ResultReason.NoMatch === ev.result.reason) {\r\n                    // Advance the buffers.\r\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n                    sendEvent();\r\n                } else {\r\n                    // Squirrel away the args, when the response event arrives it will build upon them\r\n                    // and then return\r\n                    this.privPendingIntentArgs = ev;\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"response\":\r\n                // Response from LUIS\r\n                ev = this.privPendingIntentArgs;\r\n                this.privPendingIntentArgs = undefined;\r\n\r\n                if (undefined === ev) {\r\n                    if (\"\" === connectionMessage.textBody) {\r\n                        // This condition happens if there is nothing but silence in the\r\n                        // audio sent to the service.\r\n                        return;\r\n                    }\r\n\r\n                    // Odd... Not sure this can happen\r\n                    ev = new IntentRecognitionEventArgs(new IntentRecognitionResult(), 0, this.privRequestSession.sessionId);\r\n                }\r\n\r\n                const intentResponse: IntentResponse = IntentResponse.fromJSON(connectionMessage.textBody);\r\n\r\n                // If LUIS didn't return anything, send the existing event, else\r\n                // modify it to show the match.\r\n                // See if the intent found is in the list of intents asked for.\r\n\r\n                if (null !== intentResponse && !!intentResponse.topScoringIntent && !!intentResponse.topScoringIntent.intent) {\r\n                    let addedIntent: AddedLmIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\r\n\r\n                    if (this.privUmbrellaIntent !== undefined) {\r\n                        addedIntent = this.privUmbrellaIntent;\r\n                    }\r\n\r\n                    if (!!addedIntent) {\r\n                        const intentId = addedIntent === undefined || addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\r\n                        let reason = ev.result.reason;\r\n\r\n                        if (undefined !== intentId) {\r\n                            reason = ResultReason.RecognizedIntent;\r\n                        }\r\n\r\n                        // make sure, properties is set.\r\n                        const properties = (undefined !== ev.result.properties) ?\r\n                            ev.result.properties : new PropertyCollection();\r\n\r\n                        properties.setProperty(PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\r\n\r\n                        ev = new IntentRecognitionEventArgs(\r\n                            new IntentRecognitionResult(\r\n                                intentId,\r\n                                ev.result.resultId,\r\n                                reason,\r\n                                ev.result.text,\r\n                                ev.result.duration,\r\n                                ev.result.offset,\r\n                                undefined,\r\n                                undefined,\r\n                                ev.result.errorDetails,\r\n                                ev.result.json,\r\n                                properties),\r\n                            ev.offset,\r\n                            ev.sessionId);\r\n\r\n                    }\r\n                }\r\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n\r\n                if (!!this.privIntentRecognizer.recognized) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(ev.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e as string);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privIntentRecognizer.canceled) {\r\n\r\n            const cancelEvent: IntentRecognitionCanceledEventArgs = new IntentRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: IntentRecognitionResult = new IntentRecognitionResult(\r\n                undefined, // Intent Id\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // LanguageDetectionConfidence\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class QueryParameterNames {\r\n    public static BotId: string = \"botid\";\r\n    public static CustomSpeechDeploymentId: string = \"cid\";\r\n    public static CustomVoiceDeploymentId: string = \"deploymentId\";\r\n    public static EnableAudioLogging: string = \"storeAudio\";\r\n    public static EnableLanguageId: string = \"lidEnabled\";\r\n    public static EnableWordLevelTimestamps: string = \"wordLevelTimestamps\";\r\n    public static EndSilenceTimeoutMs: string = \"endSilenceTimeoutMs\";\r\n    public static SegmentationSilenceTimeoutMs: string = \"segmentationSilenceTimeoutMs\";\r\n    public static Format: string = \"format\";\r\n    public static InitialSilenceTimeoutMs: string = \"initialSilenceTimeoutMs\";\r\n    public static Language: string = \"language\";\r\n    public static Profanity: string = \"profanity\";\r\n    public static RequestBotStatusMessages: string = \"enableBotMessageStatus\";\r\n    public static StableIntermediateThreshold: string = \"stableIntermediateThreshold\";\r\n    public static StableTranslation: string = \"stableTranslation\";\r\n    public static TestHooks: string = \"testhooks\";\r\n    public static Postprocessing: string = \"postprocessing\";\r\n    public static CtsMeetingId: string = \"meetingId\";\r\n    public static CtsDeviceId: string = \"deviceId\";\r\n    public static CtsIsParticipant: string = \"isParticipant\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    public constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    public constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    public constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    public constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    public constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    public constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport enum RecognitionMode {\r\n    Interactive,\r\n    Conversation,\r\n    Dictation,\r\n}\r\n\r\nexport enum SpeechResultFormat {\r\n    Simple,\r\n    Detailed,\r\n}\r\n\r\nexport class RecognizerConfig {\r\n    private privRecognitionMode: RecognitionMode;\r\n    private privLanguageIdMode: string;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privRecognitionActivityTimeout: number;\r\n    private privParameters: PropertyCollection;\r\n    private privMaxRetryCount: number;\r\n\r\n    public constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\r\n        this.privLanguageIdMode = parameters.getProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, undefined);\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognitionMode;\r\n    }\r\n\r\n    public set recognitionMode(value: RecognitionMode) {\r\n        this.privRecognitionMode = value;\r\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\r\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n\r\n    public get recognitionActivityTimeout(): number {\r\n        return this.privRecognitionActivityTimeout;\r\n    }\r\n\r\n    public get isContinuousRecognition(): boolean {\r\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\r\n    }\r\n\r\n    public get languageIdMode(): string {\r\n        return this.privLanguageIdMode;\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\r\n    }\r\n\r\n    public get recognitionEndpointVersion(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, undefined);\r\n    }\r\n\r\n    public get sourceLanguageModels(): { language: string; endpoint: string }[] {\r\n        const models: { language: string; endpoint: string }[] = [];\r\n        let modelsExist: boolean = false;\r\n        if (this.autoDetectSourceLanguages !== undefined) {\r\n            for (const language of this.autoDetectSourceLanguages.split(\",\")) {\r\n                const customProperty = language + PropertyId.SpeechServiceConnection_EndpointId.toString();\r\n                const modelId: string = this.parameters.getProperty(customProperty, undefined);\r\n                if (modelId !== undefined) {\r\n                    models.push( { language, endpoint: modelId });\r\n                    modelsExist = true;\r\n                } else {\r\n                    models.push( { language, endpoint: \"\" } );\r\n                }\r\n            }\r\n        }\r\n        return modelsExist ? models : undefined;\r\n    }\r\n\r\n    public get maxRetryCount(): number {\r\n        return this.privMaxRetryCount;\r\n    }\r\n}\r\n\r\n// The config is serialized and sent as the Speech.Config\r\nexport class SpeechServiceConfig {\r\n    private context: Context;\r\n    private recognition: string;\r\n\r\n    public constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public serialize(): string {\r\n        return JSON.stringify(this, (key: any, value: { [k: string]: any }): any => {\r\n            if (value && typeof value === \"object\") {\r\n                const replacement: { [k: string ]: any } = {};\r\n                for (const k in value) {\r\n                    if (Object.hasOwnProperty.call(value, k)) {\r\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\r\n                    }\r\n                }\r\n                return replacement;\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.context;\r\n    }\r\n\r\n    public get Recognition(): string {\r\n        return this.recognition;\r\n    }\r\n\r\n    public set Recognition(value: string) {\r\n        this.recognition = value.toLowerCase();\r\n    }\r\n}\r\n\r\nexport class Context {\r\n    public system: System;\r\n    public os: OS;\r\n    public audio: ISpeechConfigAudio;\r\n\r\n    public constructor(os: OS) {\r\n        this.system = new System();\r\n        this.os = os;\r\n    }\r\n}\r\n\r\nexport class System {\r\n    public name: string;\r\n    public version: string;\r\n    public build: string;\r\n    public lang: string;\r\n\r\n    public constructor() {\r\n        // Note: below will be patched for official builds.\r\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.29.0\";\r\n\r\n        this.name = \"SpeechSDK\";\r\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\r\n        this.build = \"JavaScript\";\r\n        this.lang = \"JavaScript\";\r\n    }\r\n}\r\n\r\nexport class OS {\r\n    public platform: string;\r\n    public name: string;\r\n    public version: string;\r\n\r\n    public constructor(platform: string, name: string, version: string) {\r\n        this.platform = platform;\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport class Device {\r\n    public manufacturer: string;\r\n    public model: string;\r\n    public version: string;\r\n\r\n    public constructor(manufacturer: string, model: string, version: string) {\r\n        this.manufacturer = manufacturer;\r\n        this.model = model;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport interface ISpeechConfigAudio {\r\n    source?: ISpeechConfigAudioDevice;\r\n    playback?: ISpeechConfigAudioDevice;\r\n}\r\n\r\nexport interface ISpeechConfigAudioDevice {\r\n    manufacturer: string;\r\n    model: string;\r\n    connectivity: connectivity;\r\n    type: type;\r\n    samplerate: number;\r\n    bitspersample: number;\r\n    channelcount: number;\r\n}\r\n\r\nexport enum connectivity {\r\n    Bluetooth = \"Bluetooth\",\r\n    Wired = \"Wired\",\r\n    WiFi = \"WiFi\",\r\n    Cellular = \"Cellular\",\r\n    InBuilt = \"InBuilt\",\r\n    Unknown = \"Unknown\",\r\n}\r\n\r\nexport enum type {\r\n    Phone = \"Phone\",\r\n    Speaker = \"Speaker\",\r\n    Car = \"Car\",\r\n    Headset = \"Headset\",\r\n    Thermostat = \"Thermostat\",\r\n    Microphones = \"Microphones\",\r\n    Deskphone = \"Deskphone\",\r\n    RemoteControl = \"RemoteControl\",\r\n    Unknown = \"Unknown\",\r\n    File = \"File\",\r\n    Stream = \"Stream\",\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IDetachable,\r\n    IEventSource,\r\n    PlatformEvent\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectingToServiceEvent,\r\n    ListeningStartedEvent,\r\n    RecognitionStartedEvent,\r\n    RecognitionTriggeredEvent,\r\n    SpeechRecognitionEvent,\r\n} from \"./RecognitionEvents\";\r\nimport { ServiceTelemetryListener } from \"./ServiceTelemetryListener.Internal\";\r\n\r\nexport class RequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privServiceTelemetryListener: ServiceTelemetryListener;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAudioNode: ReplayableAudioNode;\r\n    private privAuthFetchEventId: string;\r\n    private privIsAudioNodeDetached: boolean = false;\r\n    private privIsRecognizing: boolean = false;\r\n    private privIsSpeechEnded: boolean = false;\r\n    private privTurnStartAudioOffset: number = 0;\r\n    private privLastRecoOffset: number = 0;\r\n    private privHypothesisReceived: boolean = false;\r\n    private privBytesSent: number = 0;\r\n    private privRecogNumber: number = 0;\r\n    private privSessionId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privConnectionAttempts: number = 0;\r\n\r\n    public constructor(audioSourceId: string) {\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privAudioNodeId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSpeechEnded(): boolean {\r\n        return this.privIsSpeechEnded;\r\n    }\r\n\r\n    public get isRecognizing(): boolean {\r\n        return this.privIsRecognizing;\r\n    }\r\n\r\n    public get currentTurnAudioOffset(): number {\r\n        return this.privTurnStartAudioOffset;\r\n    }\r\n\r\n    public get recogNumber(): number {\r\n        return this.privRecogNumber;\r\n    }\r\n\r\n    public get numConnectionAttempts(): number {\r\n        return this.privConnectionAttempts;\r\n    }\r\n\r\n    // The number of bytes sent for the current connection.\r\n    // Counter is reset to 0 each time a connection is established.\r\n    public get bytesSent(): number {\r\n        return this.privBytesSent;\r\n    }\r\n    public listenForServiceTelemetry(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\r\n        }\r\n    }\r\n\r\n    public startNewRecognition(): void {\r\n        this.privIsSpeechEnded = false;\r\n        this.privIsRecognizing = true;\r\n        this.privTurnStartAudioOffset = 0;\r\n        this.privLastRecoOffset = 0;\r\n        this.privRecogNumber++;\r\n        this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\r\n        this.onEvent(new RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n    }\r\n\r\n    public async onAudioSourceAttachCompleted(audioNode: ReplayableAudioNode, isError: boolean): Promise<void> {\r\n        this.privAudioNode = audioNode;\r\n        this.privIsAudioNodeDetached = false;\r\n\r\n        if (isError) {\r\n            await this.onComplete();\r\n        } else {\r\n            this.onEvent(new ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n        }\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string, connectionId: string): void {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privSessionId = connectionId;\r\n        this.onEvent(new ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\r\n    }\r\n\r\n    public async onAuthCompleted(isError: boolean): Promise<void> {\r\n        if (isError) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public async onConnectionEstablishCompleted(statusCode: number, reason?: string): Promise<void> {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\r\n            if (!!this.privAudioNode) {\r\n                this.privAudioNode.replay();\r\n            }\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privBytesSent = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onServiceTurnEndResponse(continuousRecognition: boolean): Promise<void> {\r\n        this.privTurnDeferral.resolve();\r\n\r\n        if (!continuousRecognition || this.isSpeechEnded) {\r\n            await this.onComplete();\r\n            this.privInTurn = false;\r\n        } else {\r\n            // Start a new request set.\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privAudioNode.replay();\r\n        }\r\n    }\r\n\r\n    public onSpeechContext(): void {\r\n        this.privRequestId = createNoDashGuid();\r\n    }\r\n\r\n    public onServiceTurnStartResponse(): void {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            this.privTurnDeferral.promise.then().catch((): void => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onHypothesis(offset: number): void {\r\n        if (!this.privHypothesisReceived) {\r\n            this.privHypothesisReceived = true;\r\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        }\r\n    }\r\n\r\n    public onPhraseRecognized(offset: number): void {\r\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        this.onServiceRecognized(offset);\r\n    }\r\n\r\n    public onServiceRecognized(offset: number): void {\r\n        this.privLastRecoOffset = offset;\r\n        this.privHypothesisReceived = false;\r\n        this.privAudioNode.shrinkBuffers(offset);\r\n        this.privConnectionAttempts = 0;\r\n    }\r\n\r\n    public onAudioSent(bytesSent: number): void {\r\n        this.privBytesSent += bytesSent;\r\n    }\r\n\r\n    public onRetryConnection(): void {\r\n        this.privConnectionAttempts++;\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (!!this.privServiceTelemetryListener) {\r\n                this.privServiceTelemetryListener.dispose();\r\n            }\r\n            this.privIsRecognizing = false;\r\n        }\r\n    }\r\n\r\n    public getTelemetry(): string {\r\n        if (this.privServiceTelemetryListener.hasTelemetry) {\r\n            return this.privServiceTelemetryListener.getTelemetry();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public async onStopRecognizing(): Promise<void> {\r\n        await this.onComplete();\r\n    }\r\n\r\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\r\n    public onSpeechEnded(): void {\r\n        this.privIsSpeechEnded = true;\r\n    }\r\n\r\n    protected onEvent(event: SpeechRecognitionEvent): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privServiceTelemetryListener.onEvent(event);\r\n        }\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private async onComplete(): Promise<void> {\r\n        if (!!this.privIsRecognizing) {\r\n            this.privIsRecognizing = false;\r\n            await this.detachAudioNode();\r\n        }\r\n    }\r\n\r\n    private async detachAudioNode(): Promise<void> {\r\n        if (!this.privIsAudioNodeDetached) {\r\n            this.privIsAudioNodeDetached = true;\r\n            if (this.privAudioNode) {\r\n                await this.privAudioNode.detach();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IActivityPayloadResponse {\r\n    conversationId: string;\r\n    messageDataStreamType: number;\r\n    messagePayload: string | object;\r\n    version: number;\r\n}\r\n\r\nexport class ActivityPayloadResponse implements IActivityPayloadResponse {\r\n    private privActivityResponse: IActivityPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privActivityResponse = JSON.parse(json) as IActivityPayloadResponse;\r\n    }\r\n\r\n    public static fromJSON(json: string): ActivityPayloadResponse {\r\n        return new ActivityPayloadResponse(json);\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privActivityResponse.conversationId;\r\n    }\r\n\r\n    public get messageDataStreamType(): number {\r\n        return this.privActivityResponse.messageDataStreamType;\r\n    }\r\n\r\n    public get messagePayload(): string | object {\r\n        return this.privActivityResponse.messagePayload;\r\n    }\r\n\r\n    public get version(): number {\r\n        return this.privActivityResponse.version;\r\n    }\r\n}\r\n\r\nexport enum MessageDataStreamType {\r\n    None = 0,\r\n    TextToSpeechAudio = 1,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage, RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase for detailed\r\nexport interface IDetailedSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    NBest: IPhrase[];\r\n    Duration?: number;\r\n    Offset?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    DisplayText?: string;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPhrase {\r\n    Confidence?: number;\r\n    Lexical: string;\r\n    ITN: string;\r\n    MaskedITN: string;\r\n    Display?: string;\r\n    DisplayText?: string;\r\n    Words?: IWord[];\r\n    DisplayWords?: IWord[];\r\n}\r\n\r\nexport interface IWord {\r\n    Word: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class DetailedSpeechPhrase implements IDetailedSpeechPhrase {\r\n    private privDetailedSpeechPhrase: IDetailedSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privDetailedSpeechPhrase = JSON.parse(json) as IDetailedSpeechPhrase;\r\n        this.privDetailedSpeechPhrase.RecognitionStatus = RecognitionStatus[this.privDetailedSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): DetailedSpeechPhrase {\r\n        return new DetailedSpeechPhrase(json);\r\n    }\r\n\r\n    public getJsonWithCorrectedOffsets(baseOffset: number): string {\r\n        if (!!this.privDetailedSpeechPhrase.NBest) {\r\n            let firstWordOffset: number;\r\n            for (const phrase of this.privDetailedSpeechPhrase.NBest) {\r\n                if (!!phrase.Words && !!phrase.Words[0]) {\r\n                    firstWordOffset = phrase.Words[0].Offset;\r\n                    break;\r\n                }\r\n            }\r\n            if (!!firstWordOffset && firstWordOffset < baseOffset) {\r\n                const offset: number = baseOffset - firstWordOffset;\r\n                for (const details of this.privDetailedSpeechPhrase.NBest) {\r\n                    if (!!details.Words) {\r\n                        for (const word of details.Words) {\r\n                            word.Offset += offset;\r\n                        }\r\n                    }\r\n                    if (!!details.DisplayWords) {\r\n                        for (const word of details.DisplayWords) {\r\n                            word.Offset += offset;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return JSON.stringify(this.privDetailedSpeechPhrase);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\r\n    }\r\n    public get NBest(): IPhrase[] {\r\n        return this.privDetailedSpeechPhrase.NBest;\r\n    }\r\n    public get Duration(): number {\r\n        return this.privDetailedSpeechPhrase.Duration;\r\n    }\r\n    public get Offset(): number {\r\n        return this.privDetailedSpeechPhrase.Offset;\r\n    }\r\n    public get Language(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n    public get Text(): string {\r\n        if (!!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0]) {\r\n            return this.privDetailedSpeechPhrase.NBest[0].Display || this.privDetailedSpeechPhrase.NBest[0].DisplayText;\r\n        }\r\n        return this.privDetailedSpeechPhrase.DisplayText;\r\n    }\r\n    public get SpeakerId(): string {\r\n        return this.privDetailedSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class SynthesisStatus\r\n * @private\r\n */\r\nexport enum SynthesisStatus {\r\n    /**\r\n     * The response contains valid audio data.\r\n     * @member SynthesisStatus.Success\r\n     */\r\n    Success,\r\n\r\n    /**\r\n     * Indicates the end of audio data. No valid audio data is included in the message.\r\n     * @member SynthesisStatus.SynthesisEnd\r\n     */\r\n    SynthesisEnd,\r\n\r\n    /**\r\n     * Indicates an error occurred during synthesis data processing.\r\n     * @member SynthesisStatus.Error\r\n     */\r\n    Error,\r\n}\r\n\r\nexport enum RecognitionStatus {\r\n    Success,\r\n    NoMatch,\r\n    InitialSilenceTimeout,\r\n    BabbleTimeout,\r\n    Error,\r\n    EndOfDictation,\r\n    TooManyRequests,\r\n    BadRequest,\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IIntentResponse {\r\n    query?: string;\r\n    topScoringIntent?: ISingleIntent;\r\n    entities?: IIntentEntity[];\r\n}\r\n\r\nexport interface IIntentEntity {\r\n    entity: string;\r\n    type: string;\r\n    startIndex: number;\r\n    endIndex: number;\r\n    score: number;\r\n}\r\n\r\nexport interface ISingleIntent {\r\n    intent: string;\r\n    score: number;\r\n}\r\n\r\nexport class IntentResponse implements IIntentResponse {\r\n    private privIntentResponse: IIntentResponse;\r\n\r\n    private constructor(json: string) {\r\n        if (json === \"\") {\r\n            this.privIntentResponse = {};\r\n        } else {\r\n            this.privIntentResponse = JSON.parse(json) as IIntentResponse;\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): IntentResponse {\r\n        return new IntentResponse(json);\r\n    }\r\n\r\n    public get query(): string {\r\n        return this.privIntentResponse.query;\r\n    }\r\n\r\n    public get topScoringIntent(): ISingleIntent {\r\n        return this.privIntentResponse.topScoringIntent;\r\n    }\r\n\r\n    public get entities(): IIntentEntity[] {\r\n        return this.privIntentResponse.entities;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase\r\nexport interface ISimpleSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    DisplayText: string;\r\n    Offset?: number;\r\n    Duration?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPrimaryLanguage {\r\n    Language: string;\r\n    Confidence: string;\r\n}\r\n\r\nexport class SimpleSpeechPhrase implements ISimpleSpeechPhrase {\r\n    private privSimpleSpeechPhrase: ISimpleSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privSimpleSpeechPhrase = JSON.parse(json) as ISimpleSpeechPhrase;\r\n        this.privSimpleSpeechPhrase.RecognitionStatus = RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): SimpleSpeechPhrase {\r\n        return new SimpleSpeechPhrase(json);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get DisplayText(): string {\r\n        return this.privSimpleSpeechPhrase.DisplayText;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSimpleSpeechPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSimpleSpeechPhrase.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSimpleSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\n\r\nexport interface SpeakerResponse {\r\n    scenario: string;\r\n    status: SpeakerStatus;\r\n    verificationResult?: VerificationResult;\r\n    identificationResult?: IdentificationResult;\r\n}\r\n\r\nexport interface SpeakerStatus {\r\n    statusCode: string;\r\n    reason: string;\r\n}\r\n\r\nexport interface VerificationResult {\r\n    recognitionResult: string;\r\n    profileId: string;\r\n    score: number;\r\n}\r\n\r\nexport interface IdentificationResult {\r\n    identifiedProfile: ProfileScore;\r\n    profilesRanking: ProfileScore[];\r\n}\r\n\r\nexport interface ProfileScore {\r\n    profileId: string;\r\n    score: number;\r\n}\r\n\r\nexport interface EnrollmentResponse {\r\n    scenario: string;\r\n    status: SpeakerStatus;\r\n    enrollment: EnrollmentStatus;\r\n    profiles: IProfile[];\r\n}\r\n\r\nexport interface ProfileResponse {\r\n    scenario: string;\r\n    operation: string;\r\n    status: SpeakerStatus;\r\n    profiles: IProfile[];\r\n    profileId?: string;\r\n}\r\n\r\nexport interface ProfilePhraseResponse {\r\n    status: SpeakerStatus;\r\n    passPhraseType: string;\r\n    locale: string;\r\n    phrases: string[];\r\n}\r\n\r\nexport interface IProfile {\r\n    profileId: string;\r\n    profileStatus: string;\r\n    enrollmentStatus: string;\r\n    enrollmentCount: number;\r\n    enrollmentLength: number;\r\n    enrollmentSpeechLength: number;\r\n    remainingEnrollmentCount: number;\r\n    remainingEnrollmentLength: number;\r\n    remainingEnrollmentSpeechLength: number;\r\n    locale: string;\r\n    passPhrase: string;\r\n}\r\n\r\nexport interface EnrollmentStatus {\r\n    profileId: string;\r\n    enrollmentStatus: string;\r\n    enrollmentLength: number;\r\n    enrollmentSpeechLength: number;\r\n    remainingEnrollmentCount: number;\r\n    remainingEnrollmentSpeechLength: number;\r\n    audioLength: number;\r\n    audioSpeechLength: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechStartDetected = JSON.parse(json) as ISpeechDetected;\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechDetected {\r\n        return new SpeechDetected(json);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase\";\r\n\r\n// speech.hypothesis\r\nexport interface ISpeechHypothesis {\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport class SpeechHypothesis implements ISpeechHypothesis {\r\n    private privSpeechHypothesis: ISpeechHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechHypothesis = JSON.parse(json) as ISpeechHypothesis;\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechHypothesis {\r\n        return new SpeechHypothesis(json);\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechHypothesis.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechHypothesis.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechHypothesis.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSpeechHypothesis.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.keyword\r\nexport interface ISpeechKeyword {\r\n    Status: string;\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class SpeechKeyword implements ISpeechKeyword {\r\n    private privSpeechKeyword: ISpeechKeyword;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechKeyword = JSON.parse(json) as ISpeechKeyword;\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechKeyword {\r\n        return new SpeechKeyword(json);\r\n    }\r\n\r\n    public get Status(): string {\r\n        return this.privSpeechKeyword.Status;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechKeyword.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechKeyword.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechKeyword.Duration;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisBoundaryType } from \"../../sdk/Exports\";\r\n\r\nexport enum MetadataType {\r\n    WordBoundary = \"WordBoundary\",\r\n    Bookmark = \"Bookmark\",\r\n    Viseme = \"Viseme\",\r\n    SentenceBoundary = \"SentenceBoundary\",\r\n    SessionEnd = \"SessionEnd\",\r\n}\r\n\r\nexport interface ISynthesisMetadata {\r\n    Type: MetadataType;\r\n    Data: {\r\n        Offset: number;\r\n        Duration: number;\r\n        text: {\r\n            Text: string;\r\n            Length: number;\r\n            BoundaryType: SpeechSynthesisBoundaryType;\r\n        };\r\n        Bookmark: string;\r\n        VisemeId: number;\r\n        AnimationChunk: string;\r\n        IsLastAnimation: boolean;\r\n    };\r\n}\r\n\r\n// audio.metadata\r\nexport interface ISynthesisAudioMetadata {\r\n    Metadata: ISynthesisMetadata[];\r\n}\r\n\r\nexport class SynthesisAudioMetadata implements ISynthesisAudioMetadata {\r\n    private privSynthesisAudioMetadata: ISynthesisAudioMetadata;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisAudioMetadata = JSON.parse(json) as ISynthesisAudioMetadata;\r\n    }\r\n\r\n    public static fromJSON(json: string): SynthesisAudioMetadata {\r\n        return new SynthesisAudioMetadata(json);\r\n    }\r\n\r\n    public get Metadata(): ISynthesisMetadata[] {\r\n        return this.privSynthesisAudioMetadata.Metadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ITranslations } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.hypothesis\r\nexport interface ITranslationHypothesis {\r\n    Duration: number;\r\n    Offset: number;\r\n    Text: string;\r\n    Translation: ITranslations;\r\n}\r\n\r\nexport class TranslationHypothesis implements ITranslationHypothesis {\r\n    private privTranslationHypothesis: ITranslationHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privTranslationHypothesis = JSON.parse(json) as ITranslationHypothesis;\r\n        this.privTranslationHypothesis.Translation.TranslationStatus = TranslationStatus[this.privTranslationHypothesis.Translation.TranslationStatus as unknown as keyof typeof TranslationStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationHypothesis {\r\n        return new TranslationHypothesis(json);\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationHypothesis.Duration;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationHypothesis.Offset;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationHypothesis.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationHypothesis.Translation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { IPrimaryLanguage, ITranslations, RecognitionStatus } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.phrase\r\nexport interface ITranslationPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    Offset: number;\r\n    Duration: number;\r\n    Translation?: ITranslations;\r\n    Text: string;\r\n    DisplayText?: string;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n}\r\n\r\nexport class TranslationPhrase implements ITranslationPhrase {\r\n    private privTranslationPhrase: ITranslationPhrase;\r\n\r\n    private constructor(phrase: ITranslationPhrase) {\r\n        this.privTranslationPhrase = phrase;\r\n        this.privTranslationPhrase.RecognitionStatus = RecognitionStatus[this.privTranslationPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\r\n        if (this.privTranslationPhrase.Translation !== undefined) {\r\n            this.privTranslationPhrase.Translation.TranslationStatus = TranslationStatus[this.privTranslationPhrase.Translation.TranslationStatus as unknown as keyof typeof TranslationStatus];\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationPhrase {\r\n        return new TranslationPhrase(JSON.parse(json) as ITranslationPhrase);\r\n    }\r\n\r\n    public static fromTranslationResponse(translationResponse: { SpeechPhrase: ITranslationPhrase }): TranslationPhrase {\r\n        Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\r\n        const phrase: ITranslationPhrase = translationResponse.SpeechPhrase;\r\n        translationResponse.SpeechPhrase = undefined;\r\n        phrase.Translation = (translationResponse as unknown as ITranslations);\r\n        phrase.Text = phrase.DisplayText;\r\n        return new TranslationPhrase(phrase);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privTranslationPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationPhrase.Duration;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationPhrase.Text;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privTranslationPhrase.PrimaryLanguage?.Language;\r\n    }\r\n\r\n    public get Confidence(): string {\r\n        return this.privTranslationPhrase.PrimaryLanguage?.Confidence;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationPhrase.Translation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisStatus } from \"../Exports\";\r\n\r\n// translation.synthesis.end\r\nexport interface ITranslationSynthesisEnd {\r\n    SynthesisStatus?: SynthesisStatus;\r\n    FailureReason?: string;\r\n    Status?: SynthesisStatus;\r\n}\r\n\r\nexport class TranslationSynthesisEnd implements ITranslationSynthesisEnd {\r\n    private privSynthesisEnd: ITranslationSynthesisEnd;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisEnd = JSON.parse(json) as ITranslationSynthesisEnd;\r\n        if (!!this.privSynthesisEnd.SynthesisStatus) {\r\n            this.privSynthesisEnd.SynthesisStatus = SynthesisStatus[this.privSynthesisEnd.SynthesisStatus as unknown as keyof typeof SynthesisStatus];\r\n        }\r\n        if (!!this.privSynthesisEnd.Status) {\r\n            this.privSynthesisEnd.SynthesisStatus = SynthesisStatus[this.privSynthesisEnd.Status as unknown as keyof typeof SynthesisStatus];\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationSynthesisEnd {\r\n        return new TranslationSynthesisEnd(json);\r\n    }\r\n\r\n    public get SynthesisStatus(): SynthesisStatus {\r\n        return this.privSynthesisEnd.SynthesisStatus;\r\n    }\r\n\r\n    public get FailureReason(): string {\r\n        return this.privSynthesisEnd.FailureReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface ITurnStatusResponsePayload {\r\n    interactionId: string;\r\n    conversationId: string;\r\n    statusCode: any;\r\n}\r\n\r\nexport class TurnStatusResponsePayload implements ITurnStatusResponsePayload {\r\n    private privMessageStatusResponse: ITurnStatusResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privMessageStatusResponse = JSON.parse(json) as ITurnStatusResponsePayload;\r\n    }\r\n\r\n    public static fromJSON(json: string): TurnStatusResponsePayload {\r\n        return new TurnStatusResponsePayload(json);\r\n    }\r\n\r\n    public get interactionId(): string {\r\n        return this.privMessageStatusResponse.interactionId;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privMessageStatusResponse.conversationId;\r\n    }\r\n\r\n    public get statusCode(): any {\r\n        // Payloads may contain a limited set of textual representations or a numeric status\r\n        // code. The textual values are here converted into numeric ones.\r\n        switch (this.privMessageStatusResponse.statusCode) {\r\n            case \"Success\":\r\n                return 200;\r\n            case \"Failed\":\r\n                return 400;\r\n            case \"TimedOut\":\r\n                return 429;\r\n            default:\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return this.privMessageStatusResponse.statusCode;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport { ConnectionOpenResponse } from \"../common/ConnectionOpenResponse\";\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    IDisposable,\r\n    IStreamChunk,\r\n    MessageType,\r\n    ServiceEvent,\r\n    Timeout\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { SpeakerRecognitionModel } from \"../sdk/SpeakerRecognitionModel\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeakerRecognitionResult,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { Callback } from \"../sdk/Transcription/IConversation\";\r\nimport {\r\n    AgentConfig,\r\n    DynamicGrammarBuilder,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionMode,\r\n    RequestSession,\r\n    SpeechContext,\r\n    SpeechDetected,\r\n    type\r\n} from \"./Exports\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication,\r\n} from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\ninterface CustomModel {\r\n    language: string;\r\n    endpoint: string;\r\n}\r\n\r\ninterface PhraseDetection {\r\n    customModels?: CustomModel[];\r\n    onInterim?: { action: string };\r\n    onSuccess?: { action: string };\r\n    mode?: string;\r\n    INTERACTIVE?: Segmentation;\r\n    CONVERSATION?: Segmentation;\r\n    DICTATION?: Segmentation;\r\n}\r\n\r\ninterface Segmentation {\r\n    segmentation: {\r\n        mode: \"Custom\";\r\n        segmentationSilenceTimeoutMs: number;\r\n    };\r\n}\r\n\r\nexport abstract class ServiceRecognizerBase implements IDisposable {\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection> = undefined;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection> = undefined;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privMustReportEndOfStream: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number = setTimeout;\r\n    private privAudioSource: IAudioSource;\r\n    private privIsLiveAudio: boolean = false;\r\n    protected privSpeechContext: SpeechContext;\r\n    protected privRequestSession: RequestSession;\r\n    protected privConnectionId: string;\r\n    protected privRecognizerConfig: RecognizerConfig;\r\n    protected privRecognizer: Recognizer;\r\n    protected privSuccessCallback: (e: SpeechRecognitionResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!audioSource) {\r\n            throw new ArgumentNullError(\"audioSource\");\r\n        }\r\n\r\n        if (!recognizerConfig) {\r\n            throw new ArgumentNullError(\"recognizerConfig\");\r\n        }\r\n\r\n        this.privMustReportEndOfStream = false;\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privAudioSource = audioSource;\r\n        this.privRecognizerConfig = recognizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privRecognizer = recognizer;\r\n        this.privRequestSession = new RequestSession(this.privAudioSource.id());\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privDynamicGrammar = new DynamicGrammarBuilder();\r\n        this.privSpeechContext = new SpeechContext(this.privDynamicGrammar);\r\n        this.privAgentConfig = new AgentConfig();\r\n        if (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\r\n            this.privSetTimeout = Timeout.setTimeout;\r\n        }\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode === 1003 ||\r\n                    connectionClosedEvent.statusCode === 1007 ||\r\n                    connectionClosedEvent.statusCode === 1002 ||\r\n                    connectionClosedEvent.statusCode === 4000 ||\r\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount\r\n                ) {\r\n                    void this.cancelRecognitionLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\r\n                }\r\n            }\r\n        });\r\n\r\n        const phraseDetection: PhraseDetection = {};\r\n\r\n        if (recognizerConfig.autoDetectSourceLanguages !== undefined) {\r\n            const sourceLanguages: string[] = recognizerConfig.autoDetectSourceLanguages.split(\",\");\r\n\r\n            let speechContextLidMode;\r\n            if (recognizerConfig.languageIdMode === \"Continuous\") {\r\n                speechContextLidMode = \"DetectContinuous\";\r\n            } else {// recognizerConfig.languageIdMode === \"AtStart\"\r\n                speechContextLidMode = \"DetectAtAudioStart\";\r\n            }\r\n\r\n            this.privSpeechContext.setSection(\"languageId\", {\r\n                Priority: \"PrioritizeLatency\",\r\n                languages: sourceLanguages,\r\n                mode: speechContextLidMode,\r\n                onSuccess: { action: \"Recognize\" },\r\n                onUnknown: { action: \"None\" }\r\n            });\r\n            this.privSpeechContext.setSection(\"phraseOutput\", {\r\n                interimResults: {\r\n                    resultType: \"Auto\"\r\n                },\r\n                phraseResults: {\r\n                    resultType: \"Always\"\r\n                }\r\n            });\r\n            const customModels: CustomModel[] = recognizerConfig.sourceLanguageModels;\r\n            if (customModels !== undefined) {\r\n                phraseDetection.customModels = customModels;\r\n                phraseDetection.onInterim = { action: \"None\" };\r\n                phraseDetection.onSuccess = { action: \"None\" };\r\n            }\r\n        }\r\n\r\n        const isEmpty = (obj: object): boolean => {\r\n            // eslint-disable-next-line guard-for-in, brace-style\r\n            for (const x in obj) { return false; }\r\n            return true;\r\n        };\r\n\r\n        if (!isEmpty(phraseDetection)) {\r\n            this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\r\n        }\r\n    }\r\n\r\n    protected setSpeechSegmentationTimeout(): void{\r\n        const speechSegmentationTimeout: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.Speech_SegmentationSilenceTimeoutMs, undefined);\r\n        if (speechSegmentationTimeout !== undefined) {\r\n            const mode = this.recognitionMode === RecognitionMode.Conversation ? \"CONVERSATION\" :\r\n                this.recognitionMode === RecognitionMode.Dictation ? \"DICTATION\" : \"INTERACTIVE\";\r\n            const segmentationSilenceTimeoutMs: number = parseInt(speechSegmentationTimeout, 10);\r\n            const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\") as PhraseDetection;\r\n            phraseDetection.mode = mode;\r\n            phraseDetection[mode] = {\r\n                segmentation: {\r\n                    mode: \"Custom\",\r\n                    segmentationSilenceTimeoutMs\r\n                }\r\n            };\r\n            this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\r\n        }\r\n    }\r\n\r\n    public get audioSource(): IAudioSource {\r\n        return this.privAudioSource;\r\n    }\r\n\r\n    public get speechContext(): SpeechContext {\r\n        return this.privSpeechContext;\r\n    }\r\n\r\n    public get dynamicGrammar(): DynamicGrammarBuilder {\r\n        return this.privDynamicGrammar;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public set conversationTranslatorToken(token: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.ConversationTranslator_Token, token);\r\n    }\r\n\r\n    public set voiceProfileType(type: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.SpeechServiceConnection_SpeakerIdMode, type);\r\n    }\r\n\r\n    public set authentication(auth: IAuthentication) {\r\n        this.privAuthentication = this.authentication;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            try {\r\n                const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n                await connection.dispose(reason);\r\n            } catch (error) {\r\n                // The connection is in a bad state. But we're trying to kill it, so...\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognizerConfig.recognitionMode;\r\n    }\r\n\r\n    protected recognizeOverride: (recoMode: RecognitionMode, sc: (e: SpeechRecognitionResult) => void, ec: (e: string) => void) => Promise<void> = undefined;\r\n\r\n    public recognizeSpeaker: (model: SpeakerRecognitionModel) => Promise<SpeakerRecognitionResult> = undefined;\r\n\r\n    public async recognize(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n    ): Promise<void> {\r\n\r\n        if (this.recognizeOverride !== undefined) {\r\n            await this.recognizeOverride(recoMode, successCallback, errorCallBack);\r\n            return;\r\n        }\r\n        // Clear the existing configuration promise to force a re-transmission of config and context.\r\n        this.privConnectionConfigurationPromise = undefined;\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n        this.setSpeechSegmentationTimeout();\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        let audioNode: ReplayableAudioNode;\r\n\r\n        try {\r\n            const audioStreamNode: IAudioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\r\n            const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n            const deviceInfo: ISpeechConfigAudioDevice = await this.audioSource.deviceInfo;\r\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === type.Microphones;\r\n\r\n            audioNode = new ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\r\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        } catch (error) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n            throw error;\r\n        }\r\n\r\n        try {\r\n            await conPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error as string);\r\n            return;\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        void this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        audioSendPromise.catch(async (error: string): Promise<void> => {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    public async stopRecognizing(): Promise<void> {\r\n        if (this.privRequestSession.isRecognizing) {\r\n            try {\r\n                await this.audioSource.turnOff();\r\n                await this.sendFinalAudio();\r\n                await this.privRequestSession.onStopRecognizing();\r\n                await this.privRequestSession.turnCompletionPromise;\r\n            } finally {\r\n                await this.privRequestSession.dispose();\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public connectAsync(cb?: Callback, err?: Callback): void {\r\n        this.connectImpl().then((): void => {\r\n            try {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n        }, (reason: any): void => {\r\n            try {\r\n                if (!!err) {\r\n                    err(reason);\r\n                }\r\n                /* eslint-disable no-empty */\r\n            } catch (error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    protected disconnectOverride: () => Promise<void> = undefined;\r\n\r\n    public async disconnect(): Promise<void> {\r\n        await this.cancelRecognitionLocal(CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        if (this.disconnectOverride !== undefined) {\r\n            await this.disconnectOverride();\r\n        }\r\n\r\n        if (this.privConnectionPromise !== undefined) {\r\n            try {\r\n                await (await this.privConnectionPromise).dispose();\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        this.privConnectionPromise = undefined;\r\n    }\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public sendMessage(message: string): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\r\n    }\r\n\r\n    public set activityTemplate(messagePayload: string) {\r\n        this.privActivityTemplate = messagePayload;\r\n    }\r\n\r\n    public get activityTemplate(): string {\r\n        return this.privActivityTemplate;\r\n    }\r\n\r\n    protected abstract processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean>;\r\n\r\n    protected async sendTelemetryData(): Promise<void> {\r\n        const telemetryData = this.privRequestSession.getTelemetry();\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\r\n            this.privIsDisposed ||\r\n            null === telemetryData) {\r\n            return;\r\n        }\r\n\r\n        if (!!ServiceRecognizerBase.telemetryData) {\r\n            try {\r\n                ServiceRecognizerBase.telemetryData(telemetryData);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"telemetry\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            telemetryData));\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected abstract cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void;\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognitionLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n\r\n            this.cancelRecognition(\r\n                this.privRequestSession.sessionId,\r\n                this.privRequestSession.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected receiveMessageOverride: () => Promise<void> = undefined;\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            let connection = await this.fetchConnection();\r\n            const message = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privRequestSession.isRecognizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privMustReportEndOfStream = true;\r\n                        this.privRequestSession.onServiceTurnStartResponse();\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n                        let json: string;\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        await this.sendTelemetryData();\r\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\r\n                            this.privMustReportEndOfStream = false;\r\n                            await this.cancelRecognitionLocal(CancellationReason.EndOfStream, CancellationErrorCode.NoError, undefined);\r\n                        }\r\n                        const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\r\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                            if (!!this.privRecognizer.sessionStopped) {\r\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            connection = await this.fetchConnection();\r\n                            await this.sendPrePayloadJSON(connection);\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n            return this.receiveMessage();\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected sendSpeechContext(connection: IConnection, generateNewRequestId: boolean): Promise<void> {\r\n        const speechContextJson = this.speechContext.toJSON();\r\n        if (generateNewRequestId) {\r\n            this.privRequestSession.onSpeechContext();\r\n        }\r\n\r\n        if (speechContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.context\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected sendPrePayloadJSONOverride: (connection: IConnection) => Promise<void> = undefined;\r\n\r\n    protected noOp(): Promise<void> {\r\n        // operation not supported\r\n        return;\r\n    }\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendPrePayloadJSON(connection: IConnection, generateNewRequestId: boolean = true): Promise<void> {\r\n        if (this.sendPrePayloadJSONOverride !== undefined) {\r\n            return this.sendPrePayloadJSONOverride(connection);\r\n        }\r\n\r\n        await this.sendSpeechContext(connection, generateNewRequestId);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected async sendWaveHeader(connection: IConnection): Promise<void> {\r\n        const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n        // this.writeBufferToConsole(format.header);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Binary,\r\n            \"audio\",\r\n            this.privRequestSession.requestId,\r\n            \"audio/x-wav\",\r\n            format.header\r\n        ));\r\n    }\r\n\r\n    protected postConnectImplOverride: (connection: Promise<IConnection>) => Promise<IConnection> = undefined;\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    protected connectImpl(): Promise<IConnection> {\r\n        if (this.privConnectionPromise !== undefined) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = undefined;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = undefined;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n\r\n        this.privConnectionPromise = this.retryableConnect();\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        this.privConnectionPromise.catch((): void => { });\r\n\r\n        if (this.postConnectImplOverride !== undefined) {\r\n            return this.postConnectImplOverride(this.privConnectionPromise);\r\n        }\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n    protected handleSpeechPhraseMessage: (textBody: string) => Promise<void> = undefined;\r\n    protected handleSpeechHypothesisMessage: (textBody: string) => void = undefined;\r\n\r\n    protected sendSpeechServiceConfig(connection: IConnection, requestSession: RequestSession, SpeechServiceConfigJson: string): Promise<void> {\r\n        requestSession.onSpeechContext();\r\n        // filter out anything that is not required for the service to work.\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\r\n            const withTelemetry: { context: { system: string } } = JSON.parse(SpeechServiceConfigJson) as { context: { system: string } };\r\n\r\n            const replacement: any = {\r\n                context: {\r\n                    system: withTelemetry.context.system,\r\n                },\r\n            };\r\n\r\n            SpeechServiceConfigJson = JSON.stringify(replacement);\r\n        }\r\n\r\n        if (this.privRecognizerConfig.parameters.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() === \"true\") {\r\n            const json: { context: { DisableReferenceChannel: string; MicSpec: string } } = JSON.parse(SpeechServiceConfigJson) as { context: { DisableReferenceChannel: string; MicSpec: string } };\r\n            json.context.DisableReferenceChannel = \"True\";\r\n            json.context.MicSpec = \"1_0_0\";\r\n            SpeechServiceConfigJson = JSON.stringify(json);\r\n        }\r\n\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                requestSession.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    protected async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = undefined;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = undefined;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    protected async sendAudio(audioStreamNode: IAudioStreamNode): Promise<void> {\r\n        const audioFormat: AudioStreamFormatImpl = await this.audioSource.format;\r\n\r\n        // The time we last sent data to the service.\r\n        let nextSendTime: number = Date.now();\r\n\r\n        // Max amount to send before we start to throttle\r\n        const fastLaneSizeMs: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\r\n        const maxSendUnthrottledBytes: number = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\r\n        const startRecogNumber: number = this.privRequestSession.recogNumber;\r\n\r\n        const readAndUploadCycle = async (): Promise<void> => {\r\n            // If speech is done, stop sending audio.\r\n            if (!this.privIsDisposed &&\r\n                !this.privRequestSession.isSpeechEnded &&\r\n                this.privRequestSession.isRecognizing &&\r\n                this.privRequestSession.recogNumber === startRecogNumber) {\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const audioStreamChunk: IStreamChunk<ArrayBuffer> = await audioStreamNode.read();\r\n                // we have a new audio chunk to upload.\r\n                if (this.privRequestSession.isSpeechEnded) {\r\n                    // If service already recognized audio end then don't send any more audio\r\n                    return;\r\n                }\r\n\r\n                let payload: ArrayBuffer;\r\n                let sendDelay: number;\r\n\r\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                    payload = null;\r\n                    sendDelay = 0;\r\n                } else {\r\n                    payload = audioStreamChunk.buffer;\r\n\r\n                    this.privRequestSession.onAudioSent(payload.byteLength);\r\n\r\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\r\n                        sendDelay = 0;\r\n                    } else {\r\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\r\n                    }\r\n                }\r\n\r\n                if (0 !== sendDelay) {\r\n                    await this.delay(sendDelay);\r\n                }\r\n\r\n                if (payload !== null) {\r\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\r\n                }\r\n\r\n                // Are we still alive?\r\n                if (!this.privIsDisposed &&\r\n                    !this.privRequestSession.isSpeechEnded &&\r\n                    this.privRequestSession.isRecognizing &&\r\n                    this.privRequestSession.recogNumber === startRecogNumber) {\r\n                    connection.send(\r\n                        new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)\r\n                    ).catch((): void => {\r\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch((): void => { });\r\n                    });\r\n\r\n                    if (!audioStreamChunk?.isEnd) {\r\n                        // this.writeBufferToConsole(payload);\r\n                        // Regardless of success or failure, schedule the next upload.\r\n                        // If the underlying connection was broken, the next cycle will\r\n                        // get a new connection and re-transmit missing audio automatically.\r\n                        return readAndUploadCycle();\r\n                    } else {\r\n                        // the audio stream has been closed, no need to schedule next\r\n                        // read-upload cycle.\r\n                        if (!this.privIsLiveAudio) {\r\n                            this.privRequestSession.onSpeechEnded();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return readAndUploadCycle();\r\n    }\r\n\r\n    private async retryableConnect(): Promise<IConnection> {\r\n        let isUnAuthorized: boolean = false;\r\n\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        const sessionId: string = this.privRequestSession.sessionId;\r\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : createNoDashGuid();\r\n\r\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n        let lastStatusCode: number = 0;\r\n        let lastReason: string = \"\";\r\n\r\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\r\n\r\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\r\n            // facing event when a connection fails to let them try and provide new auth information.\r\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n            const auth: AuthInfo = await authPromise;\r\n\r\n            await this.privRequestSession.onAuthCompleted(false);\r\n\r\n            // Create the connection\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\r\n            // Attach the telemetry handlers.\r\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent): void => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n\r\n            const response: ConnectionOpenResponse = await connection.open();\r\n            // 200 == everything is fine.\r\n            if (response.statusCode === 200) {\r\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 1006) {\r\n                isUnAuthorized = true;\r\n            }\r\n\r\n            lastStatusCode = response.statusCode;\r\n            lastReason = response.reason;\r\n\r\n            this.privRequestSession.onRetryConnection();\r\n        }\r\n\r\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\r\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\r\n    }\r\n\r\n    private delay(delayMs: number): Promise<void> {\r\n        return new Promise((resolve: () => void): number => this.privSetTimeout(resolve, delayMs));\r\n    }\r\n\r\n    private writeBufferToConsole(buffer: ArrayBuffer): void {\r\n        let out: string = \"Buffer Size: \";\r\n        if (null === buffer) {\r\n            out += \"null\";\r\n        } else {\r\n            const readView: Uint8Array = new Uint8Array(buffer);\r\n            out += `${buffer.byteLength}\\r\\n`;\r\n            for (let i: number = 0; i < buffer.byteLength; i++) {\r\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\r\n                if (((i + 1) % 16) === 0) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.info(out);\r\n                    out = \"\";\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line no-console\r\n        console.info(out);\r\n    }\r\n\r\n    private async sendFinalAudio(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\r\n        return;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendPrePayloadJSON(connection, false);\r\n        return connection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEstablishErrorEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionStartEvent,\r\n    IEventListener,\r\n    IStringDictionary,\r\n    PlatformEvent,\r\n} from \"../common/Exports\";\r\nimport { ConnectingToServiceEvent, RecognitionTriggeredEvent } from \"./RecognitionEvents\";\r\n\r\nexport interface ITelemetry {\r\n    Metrics: IMetric[];\r\n    ReceivedMessages: IStringDictionary<string[]>;\r\n}\r\n\r\nexport interface IMetric {\r\n    End?: string;\r\n    Error?: string;\r\n    Id?: string;\r\n    Name?: string;\r\n    Start?: string;\r\n    PhraseLatencyMs?: number[];\r\n    FirstHypothesisLatencyMs?: number[];\r\n}\r\n\r\nexport class ServiceTelemetryListener implements IEventListener<PlatformEvent> {\r\n    private privIsDisposed: boolean = false;\r\n\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    private privListeningTriggerMetric: IMetric = null;\r\n    private privMicMetric: IMetric = null;\r\n    private privConnectionEstablishMetric: IMetric = null;\r\n\r\n    private privMicStartTime: string;\r\n\r\n    private privConnectionId: string;\r\n    private privConnectionStartTime: string;\r\n\r\n    private privReceivedMessages: IStringDictionary<string[]>;\r\n    private privPhraseLatencies: number[];\r\n    private privHypothesisLatencies: number[];\r\n\r\n    public constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n\r\n        this.privReceivedMessages = {};\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n    }\r\n\r\n    public phraseReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public hypothesisReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public onEvent(e: PlatformEvent): void {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\r\n            this.privListeningTriggerMetric = {\r\n                End: e.eventTime,\r\n                Name: \"ListeningTrigger\",\r\n                Start: e.eventTime,\r\n            };\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId) {\r\n            this.privConnectionId = e.sessionId;\r\n        }\r\n\r\n        if (e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId) {\r\n            this.privConnectionStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Error: this.getConnectionError(e.statusCode),\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\r\n            if (e.message && e.message.headers && e.message.headers.path) {\r\n                if (!this.privReceivedMessages[e.message.headers.path]) {\r\n                    this.privReceivedMessages[e.message.headers.path] = new Array<string>();\r\n                }\r\n                const maxMessagesToSend = 50;\r\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\r\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTelemetry(): string {\r\n        const metrics = new Array<IMetric>();\r\n\r\n        if (this.privListeningTriggerMetric) {\r\n            metrics.push(this.privListeningTriggerMetric);\r\n        }\r\n\r\n        if (this.privMicMetric) {\r\n            metrics.push(this.privMicMetric);\r\n        }\r\n\r\n        if (this.privConnectionEstablishMetric) {\r\n            metrics.push(this.privConnectionEstablishMetric);\r\n        }\r\n\r\n        if (this.privPhraseLatencies.length > 0) {\r\n            metrics.push({\r\n                PhraseLatencyMs: this.privPhraseLatencies,\r\n            });\r\n        }\r\n\r\n        if (this.privHypothesisLatencies.length > 0) {\r\n            metrics.push({\r\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\r\n            });\r\n        }\r\n\r\n        const telemetry: ITelemetry = {\r\n            Metrics: metrics,\r\n            ReceivedMessages: this.privReceivedMessages,\r\n        };\r\n\r\n        const json = JSON.stringify(telemetry);\r\n\r\n        // We dont want to send the same telemetry again. So clean those out.\r\n        this.privReceivedMessages = {};\r\n        this.privListeningTriggerMetric = null;\r\n        this.privMicMetric = null;\r\n        this.privConnectionEstablishMetric = null;\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n        return json;\r\n    }\r\n\r\n    // Determines if there are any telemetry events to send to the service.\r\n    public get hasTelemetry(): boolean {\r\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\r\n            this.privListeningTriggerMetric !== null ||\r\n            this.privMicMetric !== null ||\r\n            this.privConnectionEstablishMetric !== null ||\r\n            this.privPhraseLatencies.length !== 0 ||\r\n            this.privHypothesisLatencies.length !== 0);\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    private getConnectionError(statusCode: number): string {\r\n        /*\r\n        -- Websocket status codes --\r\n        NormalClosure = 1000,\r\n        EndpointUnavailable = 1001,\r\n        ProtocolError = 1002,\r\n        InvalidMessageType = 1003,\r\n        Empty = 1005,\r\n        InvalidPayloadData = 1007,\r\n        PolicyViolation = 1008,\r\n        MessageTooBig = 1009,\r\n        MandatoryExtension = 1010,\r\n        InternalServerError = 1011\r\n        */\r\n\r\n        switch (statusCode) {\r\n            case 400:\r\n            case 1002:\r\n            case 1003:\r\n            case 1005:\r\n            case 1007:\r\n            case 1008:\r\n            case 1009: return \"BadRequest\";\r\n            case 401: return \"Unauthorized\";\r\n            case 403: return \"Forbidden\";\r\n            case 503:\r\n            case 1001: return \"ServerUnavailable\";\r\n            case 500:\r\n            case 1011: return \"ServerError\";\r\n            case 408:\r\n            case 504: return \"Timeout\";\r\n            default: return \"statuscode:\" + statusCode.toString();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport { Context } from \"./Exports\";\r\n\r\nexport class SpeakerRecognitionConfig {\r\n    private privParameters: PropertyCollection;\r\n    private privContext: Context;\r\n\r\n    public constructor(\r\n        context: Context,\r\n        parameters: PropertyCollection) {\r\n        this.privContext = context ? context : new Context(null);\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.privContext;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nclass SpeakerRecognitionConnectionFactoryBase extends ConnectionFactoryBase {\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        endpointPath: string,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `wss://${region}.spr-frontend.speech${hostSuffix}`);\r\n            const scenario: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_SpeakerIdMode, \"TextIndependentIdentification\");\r\n            endpoint = `${host}/speaker/ws/${this.scenarioToPath(scenario)}/${endpointPath}`;\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            format: \"simple\",\r\n            language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        headers[HeaderNames.SpIDAuthKey] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    private scenarioToPath(mode: string): string {\r\n        switch (mode) {\r\n            case \"TextIndependentVerification\":\r\n            case \"2\":\r\n                return \"verification/text-independent\";\r\n            case \"TextDependentVerification\":\r\n            case \"1\":\r\n                return \"verification/text-dependent\";\r\n            default:\r\n                return \"identification/text-independent\";\r\n        }\r\n    }\r\n}\r\n\r\nexport class SpeakerRecognitionConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\r\n    public create( config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n        return super.create(config, authInfo, \"recognition\", connectionId);\r\n    }\r\n}\r\n\r\nexport class VoiceProfileConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\r\n    public create( config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n        return super.create(config, authInfo, \"profile\", connectionId);\r\n    }\r\n}\r\n\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    Deferred,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { SpeakerRecognitionModel } from \"../sdk/SpeakerRecognitionModel\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    SpeakerRecognitionResult,\r\n    SpeakerRecognizer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    ISpeechConfigAudioDevice,\r\n    SpeakerResponse,\r\n    ServiceRecognizerBase,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\ninterface SpeakerContext {\r\n    scenario: string;\r\n    profileIds: string[];\r\n    features: {\r\n        interimResult: string;\r\n        progressiveDetection: string;\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class SpeakerServiceRecognizer extends ServiceRecognizerBase {\r\n    private privSpeakerRecognizer: SpeakerRecognizer;\r\n    private privSpeakerAudioSource: IAudioSource;\r\n    private privResultDeferral: Deferred<SpeakerRecognitionResult>;\r\n    private privSpeakerModel: SpeakerRecognitionModel;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: SpeakerRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privSpeakerRecognizer = recognizer;\r\n        this.privSpeakerAudioSource = audioSource;\r\n        this.recognizeSpeaker = (model: SpeakerRecognitionModel): Promise<SpeakerRecognitionResult> => this.recognizeSpeakerOnce(model);\r\n        this.sendPrePayloadJSONOverride = (): Promise<void> => this.noOp();\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speaker.response\":\r\n                const response: SpeakerResponse = JSON.parse(connectionMessage.textBody) as SpeakerResponse;\r\n                let result: SpeakerRecognitionResult;\r\n                if (response.status.statusCode.toLowerCase() !== \"success\") {\r\n                    result = new SpeakerRecognitionResult(\r\n                        response,\r\n                        ResultReason.Canceled,\r\n                        CancellationErrorCode.ServiceError,\r\n                        response.status.reason\r\n                        );\r\n                } else {\r\n                    result = new SpeakerRecognitionResult(\r\n                        response,\r\n                        ResultReason.RecognizedSpeaker,\r\n                        );\r\n                }\r\n                if (!!this.privResultDeferral) {\r\n                    this.privResultDeferral.resolve(result);\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privResultDeferral) {\r\n            const result: SpeakerRecognitionResult = new SpeakerRecognitionResult(\r\n                {\r\n                    scenario: this.privSpeakerModel.scenario,\r\n                    status: { statusCode: error, reason: error }\r\n                },\r\n                ResultReason.Canceled,\r\n                errorCode,\r\n                error\r\n                );\r\n            try {\r\n                this.privResultDeferral.resolve(result);\r\n            } catch (error) {\r\n                this.privResultDeferral.reject(error as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    public async recognizeSpeakerOnce(model: SpeakerRecognitionModel): Promise<SpeakerRecognitionResult> {\r\n        this.privSpeakerModel = model;\r\n        this.voiceProfileType = model.scenario;\r\n        if (!this.privResultDeferral) {\r\n            this.privResultDeferral = new Deferred<SpeakerRecognitionResult>();\r\n        }\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages(this.extractSpeakerContext(model));\r\n\r\n        const node: IAudioStreamNode = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privSpeakerAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privSpeakerAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (err) {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, err as string);\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        void this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* eslint-disable no-empty */\r\n        audioSendPromise.then((): void => { /* add? return true;*/ }, (error: string): void => {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return this.privResultDeferral.promise;\r\n    }\r\n\r\n    private async sendPreAudioMessages(context: SpeakerContext): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await this.sendSpeakerRecognition(connection, context);\r\n        // await this.sendWaveHeader(connection);\r\n    }\r\n\r\n    private async sendSpeakerRecognition(connection: IConnection, context: SpeakerContext): Promise<void> {\r\n        const speakerContextJson = JSON.stringify(context);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speaker.context\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            speakerContextJson));\r\n    }\r\n\r\n    private extractSpeakerContext(model: SpeakerRecognitionModel): SpeakerContext {\r\n        return {\r\n            features: {\r\n                interimResult: \"enabled\",\r\n                progressiveDetection: \"disabled\",\r\n            },\r\n            profileIds: model.profileIds,\r\n            scenario: model.scenario,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly interactiveRelativeUri: string = \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n    private readonly conversationRelativeUri: string = \"/speech/recognition/conversation/cognitiveservices/v1\";\r\n    private readonly dictationRelativeUri: string = \"/speech/recognition/dictation/cognitiveservices/v1\";\r\n    private readonly universalUri: string = \"/speech/universal/v\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        if (!endpoint || endpoint.search(QueryParameterNames.Format) === -1) {\r\n            queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        }\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        if (!endpoint) {\r\n            switch (config.recognitionMode) {\r\n                case RecognitionMode.Conversation:\r\n                    if (config.parameters.getProperty(ForceDictationPropertyName, \"false\") === \"true\") {\r\n                        endpoint = host + this.dictationRelativeUri;\r\n                    } else {\r\n                        if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\r\n                            endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\r\n                        } else {\r\n                            endpoint = host + this.conversationRelativeUri;\r\n                        }\r\n                    }\r\n                    break;\r\n                case RecognitionMode.Dictation:\r\n                    endpoint = host + this.dictationRelativeUri;\r\n                    break;\r\n                default:\r\n                    if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\r\n                        endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\r\n                    } else {\r\n                        endpoint = host + this.interactiveRelativeUri; // default is interactive\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n\r\n        const webSocketConnection = new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n\r\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\r\n        // URI that was used to make the connection (including query parameters).\r\n        const uri: string = webSocketConnection.uri;\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, uri);\r\n\r\n        return webSocketConnection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError, ConnectionMessage, IStringDictionary, MessageType } from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class SpeechConnectionMessage extends ConnectionMessage {\r\n\r\n    private privPath: string;\r\n    private privRequestId: string;\r\n    private privContentType: string;\r\n    private privStreamId: string;\r\n    private privAdditionalHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        path: string,\r\n        requestId: string,\r\n        contentType: string,\r\n        body: any,\r\n        streamId?: string,\r\n        additionalHeaders?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (!path) {\r\n            throw new ArgumentNullError(\"path\");\r\n        }\r\n\r\n        if (!requestId) {\r\n            throw new ArgumentNullError(\"requestId\");\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        headers[HeaderNames.Path] = path;\r\n        headers[HeaderNames.RequestId] = requestId;\r\n        headers[HeaderNames.RequestTimestamp] = new Date().toISOString();\r\n        if (contentType) {\r\n            headers[HeaderNames.ContentType] = contentType;\r\n        }\r\n\r\n        if (streamId) {\r\n            headers[HeaderNames.RequestStreamId] = streamId;\r\n        }\r\n\r\n        if (additionalHeaders) {\r\n            for (const headerName in additionalHeaders) {\r\n                if (headerName) {\r\n                    headers[headerName] = additionalHeaders[headerName];\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            super(messageType, body, headers, id);\r\n        } else {\r\n            super(messageType, body, headers);\r\n        }\r\n\r\n        this.privPath = path;\r\n        this.privRequestId = requestId;\r\n        this.privContentType = contentType;\r\n        this.privStreamId = streamId;\r\n        this.privAdditionalHeaders = additionalHeaders;\r\n    }\r\n\r\n    public get path(): string {\r\n        return this.privPath;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get contentType(): string {\r\n        return this.privContentType;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public get additionalHeaders(): IStringDictionary<string> {\r\n        return this.privAdditionalHeaders;\r\n    }\r\n\r\n    public static fromConnectionMessage(message: ConnectionMessage): SpeechConnectionMessage {\r\n        let path = null;\r\n        let requestId = null;\r\n        let contentType = null;\r\n        // let requestTimestamp = null;\r\n        let streamId = null;\r\n        const additionalHeaders: IStringDictionary<string> = {};\r\n\r\n        if (message.headers) {\r\n            for (const headerName in message.headers) {\r\n                if (headerName) {\r\n                    if (headerName.toLowerCase() === HeaderNames.Path.toLowerCase()) {\r\n                        path = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestId.toLowerCase()) {\r\n                        requestId = message.headers[headerName];\r\n                    // } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\r\n                       //  requestTimestamp = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.ContentType.toLowerCase()) {\r\n                        contentType = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestStreamId.toLowerCase()) {\r\n                        streamId = message.headers[headerName];\r\n                    } else {\r\n                        additionalHeaders[headerName] = message.headers[headerName];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new SpeechConnectionMessage(\r\n            message.messageType,\r\n            path,\r\n            requestId,\r\n            contentType,\r\n            message.body,\r\n            streamId,\r\n            additionalHeaders,\r\n            message.id);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports\";\r\n\r\ninterface Context {\r\n    [section: string]: any;\r\n}\r\n\r\ninterface PhraseContext {\r\n    [section: string]: any;\r\n    phraseDetection?: {\r\n        enrichment?: {\r\n            pronunciationAssessment: any;\r\n        };\r\n    };\r\n    phraseOutput?: {\r\n        detailed?: {\r\n            options?: string[];\r\n        };\r\n        format?: any;\r\n    };\r\n}\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: PhraseContext = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    public constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Gets a section of the speech.context object.\r\n     * @param sectionName Name of the section to get.\r\n     * @return string or Context JSON serializable object that represents the value.\r\n     */\r\n    public getSection(sectionName: string): string | Context {\r\n        return (this.privContext[sectionName] || {}) as string | Context;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: string | Context): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) as Context;\r\n        this.setWordLevelTimings();\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\r\n        }\r\n    }\r\n\r\n    public setWordLevelTimings(): void {\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        if (this.privContext.phraseOutput.detailed === undefined) {\r\n            this.privContext.phraseOutput.detailed = {\r\n                options: []\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionCompletionStatus } from \"../../src/common.speech/Exports\";\r\nimport { TranslationStatus } from \"./TranslationStatus\";\r\n\r\nexport interface ITranslations {\r\n    TranslationStatus: TranslationStatus;\r\n    Translations: ITranslation[];\r\n    FailureReason: string;\r\n}\r\n\r\nexport interface ITranslation {\r\n    Language: string;\r\n    Text?: string;\r\n    DisplayText?: string;\r\n}\r\n\r\nexport interface ISpeechEndDetectedResult {\r\n    Offset?: number;\r\n}\r\n\r\n// turn.start\r\nexport interface ITurnStart {\r\n    context: ITurnStartContext;\r\n}\r\n\r\nexport interface ITurnStartContext {\r\n    serviceTag: string;\r\n}\r\n\r\nexport interface IResultErrorDetails {\r\n    errorText: string;\r\n    recogSate: RecognitionCompletionStatus;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    SpeechRecognizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class SpeechServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privSpeechRecognizer: SpeechRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        speechRecognizer: SpeechRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\r\n        this.privSpeechRecognizer = speechRecognizer;\r\n\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined, // Speaker Id\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privSpeechRecognizer.recognizing) {\r\n                    try {\r\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                            const totalOffset: number = detailed.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n                            const offsetCorrectedJson: string = detailed.getJsonWithCorrectedOffsets(totalOffset);\r\n\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined,\r\n                                detailed.Duration,\r\n                                totalOffset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                offsetCorrectedJson,\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privSpeechRecognizer.recognized) {\r\n                            try {\r\n                                this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e as string);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privSpeechRecognizer.canceled) {\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport { PropertyId } from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    SynthesizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { ISynthesisConnectionFactory } from \"./ISynthesisConnectionFactory\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechSynthesisConnectionFactory implements ISynthesisConnectionFactory {\r\n\r\n    private readonly synthesisUri: string = \"/cognitiveservices/websocket/v1\";\r\n\r\n    public create(\r\n        config: SynthesizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const endpointId = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        if (!endpoint) {\r\n            endpoint = host + this.synthesisUri;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        if (endpointId !== undefined) {\r\n            headers[QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\r\n        }\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IConnection,\r\n    IDisposable,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AgentConfig,\r\n    CancellationErrorCodePropertyName,\r\n    ISynthesisConnectionFactory,\r\n    MetadataType,\r\n    SynthesisAudioMetadata,\r\n    SynthesisContext,\r\n    SynthesisTurn,\r\n    SynthesizerConfig\r\n} from \"./Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class SynthesisAdapterBase implements IDisposable {\r\n    protected privSynthesisTurn: SynthesisTurn;\r\n    protected privConnectionId: string;\r\n    protected privSynthesizerConfig: SynthesizerConfig;\r\n    protected privSpeechSynthesizer: SpeechSynthesizer;\r\n    protected privSuccessCallback: (e: SpeechSynthesisResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public get synthesisContext(): SynthesisContext {\r\n        return this.privSynthesisContext;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    protected speakOverride: (ssml: string, requestId: string, sc: (e: SpeechSynthesisResult) => void, ec: (e: string) => void) => void = undefined;\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public set activityTemplate(messagePayload: string) {\r\n        this.privActivityTemplate = messagePayload;\r\n    }\r\n    public get activityTemplate(): string {\r\n        return this.privActivityTemplate;\r\n    }\r\n\r\n    protected receiveMessageOverride: () => void = undefined;\r\n\r\n    protected connectImplOverride: (isUnAuthorized: boolean) => void = undefined;\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n        this.privSynthesisTurn.audioOutputFormat = format;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.format = format;\r\n        }\r\n        if (this.synthesisContext !== undefined) {\r\n            this.synthesisContext.audioOutputFormat = format;\r\n        }\r\n    }\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection> = undefined;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privSynthesisContext: SynthesisContext;\r\n    private privAgentConfig: AgentConfig;\r\n    private privActivityTemplate: string;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privSessionAudioDestination: IAudioDestination;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        speechSynthesizer: SpeechSynthesizer,\r\n        audioDestination: IAudioDestination) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!synthesizerConfig) {\r\n            throw new ArgumentNullError(\"synthesizerConfig\");\r\n        }\r\n\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privSynthesizerConfig = synthesizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n        this.privSessionAudioDestination = audioDestination;\r\n        this.privSynthesisTurn = new SynthesisTurn();\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privSynthesisContext = new SynthesisContext(this.privSpeechSynthesizer);\r\n        this.privAgentConfig = new AgentConfig();\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode !== 1000) {\r\n                    this.cancelSynthesisLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static addHeader(audio: ArrayBuffer, format: AudioOutputFormatImpl): ArrayBuffer {\r\n        if (!format.hasHeader) {\r\n            return audio;\r\n        }\r\n        format.updateHeader(audio.byteLength);\r\n        const tmp = new Uint8Array(audio.byteLength + format.header.byteLength);\r\n        tmp.set(new Uint8Array(format.header), 0);\r\n        tmp.set(new Uint8Array(audio), format.header.byteLength);\r\n        return tmp.buffer;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.close();\r\n        }\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\r\n    }\r\n\r\n    public async Speak(\r\n        text: string,\r\n        isSSML: boolean,\r\n        requestId: string,\r\n        successCallback: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n        audioDestination: IAudioDestination,\r\n    ): Promise<void> {\r\n\r\n        let ssml: string;\r\n\r\n        if (isSSML) {\r\n            ssml = text;\r\n        } else {\r\n            ssml = this.privSpeechSynthesizer.buildSsml(text);\r\n        }\r\n\r\n        if (this.speakOverride !== undefined) {\r\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\r\n        }\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\r\n\r\n        try {\r\n            await this.connectImpl();\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSynthesisContext(connection);\r\n            await this.sendSsmlMessage(connection, ssml, requestId);\r\n            const synthesisStartEventArgs: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                new SpeechSynthesisResult(\r\n                    requestId,\r\n                    ResultReason.SynthesizingAudioStarted,\r\n                )\r\n            );\r\n\r\n            if (!!this.privSpeechSynthesizer.synthesisStarted) {\r\n                this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\r\n            }\r\n\r\n            void this.receiveMessage();\r\n        } catch (e) {\r\n            this.cancelSynthesisLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, e as string);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesis(\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n        const result: SpeechSynthesisResult = new SpeechSynthesisResult(\r\n            requestId,\r\n            ResultReason.Canceled,\r\n            undefined,\r\n            error,\r\n            properties\r\n        );\r\n\r\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\r\n            const cancelEvent: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(result);\r\n            try {\r\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesisLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        if (!!this.privSynthesisTurn.isSynthesizing) {\r\n            this.privSynthesisTurn.onStopSynthesizing();\r\n\r\n            this.cancelSynthesis(\r\n                this.privSynthesisTurn.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConnectionMessage = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privSynthesisTurn.isSynthesizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privSynthesisTurn.onServiceTurnStartResponse();\r\n                        break;\r\n                    case \"response\":\r\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\r\n                        break;\r\n                    case \"audio\":\r\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\r\n                            && !!connectionMessage.binaryBody) {\r\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\r\n                            if (!!this.privSpeechSynthesizer.synthesizing) {\r\n                                try {\r\n                                    const audioWithHeader = SynthesisAdapterBase.addHeader(connectionMessage.binaryBody, this.privSynthesisTurn.audioOutputFormat);\r\n                                    const ev: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                                        new SpeechSynthesisResult(\r\n                                            this.privSynthesisTurn.requestId,\r\n                                            ResultReason.SynthesizingAudio,\r\n                                            audioWithHeader));\r\n                                    this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\r\n                                } catch (error) {\r\n                                    // Not going to let errors in the event handler\r\n                                    // trip things up.\r\n                                }\r\n                            }\r\n                            if (this.privSessionAudioDestination !== undefined) {\r\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"audio.metadata\":\r\n                        const metadataList = SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\r\n                        for (const metadata of metadataList) {\r\n                            switch (metadata.Type) {\r\n                                case MetadataType.WordBoundary:\r\n                                case MetadataType.SentenceBoundary:\r\n                                    this.privSynthesisTurn.onTextBoundaryEvent(metadata);\r\n\r\n                                    const wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs = new SpeechSynthesisWordBoundaryEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Duration,\r\n                                        metadata.Data.text.Text,\r\n                                        metadata.Data.text.Length,\r\n                                        metadata.Type === MetadataType.WordBoundary\r\n                                            ? this.privSynthesisTurn.currentTextOffset : this.privSynthesisTurn.currentSentenceOffset,\r\n                                        metadata.Data.text.BoundaryType);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.wordBoundary) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Bookmark:\r\n                                    const bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs = new SpeechSynthesisBookmarkEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Bookmark);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.bookmarkReached) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Viseme:\r\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\r\n                                    if (metadata.Data.IsLastAnimation) {\r\n                                        const visemeEventArgs: SpeechSynthesisVisemeEventArgs = new SpeechSynthesisVisemeEventArgs(\r\n                                            metadata.Data.Offset,\r\n                                            metadata.Data.VisemeId,\r\n                                            this.privSynthesisTurn.getAndClearVisemeAnimation());\r\n\r\n                                        if (!!this.privSpeechSynthesizer.visemeReceived) {\r\n                                            try {\r\n                                                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\r\n                                            } catch (error) {\r\n                                                // Not going to let errors in the event handler\r\n                                                // trip things up.\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.SessionEnd:\r\n                                    this.privSynthesisTurn.onSessionEnd(metadata);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"turn.end\":\r\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\r\n                        let result: SpeechSynthesisResult;\r\n                        try {\r\n                            const audioBuffer: ArrayBuffer = await this.privSynthesisTurn.getAllReceivedAudioWithHeader();\r\n                            result = new SpeechSynthesisResult(\r\n                                this.privSynthesisTurn.requestId,\r\n                                ResultReason.SynthesizingAudioCompleted,\r\n                                audioBuffer,\r\n                                undefined,\r\n                                undefined,\r\n                                this.privSynthesisTurn.audioDuration\r\n                            );\r\n                            if (!!this.privSuccessCallback) {\r\n                                this.privSuccessCallback(result);\r\n                            }\r\n                        } catch (error) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(error as string);\r\n                            }\r\n                        }\r\n                        if (this.privSpeechSynthesizer.synthesisCompleted) {\r\n                            try {\r\n                                this.privSpeechSynthesizer.synthesisCompleted(\r\n                                    this.privSpeechSynthesizer,\r\n                                    new SpeechSynthesisEventArgs(result)\r\n                                );\r\n                            } catch (e) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n\r\n                }\r\n            }\r\n\r\n            return this.receiveMessage();\r\n\r\n        } catch (e) {\r\n            // TODO: What goes here?\r\n        }\r\n    }\r\n\r\n    protected sendSynthesisContext(connection: IConnection): Promise<void> {\r\n        const synthesisContextJson = this.synthesisContext.toJSON();\r\n\r\n        if (synthesisContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"synthesis.context\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                synthesisContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected connectImpl(isUnAuthorized: boolean = false): Promise<IConnection> {\r\n        if (this.privConnectionPromise != null) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        this.privConnectionId = createNoDashGuid();\r\n\r\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId);\r\n\r\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n\r\n        this.privConnectionPromise = authPromise.then(async (result: AuthInfo): Promise<IConnection> => {\r\n            this.privSynthesisTurn.onAuthCompleted(false);\r\n\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent): void => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n            const response = await connection.open();\r\n            if (response.statusCode === 200) {\r\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 403 && !isUnAuthorized) {\r\n                return this.connectImpl(true);\r\n            } else {\r\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privSynthesizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\r\n            }\r\n        }, (error: string): Promise<IConnection> => {\r\n            this.privSynthesisTurn.onAuthCompleted(true);\r\n            throw new Error(error);\r\n        });\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        this.privConnectionPromise.catch((): void => { });\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n    protected sendSpeechServiceConfig(connection: IConnection, SpeechServiceConfigJson: string): Promise<void> {\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n    }\r\n\r\n    protected sendSsmlMessage(connection: IConnection, ssml: string, requestId: string): Promise<void> {\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"ssml\",\r\n            requestId,\r\n            \"application/ssml+xml\",\r\n            ssml));\r\n    }\r\n\r\n    private async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = undefined;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = undefined;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\r\n        return connection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PropertyId, SpeechSynthesizer } from \"../sdk/Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the synthesis.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SynthesisContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privSpeechSynthesizer: SpeechSynthesizer;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n\r\n    public constructor(speechSynthesizer: SpeechSynthesizer) {\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the synthesis.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: string | object): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio output format for synthesis context generation.\r\n     * @param format {AudioOutputFormatImpl} the output format\r\n     */\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const synthesisSection: ISynthesisSection = this.buildSynthesisContext();\r\n        this.setSection(\"synthesis\", synthesisSection);\r\n\r\n        return JSON.stringify(this.privContext);\r\n    }\r\n\r\n    private buildSynthesisContext(): ISynthesisSection {\r\n        return {\r\n            audio: {\r\n                metadataOptions: {\r\n                    bookmarkEnabled: (!!this.privSpeechSynthesizer.bookmarkReached),\r\n                    punctuationBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(\r\n                        PropertyId.SpeechServiceResponse_RequestPunctuationBoundary, (!!this.privSpeechSynthesizer.wordBoundary)),\r\n                    sentenceBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(\r\n                        PropertyId.SpeechServiceResponse_RequestSentenceBoundary, false),\r\n                    sessionEndEnabled: true,\r\n                    visemeEnabled: (!!this.privSpeechSynthesizer.visemeReceived),\r\n                    wordBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(\r\n                        PropertyId.SpeechServiceResponse_RequestWordBoundary, (!!this.privSpeechSynthesizer.wordBoundary)),\r\n                },\r\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\r\n            },\r\n            language: {\r\n                autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage\r\n            }\r\n        } as ISynthesisSection;\r\n    }\r\n}\r\n\r\ninterface ISynthesisSection {\r\n    audio: {\r\n        outputFormat: string;\r\n        metadataOptions: {\r\n            bookmarkEnabled: boolean;\r\n            wordBoundaryEnabled: string;\r\n            punctuationBoundaryEnabled: string;\r\n            visemeEnabled: boolean;\r\n            sentenceBoundaryEnabled: string;\r\n            sessionEndEnabled: boolean;\r\n        };\r\n    };\r\n    language: {\r\n        autoDetection: boolean;\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechSynthesisEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n\r\n    public constructor(eventName: string, requestId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n}\r\n\r\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\r\n    private privSessionAudioDestinationId: string;\r\n    private privTurnAudioDestinationId: string;\r\n\r\n    public constructor(requestId: string, sessionAudioDestinationId: string, turnAudioDestinationId: string) {\r\n        super(\"SynthesisTriggeredEvent\", requestId);\r\n\r\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\r\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\r\n    }\r\n\r\n    public get audioSessionDestinationId(): string {\r\n        return this.privSessionAudioDestinationId;\r\n    }\r\n\r\n    public get audioTurnDestinationId(): string {\r\n        return this.privTurnAudioDestinationId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    public constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    public constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"SynthesisStartedEvent\", requestId);\r\n\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n","import {\r\n    IRequestOptions,\r\n    IRestResponse,\r\n    RestConfigBase,\r\n    RestMessageAdapter,\r\n    RestRequestType,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    PropertyId,\r\n} from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { AuthInfo, IAuthentication, SynthesizerConfig } from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\n/**\r\n * Implements methods for speaker recognition classes, sending requests to endpoint\r\n * and parsing response into expected format\r\n * @class SynthesisRestAdapter\r\n */\r\nexport class SynthesisRestAdapter {\r\n    private privRestAdapter: RestMessageAdapter;\r\n    private privUri: string;\r\n    private privAuthentication: IAuthentication;\r\n\r\n    public constructor(config: SynthesizerConfig, authentication: IAuthentication) {\r\n\r\n        let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"westus\");\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `https://${region}.tts.speech${hostSuffix}`);\r\n        }\r\n        this.privUri = `${endpoint}/cognitiveservices/voices/list`;\r\n\r\n        const options: IRequestOptions = RestConfigBase.requestOptions;\r\n        this.privRestAdapter = new RestMessageAdapter(options);\r\n        this.privAuthentication = authentication;\r\n    }\r\n\r\n    /**\r\n     * Sends list voices request to endpoint.\r\n     * @function\r\n     * @public\r\n     * @param connectionId - guid for connectionId\r\n     * @returns {Promise<IRestResponse>} rest response to status request\r\n     */\r\n    public getVoicesList(connectionId: string): Promise<IRestResponse> {\r\n        this.privRestAdapter.setHeaders(HeaderNames.ConnectionId, connectionId);\r\n        return this.privAuthentication.fetch(connectionId).then((authInfo: AuthInfo): Promise<IRestResponse> => {\r\n            this.privRestAdapter.setHeaders(authInfo.headerName, authInfo.token);\r\n            return this.privRestAdapter.request(RestRequestType.Get, this.privUri);\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IAudioDestination\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { ISynthesisMetadata, MetadataType } from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nimport { SynthesisAdapterBase } from \"./SynthesisAdapterBase\";\r\nimport {\r\n    ConnectingToSynthesisServiceEvent,\r\n    SpeechSynthesisEvent,\r\n    SynthesisStartedEvent,\r\n    SynthesisTriggeredEvent,\r\n} from \"./SynthesisEvents\";\r\n\r\nexport interface ISynthesisResponseContext {\r\n    serviceTag: string;\r\n}\r\n\r\nexport interface ISynthesisResponseAudio {\r\n    type: string;\r\n    streamId: string;\r\n}\r\n\r\nexport interface ISynthesisResponse {\r\n    context: ISynthesisResponseContext;\r\n    audio: ISynthesisResponseAudio;\r\n}\r\n\r\nexport class SynthesisTurn {\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public set streamId(value: string) {\r\n        this.privStreamId = value;\r\n    }\r\n\r\n    public get audioOutputFormat(): AudioOutputFormatImpl {\r\n        return this.privAudioOutputFormat;\r\n    }\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSynthesisEnded(): boolean {\r\n        return this.privIsSynthesisEnded;\r\n    }\r\n\r\n    public get isSynthesizing(): boolean {\r\n        return this.privIsSynthesizing;\r\n    }\r\n\r\n    public get currentTextOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    public get currentSentenceOffset(): number {\r\n        return this.privSentenceOffset;\r\n    }\r\n\r\n    // The number of bytes received for current turn\r\n    public get bytesReceived(): number {\r\n        return this.privBytesReceived;\r\n    }\r\n\r\n    public get audioDuration(): number {\r\n        return this.privAudioDuration;\r\n    }\r\n\r\n    private privIsDisposed: boolean = false;\r\n    private privAuthFetchEventId: string;\r\n    private privIsSynthesizing: boolean = false;\r\n    private privIsSynthesisEnded: boolean = false;\r\n    private privBytesReceived: number = 0;\r\n    private privRequestId: string;\r\n    private privStreamId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privReceivedAudio: ArrayBuffer;\r\n    private privReceivedAudioWithHeader: ArrayBuffer;\r\n    private privTextOffset: number = 0;\r\n    private privNextSearchTextIndex: number = 0;\r\n    private privSentenceOffset: number = 0;\r\n    private privNextSearchSentenceIndex: number = 0;\r\n    private privPartialVisemeAnimation: string;\r\n    private privRawText: string;\r\n    private privIsSSML: boolean;\r\n    private privTurnAudioDestination: IAudioDestination;\r\n    private privAudioDuration: number;\r\n\r\n    public constructor() {\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public async getAllReceivedAudio(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudio) {\r\n            return Promise.resolve(this.privReceivedAudio);\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        await this.readAllAudioFromStream();\r\n        return Promise.resolve(this.privReceivedAudio);\r\n    }\r\n\r\n    public async getAllReceivedAudioWithHeader(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudioWithHeader) {\r\n            return this.privReceivedAudioWithHeader;\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        if (this.audioOutputFormat.hasHeader) {\r\n            const audio: ArrayBuffer = await this.getAllReceivedAudio();\r\n            this.privReceivedAudioWithHeader = SynthesisAdapterBase.addHeader(audio, this.audioOutputFormat);\r\n            return this.privReceivedAudioWithHeader;\r\n        } else {\r\n            return this.getAllReceivedAudio();\r\n        }\r\n    }\r\n\r\n    public startNewSynthesis(requestId: string, rawText: string, isSSML: boolean, audioDestination?: IAudioDestination): void {\r\n        this.privIsSynthesisEnded = false;\r\n        this.privIsSynthesizing = true;\r\n        this.privRequestId = requestId;\r\n        this.privRawText = rawText;\r\n        this.privIsSSML = isSSML;\r\n        this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\r\n        this.privReceivedAudio = null;\r\n        this.privReceivedAudioWithHeader = null;\r\n        this.privBytesReceived = 0;\r\n        this.privTextOffset = 0;\r\n        this.privNextSearchTextIndex = 0;\r\n        this.privSentenceOffset = 0;\r\n        this.privNextSearchSentenceIndex = 0;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        if (audioDestination !== undefined) {\r\n            this.privTurnAudioDestination = audioDestination;\r\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\r\n        }\r\n        this.onEvent(new SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string): void {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\r\n    }\r\n\r\n    public onAuthCompleted(isError: boolean): void {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted(statusCode: number): void {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\r\n            this.privBytesReceived = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceResponseMessage(responseJson: string): void {\r\n        const response: ISynthesisResponse = JSON.parse(responseJson) as ISynthesisResponse;\r\n        this.streamId = response.audio.streamId;\r\n    }\r\n\r\n    public onServiceTurnEndResponse(): void {\r\n        this.privInTurn = false;\r\n        this.privTurnDeferral.resolve();\r\n        this.onComplete();\r\n    }\r\n\r\n    public onServiceTurnStartResponse(): void {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            this.privTurnDeferral.promise.then().catch((): void => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onAudioChunkReceived(data: ArrayBuffer): void {\r\n        if (this.isSynthesizing) {\r\n            this.privAudioOutputStream.write(data);\r\n            this.privBytesReceived += data.byteLength;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.write(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onTextBoundaryEvent(metadata: ISynthesisMetadata): void {\r\n        this.updateTextOffset(metadata.Data.text.Text, metadata.Type);\r\n    }\r\n\r\n    public onVisemeMetadataReceived(metadata: ISynthesisMetadata): void {\r\n        if (metadata.Data.AnimationChunk !== undefined) {\r\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\r\n        }\r\n    }\r\n\r\n    public onSessionEnd(metadata: ISynthesisMetadata): void {\r\n        this.privAudioDuration = metadata.Data.Offset;\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n        }\r\n    }\r\n\r\n    public onStopSynthesizing(): void {\r\n        this.onComplete();\r\n    }\r\n\r\n    /**\r\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\r\n     * partial animation.\r\n     */\r\n    public getAndClearVisemeAnimation(): string {\r\n        const animation: string = this.privPartialVisemeAnimation;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        return animation;\r\n    }\r\n\r\n    protected onEvent(event: SpeechSynthesisEvent): void {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Check if the text is an XML(SSML) tag\r\n     * @param text\r\n     * @private\r\n     */\r\n    private static isXmlTag(text: string): boolean {\r\n        return text.length >= 2 && text[0] === \"<\" && text[text.length - 1] === \">\";\r\n    }\r\n\r\n    private updateTextOffset(text: string, type: MetadataType): void {\r\n        if (type === MetadataType.WordBoundary) {\r\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\r\n            if (this.privTextOffset >= 0) {\r\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\r\n                if (this.privIsSSML) {\r\n                    if (this.withinXmlTag(this.privTextOffset) && !SynthesisTurn.isXmlTag(text)) {\r\n                        this.updateTextOffset(text, type);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.privSentenceOffset = this.privRawText.indexOf(text, this.privNextSearchSentenceIndex);\r\n            if (this.privSentenceOffset >= 0) {\r\n                this.privNextSearchSentenceIndex = this.privSentenceOffset + text.length;\r\n                if (this.privIsSSML) {\r\n                    if (this.withinXmlTag(this.privSentenceOffset) && !SynthesisTurn.isXmlTag(text)) {\r\n                        this.updateTextOffset(text, type);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete(): void {\r\n        if (this.privIsSynthesizing) {\r\n            this.privIsSynthesizing = false;\r\n            this.privIsSynthesisEnded = true;\r\n            this.privAudioOutputStream.close();\r\n            this.privInTurn = false;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.close();\r\n                this.privTurnAudioDestination = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private async readAllAudioFromStream(): Promise<void> {\r\n        if (this.privIsSynthesisEnded) {\r\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\r\n            try {\r\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\r\n            } catch (e) {\r\n                this.privReceivedAudio = new ArrayBuffer(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if current idx is in XML(SSML) tag\r\n     * @param idx\r\n     * @private\r\n     */\r\n    private withinXmlTag(idx: number): boolean {\r\n        return this.privRawText.indexOf(\"<\", idx + 1) > this.privRawText.indexOf(\">\", idx + 1);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport {Context, SpeechServiceConfig} from \"./Exports\";\r\n\r\nexport enum SynthesisServiceType {\r\n    Standard,\r\n    Custom,\r\n}\r\n\r\nexport class SynthesizerConfig {\r\n    private privSynthesisServiceType: SynthesisServiceType = SynthesisServiceType.Standard;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privParameters: PropertyCollection;\r\n\r\n    public constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get synthesisServiceType(): SynthesisServiceType {\r\n        return this.privSynthesisServiceType;\r\n    }\r\n\r\n    public set synthesisServiceType(value: SynthesisServiceType) {\r\n        this.privSynthesisServiceType = value;\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    OutputFormatPropertyName,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class TranscriberConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly multiaudioRelativeUri: string = \"/speech/recognition/multiaudio\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"centralus\");\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const hostDefault: string = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, hostDefault);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        this.setQueryParams(queryParams, config, endpoint);\r\n\r\n        if (!endpoint) {\r\n            endpoint = host;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    public setQueryParams(queryParams: IStringDictionary<string>, config: RecognizerConfig, endpointUrl: string): void {\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId && !(QueryParameterNames.CustomSpeechDeploymentId in queryParams)) {\r\n            queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n        }\r\n\r\n        if (language && !(QueryParameterNames.Language in queryParams)) {\r\n            queryParams[QueryParameterNames.Language] = language;\r\n        }\r\n\r\n        const wordLevelTimings: boolean = config.parameters.getProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase() === \"true\";\r\n        const detailed: boolean = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) !== OutputFormat[OutputFormat.Simple];\r\n        if (wordLevelTimings || detailed) {\r\n            queryParams[QueryParameterNames.Format] = OutputFormat[OutputFormat.Detailed].toLowerCase();\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationTranscriptionCanceledEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { ConversationInfo } from \"../sdk/Transcription/Exports\";\r\nimport { ConversationProperties } from \"../sdk/Transcription/IConversation\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    ConversationServiceRecognizer,\r\n    TranscriberRecognizer\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class TranscriptionServiceRecognizer extends ConversationServiceRecognizer {\r\n\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        transcriber: TranscriberRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\r\n        this.privTranscriberRecognizer = transcriber;\r\n        this.sendPrePayloadJSONOverride = (connection: IConnection): Promise<void> => this.sendTranscriptionStartJSON(connection);\r\n        if (this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps) === \"true\") {\r\n            this.privSpeechContext.setWordLevelTimings();\r\n        }\r\n    }\r\n\r\n    public async sendSpeechEventAsync(info: ConversationInfo, command: string): Promise<void> {\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\r\n        }\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n        return this.processSpeechMessages(connectionMessage);\r\n    }\r\n\r\n    protected handleRecognizedCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        try {\r\n            const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, offset, sessionId);\r\n            this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\r\n            if (!!this.privSuccessCallback) {\r\n                try {\r\n                    this.privSuccessCallback(result);\r\n                } catch (e) {\r\n                    if (!!this.privErrorCallback) {\r\n                        this.privErrorCallback(e as string);\r\n                    }\r\n                }\r\n                // Only invoke the call back once.\r\n                // and if it's successful don't invoke the\r\n                // error after that.\r\n                this.privSuccessCallback = undefined;\r\n                this.privErrorCallback = undefined;\r\n            }\r\n        /* eslint-disable no-empty */\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    protected handleRecognizingCallback(result: SpeechRecognitionResult, duration: number, sessionId: string): void {\r\n        try {\r\n            const ev = new SpeechRecognitionEventArgs(result, duration, sessionId);\r\n            this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\r\n            /* eslint-disable no-empty */\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranscriberRecognizer.canceled) {\r\n            const cancelEvent: ConversationTranscriptionCanceledEventArgs = new ConversationTranscriptionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendTranscriptionStartJSON(connection: IConnection): Promise<void> {\r\n        await this.sendSpeechContext(connection, true);\r\n        const info: ConversationInfo = this.privTranscriberRecognizer.getConversationInfo();\r\n        const payload: { [id: string]: any } = this.createSpeechEventPayload(info, \"start\");\r\n        await this.sendSpeechEvent(connection, payload);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected sendSpeechEvent(connection: IConnection, payload: { [id: string]: any }): Promise<void> {\r\n        const speechEventJson = JSON.stringify(payload);\r\n\r\n        if (speechEventJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.event\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechEventJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    private createSpeechEventPayload(info: ConversationInfo, command: string): { [id: string]: any } {\r\n        const eventDict: { id: string; name: string; meeting: ConversationProperties } = { id: \"meeting\", name: command, meeting: info.conversationProperties };\r\n        eventDict.meeting.id = info.id;\r\n        eventDict.meeting.attendees = info.participants;\r\n        eventDict.meeting.record = info.conversationProperties.audiorecording === \"on\" ? \"true\" : \"false\";\r\n        return eventDict;\r\n    }\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    RestConfigBase\r\n} from \"../../common.browser/RestConfigBase\";\r\n\r\nexport class ConversationConnectionConfig extends RestConfigBase {\r\n\r\n    private static readonly privHost: string = \"dev.microsofttranslator.com\";\r\n    private static readonly privRestPath: string = \"/capito/room\";\r\n    private static readonly privApiVersion: string = \"2.0\";\r\n    private static readonly privDefaultLanguageCode: string = \"en-US\";\r\n    private static readonly privClientAppId: string = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\r\n    private static readonly privWebSocketPath: string = \"/capito/translate\";\r\n    private static readonly privTranscriptionEventKeys: string[] = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\r\n\r\n    public static get host(): string {\r\n        return ConversationConnectionConfig.privHost;\r\n    }\r\n\r\n    public static get apiVersion(): string {\r\n        return ConversationConnectionConfig.privApiVersion;\r\n    }\r\n\r\n    public static get clientAppId(): string {\r\n        return ConversationConnectionConfig.privClientAppId;\r\n    }\r\n\r\n    public static get defaultLanguageCode(): string {\r\n        return ConversationConnectionConfig.privDefaultLanguageCode;\r\n    }\r\n\r\n    public static get restPath(): string {\r\n        return ConversationConnectionConfig.privRestPath;\r\n    }\r\n\r\n    public static get webSocketPath(): string {\r\n        return ConversationConnectionConfig.privWebSocketPath;\r\n    }\r\n\r\n    public static get transcriptionEventKeys(): string[] {\r\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ProxyInfo, WebsocketConnection } from \"../../common.browser/Exports\";\r\nimport { createGuid, IConnection, IStringDictionary } from \"../../common/Exports\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { PropertyId } from \"../../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"../ConnectionFactoryBase\";\r\nimport { AuthInfo, RecognizerConfig } from \"../Exports\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nimport { ConversationWebsocketMessageFormatter } from \"./ConversationWebsocketMessageFormatter\";\r\n\r\n/**\r\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\r\n * The conversation must already have been started or joined.\r\n */\r\nexport class ConversationConnectionFactory extends ConnectionFactoryBase  {\r\n\r\n    public create(config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n\r\n        const endpointHost: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Host, ConversationConnectionConfig.host);\r\n        const correlationId: string = config.parameters.getProperty(PropertyId.ConversationTranslator_CorrelationId, createGuid());\r\n\r\n        const endpoint: string = `wss://${endpointHost}${ConversationConnectionConfig.webSocketPath}`;\r\n        const token: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Token, undefined);\r\n        Contracts.throwIfNullOrUndefined(token, \"token\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig.apiVersion;\r\n        queryParams[ConversationConnectionConfig.configParams.token] = token;\r\n        queryParams[ConversationConnectionConfig.configParams.correlationId] = correlationId;\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionMessage, IStringDictionary, MessageType } from \"../../common/Exports\";\r\n\r\nexport class ConversationConnectionMessage extends ConnectionMessage {\r\n    private privConversationMessageType: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n            super(messageType, body, headers, id);\r\n            const json: { type: string } = JSON.parse(this.textBody) as { type: string };\r\n            if (json.type !== undefined) {\r\n                this.privConversationMessageType = json.type;\r\n            }\r\n    }\r\n\r\n    public get conversationMessageType(): string {\r\n        return this.privConversationMessageType;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRequestOptions,\r\n    IRestParams,\r\n    IRestResponse,\r\n    RestMessageAdapter,\r\n    RestRequestType\r\n} from \"../../common.browser/Exports\";\r\nimport { IErrorMessages, IStringDictionary } from \"../../common/Exports\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { PropertyCollection, PropertyId } from \"../../sdk/Exports\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nimport { IConversationResponseError, IInternalConversation } from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class ConversationManager {\r\n\r\n    private privRequestParams: IRestParams;\r\n    private privErrors: IErrorMessages;\r\n    private privHost: string;\r\n    private privApiVersion: string;\r\n    private privRestPath: string;\r\n    private privRestAdapter: RestMessageAdapter;\r\n\r\n    public constructor() {\r\n        //\r\n        this.privRequestParams = ConversationConnectionConfig.configParams;\r\n        this.privErrors = ConversationConnectionConfig.restErrors;\r\n        this.privHost = ConversationConnectionConfig.host;\r\n        this.privApiVersion = ConversationConnectionConfig.apiVersion;\r\n        this.privRestPath = ConversationConnectionConfig.restPath;\r\n        this.privRestAdapter = new RestMessageAdapter({});\r\n    }\r\n\r\n    /**\r\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\r\n     * @param args\r\n     * @param conversationCode\r\n     * @param callback\r\n     * @param errorCallback\r\n     */\r\n    public createOrJoin(args: PropertyCollection, conversationCode: string, cb?: (c: any) => void, err?: (e: string) => void): void {\r\n\r\n        try {\r\n\r\n            Contracts.throwIfNullOrUndefined(args, \"args\");\r\n\r\n            const languageCode: string = args.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig.defaultLanguageCode);\r\n            const nickname: string = args.getProperty(PropertyId.ConversationTranslator_Name, \"conversation_host\");\r\n            const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n            const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n            const subscriptionKey: string = args.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n            const subscriptionRegion: string = args.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n            const authToken: string = args.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n\r\n            Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\r\n            Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n            Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\r\n\r\n            const queryParams: IStringDictionary<string> = {};\r\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n            queryParams[this.privRequestParams.languageCode] = languageCode;\r\n            queryParams[this.privRequestParams.nickname] = nickname;\r\n\r\n            const headers: IStringDictionary<string> = {};\r\n            if (correlationId) {\r\n                headers[this.privRequestParams.correlationId] = correlationId;\r\n            }\r\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig.clientAppId;\r\n\r\n            if (conversationCode !== undefined) {\r\n                queryParams[this.privRequestParams.roomId] = conversationCode;\r\n            } else {\r\n                Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\r\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\r\n                if (subscriptionKey) {\r\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\r\n                } else if (authToken) {\r\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\r\n                } else {\r\n                    Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\r\n                }\r\n            }\r\n\r\n            const config: IRequestOptions = {};\r\n            config.headers = headers;\r\n            this.privRestAdapter.options = config;\r\n\r\n            const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n            // TODO: support a proxy and certificate validation\r\n            this.privRestAdapter.request(RestRequestType.Post, endpoint, queryParams, null).then((response: IRestResponse): void => {\r\n\r\n                const requestId: string = RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\r\n\r\n                if (!response.ok) {\r\n                    if (!!err) {\r\n                        // get the error\r\n                        let errorMessage: string = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\r\n                        let errMessageRaw: IConversationResponseError;\r\n                        try {\r\n                            errMessageRaw = JSON.parse(response.data) as IConversationResponseError;\r\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\r\n                        } catch (e) {\r\n                            errorMessage += ` [${response.data}]`;\r\n                        }\r\n                        if (requestId) {\r\n                            errorMessage += ` ${requestId}`;\r\n                        }\r\n\r\n                        err(errorMessage);\r\n                    }\r\n                    return;\r\n                }\r\n                const conversation: IInternalConversation = JSON.parse(response.data) as IInternalConversation;\r\n                if (conversation) {\r\n                    conversation.requestId = requestId;\r\n                }\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(conversation);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e as string);\r\n                        }\r\n                    }\r\n                    cb = undefined;\r\n                }\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            }).catch( (): void => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\r\n     * @param args\r\n     * @param sessionToken\r\n     * @param callback\r\n     */\r\n    public leave(args: PropertyCollection, sessionToken: string): Promise<void> {\r\n        return new Promise<void>((resolve: () => void, reject: (reason: string) => void): void => {\r\n            try {\r\n\r\n                Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n                Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\r\n\r\n                const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n                const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n\r\n                const queryParams: IStringDictionary<string> = {};\r\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\r\n\r\n                const headers: IStringDictionary<string> = {};\r\n                if (correlationId) {\r\n                    headers[this.privRequestParams.correlationId] = correlationId;\r\n                }\r\n\r\n                const config: IRequestOptions = {};\r\n                config.headers = headers;\r\n                this.privRestAdapter.options = config;\r\n\r\n                const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n                // TODO: support a proxy and certificate validation\r\n                this.privRestAdapter.request(RestRequestType.Delete, endpoint, queryParams, null).then((response: IRestResponse): void => {\r\n\r\n                    if (!response.ok) {\r\n                        // ignore errors on delete\r\n                    }\r\n\r\n                    resolve();\r\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                }).catch( (): void => {});\r\n\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    reject(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    reject(error as string);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IDetachable,\r\n} from \"../../common/Exports\";\r\n\r\n/**\r\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\r\n * TODO: define what telemetry is required.\r\n */\r\nexport class ConversationRequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privRequestCompletionDeferral: Deferred<void>;\r\n    private privSessionId: string;\r\n\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privRequestCompletionDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get completionPromise(): Promise<void> {\r\n        return this.privRequestCompletionDeferral.promise;\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string, connectionId: string): void {\r\n        this.privSessionId = connectionId;\r\n    }\r\n\r\n    public onAuthCompleted(isError: boolean): void {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted(statusCode: number): void {\r\n        if (statusCode === 200) {\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceTurnEndResponse(continuousRecognition: boolean): void {\r\n        if (!continuousRecognition) {\r\n            this.onComplete();\r\n        } else {\r\n            this.privRequestId = createNoDashGuid();\r\n        }\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete(): void {\r\n        //\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationResult,\r\n    Translations\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    CognitiveTokenAuthentication,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase\r\n} from \"../Exports\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\r\nimport { ConversationRequestSession } from \"./ConversationRequestSession\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs\";\r\nimport {\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalParticipant\r\n} from \"./ConversationTranslatorInterfaces\";\r\nimport { ConversationTranslatorRecognizer } from \"./ConversationTranslatorRecognizer\";\r\nimport {\r\n    CommandResponsePayload,\r\n    IParticipantPayloadResponse,\r\n    IParticipantsListPayloadResponse,\r\n    ITranslationResponsePayload,\r\n    ParticipantPayloadResponse,\r\n    ParticipantsListPayloadResponse,\r\n    SpeechResponsePayload,\r\n    TextResponsePayload\r\n} from \"./ServiceMessages/Exports\";\r\n\r\n/**\r\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\r\n */\r\nexport class ConversationServiceAdapter extends ServiceRecognizerBase {\r\n    private privConversationServiceConnector: ConversationTranslatorRecognizer;\r\n    private privConversationConnectionFactory: IConnectionFactory;\r\n    private privConversationAuthFetchEventId: string;\r\n    private privConversationAuthentication: IAuthentication;\r\n    private privConversationRequestSession: ConversationRequestSession;\r\n    private privConnectionConfigPromise: Promise<IConnection> = undefined;\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private privLastPartialUtteranceId: string;\r\n    private privConversationIsDisposed: boolean;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        conversationServiceConnector: ConversationTranslatorRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\r\n\r\n        this.privLastPartialUtteranceId = \"\";\r\n        this.privConversationServiceConnector = conversationServiceConnector;\r\n        this.privConversationAuthentication = authentication;\r\n        this.receiveMessageOverride = (): Promise<void> => this.receiveConversationMessageOverride();\r\n        this.recognizeOverride = (): Promise<void> => this.noOp();\r\n        this.postConnectImplOverride = (connection: Promise<IConnection>): Promise<IConnection> => this.conversationConnectImpl(connection);\r\n        this.configConnectionOverride = (): Promise<IConnection> => this.configConnection();\r\n        this.disconnectOverride = (): Promise<void> => this.privDisconnect();\r\n        this.privConversationRequestSession = new ConversationRequestSession(createNoDashGuid());\r\n        this.privConversationConnectionFactory = connectionFactory;\r\n        this.privConversationIsDisposed = false;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return super.isDisposed() || this.privConversationIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privConversationIsDisposed = true;\r\n        if (this.privConnectionConfigPromise !== undefined) {\r\n            const connection: IConnection = await this.privConnectionConfigPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n        await super.dispose(reason);\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new ConversationConnectionMessage(\r\n            MessageType.Text,\r\n            message));\r\n    }\r\n\r\n    public async sendMessageAsync(message: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n\r\n        await connection.send(new ConversationConnectionMessage(MessageType.Text, message));\r\n    }\r\n\r\n    protected privDisconnect(): Promise<void> {\r\n        if (this.terminateMessageLoop) {\r\n            return;\r\n        }\r\n        this.cancelRecognition(this.privConversationRequestSession.sessionId,\r\n            this.privConversationRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/require-await\r\n    protected async processTypeSpecificMessages(): Promise<boolean> {\r\n        return true;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n            cancellationReason,\r\n            error,\r\n            errorCode,\r\n            undefined,\r\n            sessionId);\r\n\r\n        try {\r\n            if (!!this.privConversationServiceConnector.canceled) {\r\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\r\n            }\r\n        } catch {\r\n            // continue on error\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Establishes a websocket connection to the end point.\r\n     */\r\n    protected async conversationConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    /**\r\n     * Process incoming websocket messages\r\n     */\r\n    private async receiveConversationMessageOverride(): Promise<void> {\r\n        if (this.isDisposed() || this.terminateMessageLoop) {\r\n            return Promise.resolve();\r\n        }\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConversationConnectionMessage = await connection.read() as ConversationConnectionMessage;\r\n            if (this.isDisposed() || this.terminateMessageLoop) {\r\n                // We're done.\r\n                communicationCustodian.resolve();\r\n                return Promise.resolve();\r\n            }\r\n\r\n            if (!message) {\r\n                return this.receiveConversationMessageOverride();\r\n            }\r\n\r\n            const sessionId: string = this.privConversationRequestSession.sessionId;\r\n            let sendFinal: boolean = false;\r\n\r\n            try {\r\n                switch (message.conversationMessageType.toLowerCase()) {\r\n                    case \"info\":\r\n                    case \"participant_command\":\r\n                    case \"command\":\r\n                        const commandPayload: CommandResponsePayload = CommandResponsePayload.fromJSON(message.textBody);\r\n                        switch (commandPayload.command.toLowerCase()) {\r\n\r\n                            /**\r\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\r\n                             * The consuming client must wait for this message to arrive\r\n                             * before starting to send their own data.\r\n                             */\r\n                            case \"participantlist\":\r\n\r\n                                const participantsPayload: IParticipantsListPayloadResponse = ParticipantsListPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const participantsResult: IInternalParticipant[] = participantsPayload.participants.map((p: IParticipantPayloadResponse): IInternalParticipant => {\r\n                                    const participant: IInternalParticipant = {\r\n                                        avatar: p.avatar,\r\n                                        displayName: p.nickname,\r\n                                        id: p.participantId,\r\n                                        isHost: p.ishost,\r\n                                        isMuted: p.ismuted,\r\n                                        isUsingTts: p.usetts,\r\n                                        preferredLanguage: p.locale\r\n                                    };\r\n                                    return participant;\r\n                                });\r\n\r\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\r\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token,\r\n                                            participantsPayload.translateTo, participantsPayload.profanityFilter,\r\n                                            participantsPayload.roomProfanityFilter, participantsPayload.roomLocked,\r\n                                            participantsPayload.muteAll, participantsResult, sessionId));\r\n                                }\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\r\n                             * This is sent at the start of the Conversation\r\n                             */\r\n                            case \"settranslatetolanguages\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\r\n                             * If sent by the participant the setting will effect only their own profanity level.\r\n                             * If sent by the host, the setting will effect all participants including the host.\r\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\r\n                             */\r\n                            case \"setprofanityfiltering\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setProfanityFiltering,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMute' is sent if the participant has been muted by the host.\r\n                             * Check the 'participantId' to determine if the current user has been muted.\r\n                             */\r\n                            case \"setmute\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setMute,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\r\n                             */\r\n                            case \"setmuteall\":\r\n\r\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\r\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector,\r\n                                        new MuteAllEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\r\n                             */\r\n                            case \"roomexpirationwarning\":\r\n\r\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\r\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector,\r\n                                        new ConversationExpirationEventArgs(commandPayload.value as number, this.privConversationRequestSession.sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\r\n                             */\r\n                            case \"setusetts\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setUseTTS,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\r\n                             */\r\n                            case \"setlockstate\":\r\n\r\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\r\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector,\r\n                                        new LockRoomEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'ChangeNickname' is received if a user changes their display name.\r\n                             * Any cached particpiants list should be updated to reflect the display name.\r\n                             */\r\n                            case \"changenickname\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.changeNickname,\r\n                                            commandPayload.nickname, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'JoinSession' is sent when a user joins the Conversation.\r\n                             */\r\n                            case \"joinsession\":\r\n\r\n                                const joinParticipantPayload: ParticipantPayloadResponse = ParticipantPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const joiningParticipant: IInternalParticipant = {\r\n                                    avatar: joinParticipantPayload.avatar,\r\n                                    displayName: joinParticipantPayload.nickname,\r\n                                    id: joinParticipantPayload.participantId,\r\n                                    isHost: joinParticipantPayload.ishost,\r\n                                    isMuted: joinParticipantPayload.ismuted,\r\n                                    isUsingTts: joinParticipantPayload.usetts,\r\n                                    preferredLanguage: joinParticipantPayload.locale,\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(\r\n                                            joiningParticipant,\r\n                                            sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\r\n                             */\r\n                            case \"leavesession\":\r\n\r\n                                const leavingParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(leavingParticipant, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\r\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\r\n                             */\r\n                            case \"disconnectsession\":\r\n\r\n                                // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                                const disconnectParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                break;\r\n\r\n                            case \"token\":\r\n                                const token = new CognitiveTokenAuthentication(\r\n                                    (): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    },\r\n                                    (): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    });\r\n                                this.authentication = token;\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * Message not recognized.\r\n                             */\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n\r\n                    /**\r\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\r\n                     */\r\n                    case \"partial\":\r\n\r\n                    /**\r\n                     * 'final' (or 'phrase') represents a finalized speech message.\r\n                     */\r\n                    case \"final\":\r\n\r\n                        const speechPayload: SpeechResponsePayload = SpeechResponsePayload.fromJSON(message.textBody);\r\n\r\n                        const speechResult: ConversationTranslationResult = new ConversationTranslationResult(speechPayload.participantId,\r\n                            this.getTranslations(speechPayload.translations),\r\n                            speechPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            speechPayload.recognition,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (speechPayload.isFinal) {\r\n                            // check the length, sometimes empty finals are returned\r\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\r\n                                sendFinal = true;\r\n                            } else if (speechPayload.id === this.privLastPartialUtteranceId) {\r\n                                // send final as normal. We had a non-empty partial for this same utterance\r\n                                // so sending the empty final is important\r\n                                sendFinal = true;\r\n                            } else {\r\n                                // suppress unneeded final\r\n                            }\r\n\r\n                            if (sendFinal) {\r\n                                if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                        new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.final, speechResult, sessionId));\r\n                                }\r\n                            }\r\n                        } else if (speechResult.text !== undefined) {\r\n                            this.privLastPartialUtteranceId = speechPayload.id;\r\n                            if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                    new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n\r\n                    /**\r\n                     * \"translated_message\" is a text message or instant message (IM).\r\n                     */\r\n                    case \"translated_message\":\r\n\r\n                        const textPayload: TextResponsePayload = TextResponsePayload.fromJSON(message.textBody);\r\n\r\n                        const textResult: ConversationTranslationResult = new ConversationTranslationResult(textPayload.participantId,\r\n                            this.getTranslations(textPayload.translations),\r\n                            textPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            textPayload.originalText,\r\n                            undefined,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (!!this.privConversationServiceConnector.translationReceived) {\r\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // ignore any unsupported message types\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                // continue\r\n            }\r\n            return this.receiveConversationMessageOverride();\r\n        } catch (e) {\r\n            this.terminateMessageLoop = true;\r\n        }\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve();\r\n        }\r\n        this.terminateMessageLoop = false;\r\n\r\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\r\n\r\n        try {\r\n            const r = await messageRetrievalPromise;\r\n            return r;\r\n        } catch (error) {\r\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", CancellationReason.Error, CancellationErrorCode.RuntimeError, error as string);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint\r\n    private configConnection(): Promise<IConnection> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n        if (this.privConnectionConfigPromise !== undefined) {\r\n            return this.privConnectionConfigPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigPromise = undefined;\r\n                    return this.configConnection();\r\n                }\r\n                return this.privConnectionConfigPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigPromise = undefined;\r\n                return this.configConnection();\r\n            });\r\n        }\r\n        if (this.terminateMessageLoop) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n\r\n        this.privConnectionConfigPromise = this.connectImpl().then((connection: IConnection): IConnection => connection);\r\n\r\n        return this.privConnectionConfigPromise;\r\n    }\r\n\r\n    private getTranslations(serviceResultTranslations: ITranslationResponsePayload[]): Translations {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResultTranslations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResultTranslations) {\r\n                translations.set(translation.lang, translation.translation);\r\n            }\r\n        }\r\n\r\n        return translations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    RestConfigBase,\r\n    WebsocketConnection,\r\n} from \"../../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary,\r\n} from \"../../common/Exports\";\r\nimport { StringUtils } from \"../../common/StringUtils\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    PropertyId\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    ConversationImpl\r\n} from \"../../sdk/Transcription/Conversation\";\r\nimport { HeaderNames } from \"../HeaderNames\";\r\nimport { QueryParameterNames } from \"../QueryParameterNames\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./../ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    TranscriberConnectionFactory,\r\n    TranslationConnectionFactory,\r\n    WebsocketMessageFormatter,\r\n} from \"./../Exports\";\r\n\r\n/**\r\n * Connection factory for the conversation translator. Handles connecting to the regular translator endpoint,\r\n * as well as the virtual microphone array transcription endpoint\r\n */\r\nexport class ConversationTranslatorConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private static readonly CTS_VIRT_MIC_PATH: string = \"/speech/recognition/dynamicaudio\";\r\n\r\n    private privConvGetter: () => ConversationImpl;\r\n\r\n    public constructor(convGetter: () => ConversationImpl) {\r\n        super();\r\n\r\n        Contracts.throwIfNullOrUndefined(convGetter, \"convGetter\");\r\n        this.privConvGetter = convGetter;\r\n    }\r\n\r\n    public create(config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n        const isVirtMicArrayEndpoint = config.parameters.getProperty(\"ConversationTranslator_MultiChannelAudio\", \"\").toUpperCase() === \"TRUE\";\r\n\r\n        const convInfo = this.privConvGetter().room;\r\n        const region = convInfo.cognitiveSpeechRegion || config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"\");\r\n\r\n        const replacementValues: IStringDictionary<string> = {\r\n            hostSuffix: ConnectionFactoryBase.getHostSuffix(region),\r\n            path: ConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH,\r\n            region: encodeURIComponent(region)\r\n        };\r\n        replacementValues[QueryParameterNames.Language] = encodeURIComponent(config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"\"));\r\n        replacementValues[QueryParameterNames.CtsMeetingId] = encodeURIComponent(convInfo.roomId);\r\n        replacementValues[QueryParameterNames.CtsDeviceId] = encodeURIComponent(convInfo.participantId);\r\n        replacementValues[QueryParameterNames.CtsIsParticipant] = convInfo.isHost ? \"\" : (\"&\" + QueryParameterNames.CtsIsParticipant);\r\n\r\n        let endpointUrl: string = \"\";\r\n        const queryParams: IStringDictionary<string> = {};\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (isVirtMicArrayEndpoint) {\r\n            // connecting to the conversation transcription virtual microphone array endpoint\r\n            endpointUrl = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n            if (!endpointUrl) {\r\n                const hostName = config.parameters.getProperty(\r\n                    PropertyId.SpeechServiceConnection_Host,\r\n                    \"transcribe.{region}.cts.speech{hostSuffix}\");\r\n\r\n                endpointUrl = \"wss://\" + hostName + \"{path}\";\r\n            }\r\n\r\n            // because the region can change during a session, we support being passed a format string which we can then\r\n            // replace with the correct information.\r\n            endpointUrl = StringUtils.formatString(endpointUrl, replacementValues);\r\n\r\n            const parsedUrl = new URL(endpointUrl);\r\n            parsedUrl.searchParams.forEach((val: string, key: string): void => {\r\n                queryParams[key] = val;\r\n            });\r\n\r\n            const connFactory = new TranscriberConnectionFactory();\r\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\r\n\r\n            // Some query parameters are required for the CTS endpoint, let's explicity set them here\r\n            queryParams[QueryParameterNames.CtsMeetingId] = replacementValues[QueryParameterNames.CtsMeetingId];\r\n            queryParams[QueryParameterNames.CtsDeviceId] = replacementValues[QueryParameterNames.CtsDeviceId];\r\n            if (!convInfo.isHost) {\r\n                queryParams[QueryParameterNames.CtsIsParticipant] = \"\"; // this doesn't have a value so set to an empty string\r\n            }\r\n\r\n            if (!(QueryParameterNames.Format in queryParams)) {\r\n                queryParams[QueryParameterNames.Format] = \"simple\";\r\n            }\r\n\r\n            parsedUrl.searchParams.forEach((val: string, key: string): void => {\r\n                parsedUrl.searchParams.set(key, queryParams[key]);\r\n                delete queryParams[key];\r\n            });\r\n\r\n            endpointUrl = parsedUrl.toString();\r\n\r\n        } else {\r\n            // connecting to regular translation endpoint\r\n            const connFactory = new TranslationConnectionFactory();\r\n\r\n            endpointUrl = connFactory.getEndpointUrl(config, true);\r\n            endpointUrl = StringUtils.formatString(endpointUrl, replacementValues);\r\n\r\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\r\n        }\r\n\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        headers[RestConfigBase.configParams.token] = convInfo.token;\r\n        if (authInfo.token) {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n\r\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"\").toUpperCase() === \"TRUE\";\r\n        return new WebsocketConnection(endpointUrl, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\nimport { ConversationTranslationResult, SessionEventArgs } from \"../../sdk/Exports\";\r\nimport { IInternalParticipant } from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class MuteAllEventArgs extends SessionEventArgs {\r\n    private privIsMuted: boolean;\r\n\r\n    public constructor(isMuted: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsMuted = isMuted;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n}\r\n\r\nexport class LockRoomEventArgs extends SessionEventArgs {\r\n    private privIsLocked: boolean;\r\n\r\n    public constructor(isLocked: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsLocked = isLocked;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsLocked;\r\n    }\r\n}\r\n\r\nexport class ParticipantEventArgs extends SessionEventArgs {\r\n    private privParticipant: IInternalParticipant;\r\n\r\n    public constructor(participant: IInternalParticipant, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privParticipant = participant;\r\n    }\r\n\r\n    public get participant(): IInternalParticipant {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n\r\nexport class ParticipantAttributeEventArgs extends SessionEventArgs {\r\n    private privValue: boolean | number | string | string[];\r\n    private privKey: string;\r\n    private privParticipantId: string;\r\n\r\n    public constructor(participantId: string, key: string, value: boolean | number | string |  string[], sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privKey = key;\r\n        this.privValue = value;\r\n        this.privParticipantId = participantId;\r\n    }\r\n\r\n    public get value(): boolean | number | string |  string[] {\r\n        return this.privValue;\r\n    }\r\n\r\n    public get key(): string {\r\n        return this.privKey;\r\n    }\r\n    public get id(): string {\r\n        return this.privParticipantId;\r\n    }\r\n}\r\n\r\nexport class ParticipantsListEventArgs extends SessionEventArgs {\r\n\r\n    private privRoomId: string;\r\n    private privSessionToken: string;\r\n    private privTranslateTo: string[];\r\n    private privProfanityFilter: string;\r\n    private privRoomProfanityFilter: string;\r\n    private privIsRoomLocked: boolean;\r\n    private privIsMuteAll: boolean;\r\n    private privParticipants: IInternalParticipant[];\r\n\r\n    public constructor(conversationId: string, token: string, translateTo: string[], profanityFilter: string,\r\n                       roomProfanityFilter: string, isRoomLocked: boolean, isMuteAll: boolean, participants: IInternalParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privRoomId = conversationId;\r\n        this.privSessionToken = token;\r\n        this.privTranslateTo = translateTo;\r\n        this.privProfanityFilter = profanityFilter;\r\n        this.privRoomProfanityFilter = roomProfanityFilter;\r\n        this.privIsRoomLocked = isRoomLocked;\r\n        this.privIsRoomLocked = isMuteAll;\r\n        this.privParticipants = participants;\r\n    }\r\n    public get sessionToken(): string {\r\n        return this.privSessionToken;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privRoomId;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privTranslateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privProfanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privRoomProfanityFilter;\r\n    }\r\n\r\n    public get isRoomLocked(): boolean {\r\n        return this.privIsRoomLocked;\r\n    }\r\n\r\n    public get isMuteAll(): boolean {\r\n        return this.privIsMuteAll;\r\n    }\r\n\r\n    public get participants(): IInternalParticipant[] {\r\n        return this.privParticipants;\r\n    }\r\n}\r\n\r\nexport class ConversationReceivedTranslationEventArgs {\r\n    private privPayload: ConversationTranslationResult;\r\n    private privCommand: string;\r\n    private privSessionId: string;\r\n\r\n    public constructor(command: string, payload: ConversationTranslationResult,  sessionId?: string) {\r\n        this.privPayload = payload;\r\n        this.privCommand = command;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get payload(): ConversationTranslationResult {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privCommand;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    SessionEventArgs,\r\n    } from \"../../sdk/Exports\";\r\n// import { ConversationClient } from \"./ConversationConnection\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs\";\r\n\r\n/**\r\n * Internal conversation data\r\n */\r\nexport interface IInternalConversation {\r\n    // the token to use for connecting to the Speech Service\r\n    cognitiveSpeechAuthToken: string;\r\n    // the region to use for connecting to the Speech Service\r\n    cognitiveSpeechRegion: string;\r\n    // the unique id of the user who started or joined the Conversation\r\n    participantId: string;\r\n    // a descriptive name for the Conversation\r\n    name: string;\r\n    // a descriptive name for the Conversation\r\n    description: string;\r\n    // the speech model ID for custom speech\r\n    speechModel: string;\r\n    // represents the level of speech supported in the Conversation (0: everyone can speak, 2: only host can speak, 3: no-one can speak)\r\n    modalities: number;\r\n    // ?\r\n    isApproved: boolean;\r\n    // the mute flag has been set at conversation level and only the host can speak\r\n    isMuted: boolean;\r\n    // the 5 character conversation Id\r\n    roomId: string;\r\n    // the hex color string to represent a user. If there are many users this hex color may be reused (?).\r\n    avatar: string;\r\n    // the token to use when calling the websocket\r\n    token: string;\r\n    // used for tracking the session and help with troubleshooting problems in the logs\r\n    correlationId: string;\r\n    // extracted from the headers\r\n    requestId: string;\r\n    // set programmatically\r\n    isHost: boolean;\r\n}\r\n\r\n/**\r\n * The user who is participating in the conversation.\r\n */\r\nexport interface IInternalParticipant {\r\n    avatar?: string;\r\n    displayName?: string;\r\n    id?: string;\r\n    isHost?: boolean;\r\n    isMuted?: boolean;\r\n    isUsingTts?: boolean;\r\n    profanity?: boolean;\r\n    preferredLanguage?: string;\r\n    translateToLanguages?: string[];\r\n    voice?: string;\r\n}\r\n\r\n/** Users participating in the conversation */\r\nexport class InternalParticipants {\r\n\r\n    public constructor(public participants: IInternalParticipant[] = [], public meId?: string) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Add or update a participant\r\n     * @param value\r\n     */\r\n    public addOrUpdateParticipant(value: IInternalParticipant): IInternalParticipant {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n\r\n        const exists: number = this.getParticipantIndex(value.id);\r\n        if (exists > -1) {\r\n            this.participants.splice(exists, 1, value);\r\n        } else {\r\n            this.participants.push(value);\r\n        }\r\n\r\n        // ensure it was added ok\r\n        return this.getParticipant(value.id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant's position in the participants list.\r\n     * @param id\r\n     */\r\n    public getParticipantIndex(id: string): number {\r\n        return this.participants.findIndex((p: IInternalParticipant): boolean => p.id === id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant by id.\r\n     * @param id\r\n     */\r\n    public getParticipant(id: string): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant): boolean => p.id === id);\r\n    }\r\n\r\n    /**\r\n     * Remove a participant from the participants list.\r\n     */\r\n    public deleteParticipant(id: string): void {\r\n        this.participants = this.participants.filter((p: IInternalParticipant): boolean => p.id !== id);\r\n    }\r\n\r\n    /**\r\n     * Helper to return the conversation host.\r\n     */\r\n    public get host(): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant): boolean => p.isHost === true );\r\n    }\r\n\r\n    /**\r\n     * Helper to return the current user.\r\n     */\r\n    public get me(): IInternalParticipant {\r\n        return this.getParticipant(this.meId);\r\n    }\r\n}\r\n\r\n/**\r\n * Recognizer for handling Conversation Translator websocket messages\r\n */\r\nexport interface ConversationRecognizer {\r\n    isDisposed(): boolean;\r\n    sendRequest: (command: string, cb?: () => void, err?: (e: string) => void) => void;\r\n    cancelSpeech?: () => Promise<void>;\r\n    close?: () => Promise<void>;\r\n    conversationExpiration?: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    connected?: (e: ConnectionEventArgs) => void;\r\n    disconnected?: (e: ConnectionEventArgs) => void;\r\n    canceled?: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    connectionOpened?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    connectionClosed?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    participantsListReceived?: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    translationReceived?: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    lockRoomCommandReceived?: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    muteAllCommandReceived?: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    participantJoinCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantLeaveCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantUpdateCommandReceived?: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    connect?: (token: string, cb?: () => void, err?: (e: string) => void) => void;\r\n}\r\n\r\n/**\r\n * Error message returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseErrorMessage {\r\n    code: string;\r\n    message: string;\r\n}\r\n\r\n/**\r\n * Error returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseError {\r\n    error: IConversationResponseErrorMessage;\r\n}\r\n\r\n/**\r\n * Base message command\r\n */\r\nexport interface IClientMessage {\r\n    type: any;\r\n}\r\n\r\n/**\r\n * Command message\r\n */\r\nexport interface ICommandMessage extends IClientMessage {\r\n    command?: string;\r\n}\r\n\r\n/**\r\n * Text message command\r\n */\r\nexport interface IInstantMessageCommand extends ICommandMessage {\r\n    roomId: string;\r\n    nickname?: string;\r\n    participantId: string;\r\n    text: string;\r\n}\r\n\r\n/**\r\n * Lock command\r\n */\r\nexport interface ILockConversationCommand extends ICommandMessage {\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId: string; // host - incoming ws\r\n    roomid: string;\r\n    value: boolean;\r\n}\r\n\r\n/**\r\n * Mute all command\r\n */\r\nexport interface IMuteAllCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;  // incoming ws\r\n    participantId: string; // host\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Mute participant command\r\n */\r\nexport interface IMuteCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;\r\n    participantId: string; // participant\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Remove participant command\r\n */\r\nexport interface IEjectParticipantCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string; // participant\r\n}\r\n\r\n/**\r\n * Change nickname command\r\n */\r\nexport interface IChangeNicknameCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string;\r\n    nickname: string;\r\n    value: string;\r\n}\r\n\r\n/**\r\n * List of command message types\r\n */\r\nexport const ConversationTranslatorMessageTypes = {\r\n    command: \"command\",\r\n    final: \"final\",\r\n    info: \"info\",\r\n    instantMessage: \"instant_message\",\r\n    keepAlive: \"keep_alive\",\r\n    partial: \"partial\",\r\n    participantCommand: \"participant_command\",\r\n    translatedMessage: \"translated_message\"\r\n};\r\n\r\n/**\r\n * List of command types\r\n */\r\nexport const ConversationTranslatorCommandTypes = {\r\n    changeNickname: \"ChangeNickname\",\r\n    disconnectSession: \"DisconnectSession\",\r\n    ejectParticipant: \"EjectParticipant\",\r\n    instant_message: \"instant_message\",\r\n    joinSession: \"JoinSession\",\r\n    leaveSession: \"LeaveSession\",\r\n    participantList: \"ParticipantList\",\r\n    roomExpirationWarning: \"RoomExpirationWarning\",\r\n    setLockState: \"SetLockState\",\r\n    setMute: \"SetMute\",\r\n    setMuteAll: \"SetMuteAll\",\r\n    setProfanityFiltering: \"SetProfanityFiltering\",\r\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\r\n    setUseTTS: \"SetUseTTS\"\r\n};\r\n\r\n/**\r\n * HTTP response helper\r\n */\r\nexport interface IResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: <T>() => T;\r\n    headers: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    Events,\r\n    Timeout\r\n} from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig\r\n} from \"../../sdk/Exports\";\r\nimport { SpeechTranslationConfigImpl } from \"../../sdk/SpeechTranslationConfig\";\r\nimport { ConversationImpl } from \"../../sdk/Transcription/Conversation\";\r\nimport { Callback, IConversation } from \"../../sdk/Transcription/IConversation\";\r\nimport { ConversationConnectionFactory } from \"./ConversationConnectionFactory\";\r\nimport { ConversationServiceAdapter } from \"./ConversationServiceAdapter\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs\";\r\nimport {\r\n    ConversationRecognizer,\r\n} from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class ConversationRecognizerFactory {\r\n    public static fromConfig(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig): ConversationRecognizer {\r\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\r\n    }\r\n}\r\n\r\n/**\r\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\r\n * Based off the recognizers in the SDK folder.\r\n */\r\nexport class ConversationTranslatorRecognizer extends Recognizer implements ConversationRecognizer {\r\n\r\n    private privIsDisposed: boolean;\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privConnection: Connection;\r\n    private privConversation: ConversationImpl;\r\n    private privTimeoutToken: any;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number;\r\n    private privClearTimeout: (id: number) => void;\r\n\r\n    public constructor(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const serviceConfigImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\r\n\r\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory());\r\n\r\n        this.privConversation = conversationImpl;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = serviceConfigImpl.properties.clone();\r\n        this.privConnection = Connection.fromRecognizer(this);\r\n        this.privSetTimeout = (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") ? Timeout.setTimeout : setTimeout;\r\n        this.privClearTimeout = (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") ? Timeout.clearTimeout : clearTimeout;\r\n    }\r\n\r\n    public canceled: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    public lockRoomCommandReceived: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    public muteAllCommandReceived: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    public participantJoinCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantLeaveCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantUpdateCommandReceived: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    public connectionOpened: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public connectionClosed: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public translationReceived: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    public participantsListReceived: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    public participantsChanged: (sender: ConversationRecognizer, event: ConversationParticipantsChangedEventArgs) => void;\r\n\r\n    public set connected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.connected = cb;\r\n    }\r\n\r\n    public set disconnected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.disconnected = cb;\r\n    }\r\n\r\n    /**\r\n     * Return the speech language used by the recognizer\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Return the properties for the recognizer\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    /**\r\n     * Connect to the recognizer\r\n     * @param token\r\n     */\r\n    public connect(token: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n            this.privReco.conversationTranslatorToken = token;\r\n            this.resetConversationTimeout();\r\n            this.privReco.connectAsync(cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from the recognizer\r\n     */\r\n    public disconnect(cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (this.privTimeoutToken !== undefined) {\r\n               // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n               this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privReco.disconnect().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send the mute all participants command to the websocket\r\n     * @param conversationId\r\n     * @param participantId\r\n     * @param isMuted\r\n     */\r\n    public sendRequest(command: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            this.sendMessage(command, cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close and dispose the recognizer\r\n     */\r\n    public async close(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            if (!!this.privConnection) {\r\n                this.privConnection.closeConnection();\r\n                this.privConnection.close();\r\n            }\r\n            this.privConnection = undefined;\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose the recognizer\r\n     * @param disposing\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n        if (disposing) {\r\n            if (this.privTimeoutToken !== undefined) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n                this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privIsDisposed = true;\r\n            if (!!this.privConnection) {\r\n                this.privConnection.closeConnection();\r\n                this.privConnection.close();\r\n                this.privConnection = undefined;\r\n            }\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the config for the recognizer\r\n     * @param speechConfig\r\n     */\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    /**\r\n     * Create the service recognizer.\r\n     * The audio source is redundnant here but is required by the implementation.\r\n     * @param authentication\r\n     * @param connectionFactory\r\n     * @param audioConfig\r\n     * @param recognizerConfig\r\n     */\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private sendMessage(msg: string, cb?: Callback, err?: Callback): void {\r\n        const withAsync = this.privReco as ConversationServiceAdapter;\r\n        const PromiseToEmptyCallback = <T>(promise: Promise<T>, cb?: Callback, err?: Callback): void => {\r\n            if (promise !== undefined) {\r\n                promise.then((): void => {\r\n                    try {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(`'Unhandled error on promise callback: ${e as string}'`);\r\n                        }\r\n                    }\r\n                }, (reason: any): void => {\r\n                    try {\r\n                        if (!!err) {\r\n                            err(reason);\r\n                        }\r\n                        // eslint-disable-next-line no-empty\r\n                    } catch (error) { }\r\n                });\r\n            } else {\r\n                if (!!err) {\r\n                    err(\"Null promise\");\r\n                }\r\n            }\r\n        };\r\n\r\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\r\n        this.resetConversationTimeout();\r\n    }\r\n\r\n    private resetConversationTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            this.privClearTimeout(this.privTimeoutToken);\r\n        }\r\n\r\n        this.privTimeoutToken = this.privSetTimeout((): void => {\r\n            this.sendRequest(this.privConversation.getKeepAlive());\r\n        }, 60000);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../../common/Exports\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\r\n\r\n/**\r\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\r\n */\r\nexport class ConversationWebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    /**\r\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\r\n     */\r\n    public toConnectionMessage(message: RawWebsocketMessage): Promise<ConversationConnectionMessage> {\r\n        const deferral = new Deferred<ConversationConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const incomingMessage: ConversationConnectionMessage = new ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\r\n                deferral.resolve(incomingMessage);\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                deferral.resolve(new ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    /**\r\n     * Format outgoing messages: text (commands or IM)\r\n     */\r\n    public fromConnectionMessage(message: ConnectionMessage): Promise<RawWebsocketMessage> {\r\n\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport { ConversationManager } from \"./ConversationManager\";\r\nexport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nexport { ConversationRecognizerFactory } from \"./ConversationTranslatorRecognizer\";\r\nexport { TranscriberRecognizer } from \"./TranscriberRecognizer\";\r\nexport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs\";\r\nexport {\r\n    ConversationRecognizer,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants} from \"./ConversationTranslatorInterfaces\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming websocket commands\r\n */\r\nexport interface ICommandResponsePayload {\r\n    type: string;\r\n    command?: string;\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId?: string;\r\n    roomid?: string;\r\n    value: boolean | number | string;\r\n    token?: string;\r\n}\r\n\r\nconst parseCommandResponse = (json: string): ICommandResponsePayload => JSON.parse(json) as ICommandResponsePayload;\r\n\r\nexport class CommandResponsePayload implements ICommandResponsePayload {\r\n    private privCommandResponse: ICommandResponsePayload;\r\n\r\n    public constructor(json: string) {\r\n        this.privCommandResponse = parseCommandResponse(json);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privCommandResponse.type;\r\n    }\r\n    public get command(): string {\r\n        return this.privCommandResponse.command;\r\n    }\r\n    public get id(): string {\r\n        return this.privCommandResponse.id;\r\n    }\r\n    public get nickname(): string {\r\n        return this.privCommandResponse.nickname;\r\n    }\r\n    public get participantId(): string {\r\n        return this.privCommandResponse.participantId;\r\n    }\r\n    public get roomid(): string {\r\n        return this.privCommandResponse.roomid;\r\n    }\r\n    public get value(): boolean | number | string {\r\n        return this.privCommandResponse.value;\r\n    }\r\n    public get token(): string {\r\n        return this.privCommandResponse.token;\r\n    }\r\n\r\n    public static fromJSON(json: string): CommandResponsePayload {\r\n        return new CommandResponsePayload(json);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n/**\r\n * Defines the payload for incoming list of participants\r\n */\r\nexport interface IParticipantsListPayloadResponse {\r\n    roomid: string;\r\n    id: string;\r\n    command: string;\r\n    participants: IParticipantPayloadResponse[];\r\n    token: string;\r\n    translateTo: string[];\r\n    profanityFilter: string;\r\n    roomProfanityFilter: string;\r\n    roomLocked: boolean;\r\n    muteAll: boolean;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Defines the payload for incoming participant\r\n */\r\nexport interface IParticipantPayloadResponse {\r\n    nickname: string;\r\n    locale: string;\r\n    usetts: boolean;\r\n    ismuted: boolean;\r\n    ishost: boolean;\r\n    participantId: string;\r\n    avatar?: string;\r\n}\r\n\r\nconst parseListResponse = (json: string): IParticipantsListPayloadResponse => JSON.parse(json) as IParticipantsListPayloadResponse;\r\nconst parseParticipantResponse = (json: string): IParticipantPayloadResponse => JSON.parse(json) as IParticipantPayloadResponse;\r\n\r\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\r\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantsPayloadResponse = parseListResponse(json);\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privParticipantsPayloadResponse.roomid;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privParticipantsPayloadResponse.id;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privParticipantsPayloadResponse.command;\r\n    }\r\n\r\n    public get participants(): IParticipantPayloadResponse[] {\r\n        return this.privParticipantsPayloadResponse.participants;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privParticipantsPayloadResponse.token;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privParticipantsPayloadResponse.translateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.profanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\r\n    }\r\n\r\n    public get roomLocked(): boolean {\r\n        return this.privParticipantsPayloadResponse.roomLocked;\r\n    }\r\n\r\n    public get muteAll(): boolean {\r\n        return this.privParticipantsPayloadResponse.muteAll;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privParticipantsPayloadResponse.type;\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\r\n        return new ParticipantsListPayloadResponse(json);\r\n    }\r\n\r\n}\r\n\r\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\r\n\r\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privParticipantPayloadResponse.nickname;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privParticipantPayloadResponse.locale;\r\n    }\r\n\r\n    public get usetts(): boolean {\r\n        return this.privParticipantPayloadResponse.usetts;\r\n    }\r\n\r\n    public get ismuted(): boolean {\r\n        return this.privParticipantPayloadResponse.ismuted;\r\n    }\r\n\r\n    public get ishost(): boolean {\r\n        return this.privParticipantPayloadResponse.ishost;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privParticipantPayloadResponse.participantId;\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privParticipantPayloadResponse.avatar;\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantPayloadResponse {\r\n        return new ParticipantPayloadResponse(json);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n/**\r\n * Defines the payload for incoming translation messages\r\n */\r\nexport interface ITranslationResponsePayload {\r\n    lang: string;\r\n    translation: string;\r\n}\r\n\r\nexport interface ITranslationCommandMessage {\r\n    translations: ITranslationResponsePayload[];\r\n    id: string;\r\n    language: string;\r\n    nickname: string;\r\n    participantId: string;\r\n    roomid: string;\r\n    timestamp: string;\r\n    type: string;\r\n}\r\n\r\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\r\n    recognition: string;\r\n    isFinal: boolean;\r\n}\r\n\r\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\r\n    originalText: string;\r\n}\r\n\r\nconst parseSpeechResponse = (json: string): ISpeechResponsePayload => JSON.parse(json) as ISpeechResponsePayload;\r\nconst parseTextResponse = (json: string): ITextResponsePayload => JSON.parse(json) as ITextResponsePayload;\r\n\r\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\r\n\r\n    private privSpeechResponse: ISpeechResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechResponse = parseSpeechResponse(json);\r\n    }\r\n\r\n    public get recognition(): string {\r\n        return this.privSpeechResponse.recognition;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privSpeechResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privSpeechResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privSpeechResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privSpeechResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privSpeechResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privSpeechResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privSpeechResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privSpeechResponse.type;\r\n    }\r\n\r\n    public get isFinal(): boolean {\r\n        return this.privSpeechResponse.type === \"final\";\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechResponsePayload {\r\n        return new SpeechResponsePayload(json);\r\n    }\r\n\r\n}\r\n\r\nexport class TextResponsePayload implements ITextResponsePayload {\r\n\r\n    private privTextResponse: ITextResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privTextResponse = parseTextResponse(json);\r\n    }\r\n\r\n    public get originalText(): string {\r\n        return this.privTextResponse.originalText;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privTextResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privTextResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privTextResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privTextResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privTextResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privTextResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privTextResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privTextResponse.type;\r\n    }\r\n\r\n    public static fromJSON(json: string): TextResponsePayload {\r\n        return new TextResponsePayload(json);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { AudioStreamFormatImpl } from \"../../sdk/Audio/AudioStreamFormat\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Conversation,\r\n    ConversationInfo,\r\n    ConversationTranscriber,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechTranslationConfig,\r\n    SpeechTranslationConfigImpl,\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranscriberConnectionFactory,\r\n    TranscriptionServiceRecognizer,\r\n} from \"../Exports\";\r\n\r\nexport class TranscriberRecognizer extends Recognizer {\r\n\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public canceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    private privDisposedRecognizer: boolean;\r\n    private privConversation: Conversation;\r\n\r\n    /**\r\n     * TranscriberRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechTranslationConfig: SpeechTranslationConfig, audioConfig: AudioConfig) {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\r\n\r\n        const audioConfigImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechTranslationConfigImpl.speechRecognitionLanguage,\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    public set conversation(c: Conversation) {\r\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\r\n        this.privConversation = c;\r\n    }\r\n\r\n    public getConversationInfo(): ConversationInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\r\n        return this.privConversation.conversationInfo;\r\n    }\r\n\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        if (!this.privDisposedRecognizer) {\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    // Push async join/leave conversation message via serviceRecognizer\r\n    public async pushConversationEvent(conversationInfo: ConversationInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendSpeechEventAsync(conversationInfo, command);\r\n    }\r\n\r\n    public async enforceAudioGating(): Promise<void> {\r\n        const audioConfigImpl = this.audioConfig as AudioConfigImpl;\r\n        const format: AudioStreamFormatImpl = await audioConfigImpl.format;\r\n        const channels = format.channels;\r\n        if (channels === 1) {\r\n            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\r\n                throw new Error(\"Single channel audio configuration for ConversationTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\r\n            }\r\n        } else if (channels !== 8) {\r\n            throw new Error(`Unsupported audio configuration: Detected ${channels}-channel audio`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    public connectCallbacks(transcriber: ConversationTranscriber): void {\r\n        this.canceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.canceled) {\r\n                transcriber.canceled(transcriber, e);\r\n            }\r\n        };\r\n        this.recognizing = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribing) {\r\n                transcriber.transcribing(transcriber, e);\r\n            }\r\n        };\r\n        this.recognized = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribed) {\r\n                transcriber.transcribed(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStarted) {\r\n                transcriber.sessionStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStopped) {\r\n                transcriber.sessionStopped(transcriber, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    public disconnectCallbacks(): void {\r\n        this.canceled = undefined;\r\n        this.recognizing = undefined;\r\n        this.recognized = undefined;\r\n        this.sessionStarted = undefined;\r\n        this.sessionStopped = undefined;\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary,\r\n} from \"../common/Exports\";\r\nimport { StringUtils } from \"../common/StringUtils\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport class TranslationConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        const endpoint: string = this.getEndpointUrl(config);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n        this.setQueryParams(queryParams, config, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    public getEndpointUrl(config: RecognizerConfig, returnRegionPlaceholder?: boolean): string {\r\n\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n\r\n        let endpointUrl: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpointUrl) {\r\n            if (config.autoDetectSourceLanguages !== undefined) {\r\n                const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://{region}.stt.speech\" + hostSuffix);\r\n                endpointUrl = host + \"/speech/universal/v2\";\r\n            } else {\r\n                const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://{region}.s2s.speech\" + hostSuffix);\r\n                endpointUrl = host + \"/speech/translation/cognitiveservices/v1\";\r\n            }\r\n        }\r\n\r\n        if (returnRegionPlaceholder === true) {\r\n            return endpointUrl;\r\n        }\r\n\r\n        return StringUtils.formatString(endpointUrl, { region });\r\n    }\r\n\r\n    public setQueryParams(queryParams: IStringDictionary<string>, config: RecognizerConfig, endpointUrl: string): void {\r\n\r\n        queryParams.from = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n        queryParams.to = config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages);\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\r\n        this.setUrlParameter(\r\n            PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n            QueryParameterNames.StableTranslation,\r\n            config,\r\n            queryParams,\r\n            endpointUrl\r\n        );\r\n\r\n        const translationVoice: string =  config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n        if (translationVoice !== undefined) {\r\n            queryParams.voice = translationVoice;\r\n            queryParams.features = \"texttospeech\";\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEvent,\r\n    IAudioSource,\r\n    MessageType,\r\n    TranslationStatus,\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionResult,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationRecognizer,\r\n    Translations,\r\n    TranslationSynthesisEventArgs,\r\n    TranslationSynthesisResult,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    ConversationServiceRecognizer,\r\n    EnumTranslation,\r\n    RecognitionStatus,\r\n    SynthesisStatus,\r\n    TranslationHypothesis,\r\n    TranslationPhrase,\r\n    TranslationSynthesisEnd,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { ITranslationPhrase } from \"./ServiceMessages/TranslationPhrase\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class TranslationServiceRecognizer extends ConversationServiceRecognizer {\r\n    private privTranslationRecognizer: TranslationRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        translationRecognizer: TranslationRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\r\n        this.privTranslationRecognizer = translationRecognizer;\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                this.privTranslationRecognizer.onConnection();\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                void this.privTranslationRecognizer.onDisconnection();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        let processed: boolean = await this.processSpeechMessages(connectionMessage);\r\n        if (processed) {\r\n            return true;\r\n        }\r\n\r\n        const handleTranslationPhrase = async (translatedPhrase: TranslationPhrase): Promise<void> => {\r\n            this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset + translatedPhrase.Duration);\r\n\r\n            if (translatedPhrase.RecognitionStatus === RecognitionStatus.Success) {\r\n\r\n                // OK, the recognition was successful. How'd the translation do?\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(translatedPhrase, resultProps);\r\n                if (!!this.privTranslationRecognizer.recognized) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(result.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e as string);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n            } else {\r\n                const reason: ResultReason = EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\r\n\r\n                const result = new TranslationRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    reason,\r\n                    translatedPhrase.Text,\r\n                    translatedPhrase.Duration,\r\n                    this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset,\r\n                    translatedPhrase.Language,\r\n                    translatedPhrase.Confidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                if (reason === ResultReason.Canceled) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && reason === ResultReason.NoMatch && translatedPhrase.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        const ev = new TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privTranslationRecognizer.recognized) {\r\n                            try {\r\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e as string);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n            }\r\n\r\n        };\r\n\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"translation.hypothesis\":\r\n\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(TranslationHypothesis.fromJSON(connectionMessage.textBody), resultProps);\r\n                this.privRequestSession.onHypothesis(this.privRequestSession.currentTurnAudioOffset + result.offset);\r\n\r\n                if (!!this.privTranslationRecognizer.recognizing) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"translation.response\":\r\n                const phrase: { SpeechPhrase: ITranslationPhrase } = JSON.parse(connectionMessage.textBody) as { SpeechPhrase: ITranslationPhrase };\r\n                if (!!phrase.SpeechPhrase) {\r\n                    await handleTranslationPhrase(TranslationPhrase.fromTranslationResponse(phrase));\r\n                }\r\n                break;\r\n            case \"translation.phrase\":\r\n                await handleTranslationPhrase(TranslationPhrase.fromJSON(connectionMessage.textBody));\r\n                break;\r\n\r\n            case \"translation.synthesis\":\r\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\r\n                processed = true;\r\n                break;\r\n\r\n            case \"audio.end\":\r\n            case \"translation.synthesis.end\":\r\n                const synthEnd: TranslationSynthesisEnd = TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\r\n\r\n                switch (synthEnd.SynthesisStatus) {\r\n                    case SynthesisStatus.Error:\r\n                        if (!!this.privTranslationRecognizer.synthesizing) {\r\n                            const result = new TranslationSynthesisResult(ResultReason.Canceled, undefined);\r\n                            const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n\r\n                        if (!!this.privTranslationRecognizer.canceled) {\r\n                            // And raise a canceled event to send the rich(er) error message back.\r\n                            const canceledResult: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                                this.privRequestSession.sessionId,\r\n                                CancellationReason.Error,\r\n                                synthEnd.FailureReason,\r\n                                CancellationErrorCode.ServiceError,\r\n                                null);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n                    case SynthesisStatus.Success:\r\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranslationRecognizer.canceled) {\r\n\r\n            const cancelEvent: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                sessionId,\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined);\r\n\r\n            try {\r\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: TranslationRecognitionResult = new TranslationRecognitionResult(\r\n                undefined, // Translations\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Druation\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // LanguageDetectionConfidence\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* eslint-disable no-empty */\r\n                this.privSuccessCallback = undefined;\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    protected handleRecognizingCallback(result: SpeechRecognitionResult, duration: number, sessionId: string): void {\r\n        try {\r\n            const ev = new TranslationRecognitionEventArgs(TranslationRecognitionResult.fromSpeechRecognitionResult(result), duration, sessionId);\r\n            this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, ev);\r\n            /* eslint-disable no-empty */\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    protected handleRecognizedCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        try {\r\n            const ev = new TranslationRecognitionEventArgs(TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\r\n            this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: TranslationHypothesis | TranslationPhrase, properties: PropertyCollection): TranslationRecognitionEventArgs {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResult.Translation.Translations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResult.Translation.Translations) {\r\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\r\n            }\r\n        }\r\n\r\n        let resultReason: ResultReason;\r\n        let language: string;\r\n        let confidence: string;\r\n        if (serviceResult instanceof TranslationPhrase) {\r\n            if (!!serviceResult.Translation && serviceResult.Translation.TranslationStatus === TranslationStatus.Success) {\r\n                resultReason = ResultReason.TranslatedSpeech;\r\n            } else {\r\n                resultReason = ResultReason.RecognizedSpeech;\r\n            }\r\n            language = serviceResult.Language;\r\n            confidence = serviceResult.Confidence;\r\n        } else {\r\n            resultReason = ResultReason.TranslatingSpeech;\r\n        }\r\n\r\n        const offset: number = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n        const result = new TranslationRecognitionResult(\r\n            translations,\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.Text,\r\n            serviceResult.Duration,\r\n            offset,\r\n            language,\r\n            confidence,\r\n            serviceResult.Translation.FailureReason,\r\n            JSON.stringify(serviceResult),\r\n            properties);\r\n\r\n        const ev = new TranslationRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private sendSynthesisAudio(audio: ArrayBuffer, sessionId: string): void {\r\n        const reason = (undefined === audio) ? ResultReason.SynthesizingAudioCompleted : ResultReason.SynthesizingAudio;\r\n        const result = new TranslationSynthesisResult(reason, audio);\r\n        const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, sessionId);\r\n\r\n        if (!!this.privTranslationRecognizer.synthesizing) {\r\n            try {\r\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines translation status.\r\n * @class TranslationStatus\r\n */\r\nexport enum TranslationStatus {\r\n    /**\r\n     * @member TranslationStatus.Success\r\n     */\r\n    Success = 0,\r\n\r\n    /**\r\n     * @member TranslationStatus.Error\r\n     */\r\n    Error,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    DeferralMap,\r\n    Deferred,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { SpeakerRecognitionModel } from \"../sdk/SpeakerRecognitionModel\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    VoiceProfileClient,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n    VoiceProfileEnrollmentResult,\r\n    VoiceProfilePhraseResult,\r\n    VoiceProfileResult,\r\n    VoiceProfileType,\r\n    VoiceProfile\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnrollmentResponse,\r\n    IProfile,\r\n    ISpeechConfigAudioDevice,\r\n    ProfilePhraseResponse,\r\n    ProfileResponse,\r\n    ServiceRecognizerBase,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\ninterface CreateProfile {\r\n    scenario: string;\r\n    locale: string;\r\n    number: string;\r\n}\r\n\r\ninterface PhraseRequest {\r\n    scenario: string;\r\n    locale: string;\r\n}\r\n\r\ninterface SpeakerContext {\r\n    scenario: string;\r\n    profileIds: string[];\r\n    features: {\r\n        interimResult: string;\r\n        progressiveDetection: string;\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class VoiceServiceRecognizer extends ServiceRecognizerBase {\r\n    private privSpeakerAudioSource: IAudioSource;\r\n    private privDeferralMap: DeferralMap = new DeferralMap();\r\n    private privExpectedProfileId: string;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: VoiceProfileClient) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privSpeakerAudioSource = audioSource;\r\n        this.sendPrePayloadJSONOverride = (): Promise<void> => this.noOp();\r\n    }\r\n\r\n    public set SpeakerAudioSource(audioSource: IAudioSource) {\r\n        this.privSpeakerAudioSource = audioSource;\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            // Profile management response for create, fetch, delete, reset\r\n            case \"speaker.profiles\":\r\n                const response: ProfileResponse = JSON.parse(connectionMessage.textBody) as ProfileResponse;\r\n                switch (response.operation.toLowerCase()) {\r\n                    case \"create\":\r\n                        this.handleCreateResponse(response, connectionMessage.requestId);\r\n                        break;\r\n\r\n                    case \"delete\":\r\n                    case \"reset\":\r\n                        this.handleResultResponse(response, connectionMessage.requestId);\r\n                        break;\r\n\r\n                    case \"fetch\":\r\n                        const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\r\n                        this.handleFetchResponse(enrollmentResponse, connectionMessage.requestId);\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n                processed = true;\r\n                break;\r\n            // Activation and authorization phrase response\r\n            case \"speaker.phrases\":\r\n                const phraseResponse: ProfilePhraseResponse = JSON.parse(connectionMessage.textBody) as ProfilePhraseResponse;\r\n                this.handlePhrasesResponse(phraseResponse, connectionMessage.requestId);\r\n                processed = true;\r\n                break;\r\n            // Enrollment response\r\n            case \"speaker.profile.enrollment\":\r\n                const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\r\n                const result: VoiceProfileEnrollmentResult = new VoiceProfileEnrollmentResult(\r\n                    this.enrollmentReasonFrom(!!enrollmentResponse.enrollment ? enrollmentResponse.enrollment.enrollmentStatus : enrollmentResponse.status.statusCode),\r\n                    !!enrollmentResponse.enrollment ? JSON.stringify(enrollmentResponse.enrollment) : undefined,\r\n                    enrollmentResponse.status.reason,\r\n                    );\r\n                if (!!this.privDeferralMap.getId(connectionMessage.requestId)) {\r\n                    this.privDeferralMap.complete<VoiceProfileEnrollmentResult>(connectionMessage.requestId, result);\r\n                }\r\n                this.privRequestSession.onSpeechEnded();\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        // const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n            const result: VoiceProfileEnrollmentResult = new VoiceProfileEnrollmentResult(\r\n                ResultReason.Canceled,\r\n                error,\r\n                error,\r\n                );\r\n            if (!!this.privDeferralMap.getId(requestId)) {\r\n                this.privDeferralMap.complete<VoiceProfileEnrollmentResult>(requestId, result);\r\n            }\r\n    }\r\n\r\n    public async createProfile(profileType: VoiceProfileType, locale: string): Promise<string[]> {\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        this.voiceProfileType = profileType.toString();\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        try {\r\n            const createProfileDeferral = new Deferred<string[]>();\r\n            await conPromise;\r\n            await this.sendCreateProfile(createProfileDeferral, profileType, locale);\r\n            void this.receiveMessage();\r\n            return createProfileDeferral.promise;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    public async resetProfile(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        return this.sendCommonRequest<VoiceProfileResult>(\"reset\", profile.profileType, profile);\r\n    }\r\n\r\n    public async deleteProfile(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        return this.sendCommonRequest<VoiceProfileResult>(\"delete\", profile.profileType, profile);\r\n    }\r\n\r\n    public async retrieveEnrollmentResult(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        this.privExpectedProfileId = profile.profileId;\r\n        return this.sendCommonRequest<VoiceProfileEnrollmentResult>(\"fetch\", profile.profileType, profile);\r\n    }\r\n\r\n    public async getAllProfiles(profileType: VoiceProfileType): Promise<VoiceProfileEnrollmentResult[]> {\r\n        this.voiceProfileType = profileType.toString();\r\n        return this.sendCommonRequest<VoiceProfileEnrollmentResult[]>(\"fetch\", profileType);\r\n    }\r\n\r\n    public async getActivationPhrases(profileType: VoiceProfileType, lang: string): Promise<VoiceProfilePhraseResult> {\r\n        this.voiceProfileType = profileType.toString();\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        try {\r\n            const getPhrasesDeferral = new Deferred<VoiceProfilePhraseResult>();\r\n            await conPromise;\r\n            await this.sendPhrasesRequest(getPhrasesDeferral, profileType, lang);\r\n            void this.receiveMessage();\r\n            return getPhrasesDeferral.promise;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    public async enrollProfile(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        const enrollmentDeferral = new Deferred<VoiceProfileEnrollmentResult>();\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages(profile, enrollmentDeferral);\r\n\r\n        const node: IAudioStreamNode = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privSpeakerAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privSpeakerAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (err) {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, err as string);\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        void this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* eslint-disable no-empty */\r\n        audioSendPromise.then((): void => { /* add? return true;*/ }, (error: string): void => {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return enrollmentDeferral.promise;\r\n    }\r\n\r\n    private async sendPreAudioMessages(profile: VoiceProfile, enrollmentDeferral: Deferred<VoiceProfileEnrollmentResult>): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.privRequestSession.onSpeechContext();\r\n        this.privDeferralMap.add<VoiceProfileEnrollmentResult>(this.privRequestSession.requestId, enrollmentDeferral);\r\n        await this.sendBaseRequest(connection, \"enroll\", this.scenarioFrom(profile.profileType), profile);\r\n    }\r\n\r\n    private async sendPhrasesRequest(getPhrasesDeferral: Deferred<VoiceProfilePhraseResult>, profileType: VoiceProfileType, locale: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.privRequestSession.onSpeechContext();\r\n        this.privDeferralMap.add<VoiceProfilePhraseResult>(this.privRequestSession.requestId, getPhrasesDeferral);\r\n        const scenario = this.scenarioFrom(profileType);\r\n\r\n        const profileCreateRequest: PhraseRequest = {\r\n            locale,\r\n            scenario,\r\n        };\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speaker.profile.phrases\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            JSON.stringify(profileCreateRequest)));\r\n    }\r\n\r\n    private async sendCreateProfile(createProfileDeferral: Deferred<string[]>, profileType: VoiceProfileType, locale: string): Promise<void> {\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.privRequestSession.onSpeechContext();\r\n        this.privDeferralMap.add<string[]>(this.privRequestSession.requestId, createProfileDeferral);\r\n        const scenario = profileType === VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\r\n            profileType === VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\r\n\r\n        const profileCreateRequest: CreateProfile = {\r\n            locale,\r\n            number: \"1\",\r\n            scenario,\r\n        };\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speaker.profile.create\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            JSON.stringify(profileCreateRequest)));\r\n    }\r\n\r\n    private async sendCommonRequest<T>(operation: string, profileType: VoiceProfileType, profile: VoiceProfile = undefined): Promise<T> {\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        try {\r\n            const deferral = new Deferred<T>();\r\n            this.privRequestSession.onSpeechContext();\r\n            await conPromise;\r\n            const connection: IConnection = await this.fetchConnection();\r\n            this.privDeferralMap.add<T>(this.privRequestSession.requestId, deferral);\r\n            await this.sendBaseRequest(connection, operation, this.scenarioFrom(profileType), profile);\r\n            void this.receiveMessage();\r\n            return deferral.promise;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private async sendBaseRequest(connection: IConnection, operation: string, scenario: string, profile: VoiceProfile): Promise<void> {\r\n        const profileRequest: { maxPageSize?: number; profileIds?: string[]; scenario: string } = {\r\n            scenario\r\n        };\r\n        if (!!profile) {\r\n            profileRequest.profileIds = [ profile.profileId ];\r\n        } else {\r\n            profileRequest.maxPageSize = -1;\r\n        }\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            `speaker.profile.${operation}`,\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            JSON.stringify(profileRequest)));\r\n    }\r\n\r\n    private extractSpeakerContext(model: SpeakerRecognitionModel): SpeakerContext {\r\n        return {\r\n            features: {\r\n                interimResult: \"enabled\",\r\n                progressiveDetection: \"disabled\",\r\n            },\r\n            profileIds: model.profileIds,\r\n            scenario: model.scenario,\r\n        };\r\n    }\r\n\r\n    private handlePhrasesResponse(response: ProfilePhraseResponse, requestId: string): void {\r\n        if (!!this.privDeferralMap.getId(requestId)) {\r\n            if (response.status.statusCode.toLowerCase() !== \"success\") {\r\n                const reason: ResultReason = ResultReason.Canceled;\r\n                const result = new VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, []);\r\n                this.privDeferralMap.complete<VoiceProfilePhraseResult>(requestId, result);\r\n            } else if (!!response.phrases && response.phrases.length > 0) {\r\n                const reason: ResultReason = ResultReason.EnrollingVoiceProfile;\r\n                const result = new VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, response.phrases);\r\n                this.privDeferralMap.complete<VoiceProfilePhraseResult>(requestId, result);\r\n            } else {\r\n                throw new Error(\"Voice Profile get activation phrases failed, no phrases received\");\r\n            }\r\n        } else {\r\n            throw new Error(`Voice Profile get activation phrases request for requestID ${requestId} not found`);\r\n        }\r\n    }\r\n\r\n    private handleCreateResponse(response: ProfileResponse, requestId: string): void {\r\n        if (!!response.profiles && response.profiles.length > 0) {\r\n            if (!!this.privDeferralMap.getId(requestId)) {\r\n                const profileIds: string[] = response.profiles.map((profile: IProfile): string => profile.profileId);\r\n                this.privDeferralMap.complete<string[]>(requestId, profileIds);\r\n            } else {\r\n                throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\r\n            }\r\n        } else {\r\n            throw new Error(\"Voice Profile create failed, no profile id received\");\r\n        }\r\n    }\r\n\r\n    private handleResultResponse(response: ProfileResponse, requestId: string): void {\r\n        if (!!this.privDeferralMap.getId(requestId)) {\r\n            const successReason: ResultReason = response.operation.toLowerCase() === \"delete\" ? ResultReason.DeletedVoiceProfile : ResultReason.ResetVoiceProfile;\r\n            const reason: ResultReason = response.status.statusCode.toLowerCase() === \"success\" ? successReason : ResultReason.Canceled;\r\n            const result = new VoiceProfileResult(reason, `statusCode: ${response.status.statusCode}, errorDetails: ${response.status.reason}`);\r\n            this.privDeferralMap.complete<VoiceProfileResult>(requestId, result);\r\n        } else {\r\n            throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\r\n        }\r\n    }\r\n\r\n    private handleFetchResponse(enrollmentResponse: EnrollmentResponse, requestId: string): void {\r\n        if (!!this.privDeferralMap.getId(requestId) && !!enrollmentResponse.profiles[0]) {\r\n            if (!!this.privExpectedProfileId && enrollmentResponse.profiles.length === 1 && enrollmentResponse.profiles[0].profileId === this.privExpectedProfileId) {\r\n                this.privExpectedProfileId = undefined;\r\n                const profileInfo: IProfile = enrollmentResponse.profiles[0];\r\n                const result: VoiceProfileEnrollmentResult = new VoiceProfileEnrollmentResult(\r\n                    this.enrollmentReasonFrom(profileInfo.enrollmentStatus),\r\n                    JSON.stringify(profileInfo),\r\n                    enrollmentResponse.status.reason,\r\n                    );\r\n                this.privDeferralMap.complete<VoiceProfileEnrollmentResult>(requestId, result);\r\n            } else if (enrollmentResponse.profiles.length > 0) {\r\n                const iProfiles: IProfile[] = enrollmentResponse.profiles;\r\n                const profileResults: VoiceProfileEnrollmentResult[] = [];\r\n                for (const profile of iProfiles) {\r\n                    profileResults.push( new VoiceProfileEnrollmentResult(\r\n                        this.enrollmentReasonFrom(profile.enrollmentStatus),\r\n                        JSON.stringify(profile),\r\n                        enrollmentResponse.status.reason,\r\n                    ));\r\n                }\r\n                this.privDeferralMap.complete<VoiceProfileEnrollmentResult[]>(requestId, profileResults);\r\n            }\r\n        } else {\r\n            throw new Error(`Voice Profile fetch request for requestID ${requestId} not found`);\r\n        }\r\n    }\r\n\r\n    private enrollmentReasonFrom(statusCode: string): ResultReason {\r\n        switch (statusCode.toLowerCase()) {\r\n            case \"enrolled\":\r\n                return ResultReason.EnrolledVoiceProfile;\r\n            case \"invalidlocale\":\r\n            case \"invalidphrase\":\r\n            case \"invalidaudioformat\":\r\n            case \"invalidscenario\":\r\n            case \"invalidprofilecount\":\r\n            case \"invalidoperation\":\r\n            case \"audiotooshort\":\r\n            case \"audiotoolong\":\r\n            case \"toomanyenrollments\":\r\n            case \"storageconflict\":\r\n            case \"profilenotfound\":\r\n            case \"incompatibleprofiles\":\r\n            case \"incompleteenrollment\":\r\n                return ResultReason.Canceled;\r\n            default:\r\n                return ResultReason.EnrollingVoiceProfile;\r\n        }\r\n    }\r\n\r\n    private scenarioFrom(profileType: VoiceProfileType): string {\r\n        return profileType === VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\r\n            profileType === VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\n\r\nconst CRLF: string = \"\\r\\n\";\r\n\r\nexport class WebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    public toConnectionMessage(message: RawWebsocketMessage): Promise<ConnectionMessage> {\r\n        const deferral = new Deferred<ConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const textMessage: string = message.textContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: string = null;\r\n\r\n                if (textMessage) {\r\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\r\n                    if (headerBodySplit && headerBodySplit.length > 0) {\r\n                        headers = this.parseHeaders(headerBodySplit[0]);\r\n                        if (headerBodySplit.length > 1) {\r\n                            body = headerBodySplit[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const binaryMessage: ArrayBuffer = message.binaryContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: ArrayBuffer = null;\r\n\r\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\r\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\r\n                }\r\n\r\n                const dataView = new DataView(binaryMessage);\r\n                const headerLength = dataView.getInt16(0);\r\n\r\n                if (binaryMessage.byteLength < headerLength + 2) {\r\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\r\n                }\r\n\r\n                let headersString = \"\";\r\n                for (let i = 0; i < headerLength; i++) {\r\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\r\n                }\r\n\r\n                headers = this.parseHeaders(headersString);\r\n\r\n                if (binaryMessage.byteLength > headerLength + 2) {\r\n                    body = binaryMessage.slice(2 + headerLength);\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    public fromConnectionMessage(message: ConnectionMessage): Promise<RawWebsocketMessage> {\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const headersString = this.makeHeaders(message);\r\n                const content = message.binaryBody;\r\n\r\n                const headerBuffer = this.stringToArrayBuffer(headersString);\r\n                const headerInt8Array = new Int8Array(headerBuffer);\r\n                const headerLength = headerInt8Array.byteLength;\r\n\r\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\r\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\r\n                payloadInt8Array[1] = headerLength & 0xff;\r\n                payloadInt8Array.set(headerInt8Array, 2);\r\n\r\n                if (content) {\r\n                    const bodyInt8Array = new Int8Array(content);\r\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\r\n                }\r\n\r\n                const payload: ArrayBuffer = payloadInt8Array.buffer;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Binary, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    private makeHeaders(message: ConnectionMessage): string {\r\n        let headersString: string = \"\";\r\n\r\n        if (message.headers) {\r\n            for (const header in message.headers) {\r\n                if (header) {\r\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return headersString;\r\n    }\r\n\r\n    private parseHeaders(headersString: string): IStringDictionary<string> {\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (headersString) {\r\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\r\n            if (headers) {\r\n                for (const header of headerMatches) {\r\n                    if (header) {\r\n                        const separatorIndex = header.indexOf(\":\");\r\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\r\n                        const headerValue =\r\n                            separatorIndex > 0 && header.length > (separatorIndex + 1) ?\r\n                                header.substr(separatorIndex + 1).trim() :\r\n                                \"\";\r\n\r\n                        headers[headerName] = headerValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    private stringToArrayBuffer(str: string): ArrayBuffer {\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new DataView(buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(i, str.charCodeAt(i));\r\n        }\r\n        return buffer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class AudioSourceEvent extends PlatformEvent {\r\n    private privAudioSourceId: string;\r\n\r\n    public constructor(eventName: string, audioSourceId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privAudioSourceId = audioSourceId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n}\r\n\r\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\r\n    public constructor(audioSourceId: string) {\r\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\r\n    public constructor(audioSourceId: string) {\r\n        super(\"AudioSourceReadyEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceOffEvent extends AudioSourceEvent {\r\n    public constructor(audioSourceId: string) {\r\n        super(\"AudioSourceOffEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\r\n    private privError: string;\r\n\r\n    public constructor(audioSourceId: string, error: string) {\r\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\r\n    private privAudioNodeId: string;\r\n\r\n    public constructor(eventName: string, audioSourceId: string, audioNodeId: string) {\r\n        super(eventName, audioSourceId);\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\r\n    public constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\r\n    public constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\r\n    public constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\r\n    private privError: string;\r\n\r\n    public constructor(audioSourceId: string, audioNodeId: string, error: string) {\r\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    EventType,\r\n    PlatformEvent\r\n} from \"./Exports\";\r\n\r\nexport class BackgroundEvent extends PlatformEvent {\r\n    private privError: string;\r\n\r\n    public constructor(error: string) {\r\n        super(\"BackgroundEvent\", EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStreamChunk, Stream } from \"./Exports\";\r\n\r\nexport class ChunkedArrayBufferStream extends Stream<ArrayBuffer> {\r\n    private privTargetChunkSize: number;\r\n    private privNextBufferToWrite: ArrayBuffer;\r\n    private privNextBufferStartTime: number;\r\n    private privNextBufferReadyBytes: number;\r\n\r\n    public constructor(targetChunkSize: number, streamId?: string) {\r\n        super(streamId);\r\n        this.privTargetChunkSize = targetChunkSize;\r\n        this.privNextBufferReadyBytes = 0;\r\n    }\r\n\r\n    public writeStreamChunk(chunk: IStreamChunk<ArrayBuffer>): void {\r\n        // No pending write, and the buffer is the right size so write it.\r\n        if (chunk.isEnd ||\r\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\r\n            super.writeStreamChunk(chunk);\r\n            return;\r\n        }\r\n\r\n        let bytesCopiedFromBuffer: number = 0;\r\n\r\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\r\n            // Fill the next buffer.\r\n            if (undefined === this.privNextBufferToWrite) {\r\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\r\n                this.privNextBufferStartTime = chunk.timeReceived;\r\n            }\r\n\r\n            // Find out how many bytes we can copy into the read buffer.\r\n            const bytesToCopy: number = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\r\n            const targetView: Uint8Array = new Uint8Array(this.privNextBufferToWrite);\r\n            const sourceView: Uint8Array = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\r\n\r\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\r\n            this.privNextBufferReadyBytes += bytesToCopy;\r\n            bytesCopiedFromBuffer += bytesToCopy;\r\n\r\n            // Are we ready to write?\r\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\r\n                super.writeStreamChunk({\r\n                    buffer: this.privNextBufferToWrite,\r\n                    isEnd: false,\r\n                    timeReceived: this.privNextBufferStartTime,\r\n                });\r\n                this.privNextBufferReadyBytes = 0;\r\n                this.privNextBufferToWrite = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        // Send whatever is pending, then close the base class.\r\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\r\n            super.writeStreamChunk({\r\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\r\n                isEnd: false,\r\n                timeReceived: this.privNextBufferStartTime,\r\n            });\r\n        }\r\n\r\n        super.close();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class ServiceEvent extends PlatformEvent {\r\n    private privJsonResult: string;\r\n\r\n    public constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\r\n      super(eventName, eventType);\r\n      this.privJsonResult = jsonstring;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n}\r\n\r\nexport class ConnectionEvent extends PlatformEvent {\r\n    private privConnectionId: string;\r\n\r\n    public constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privConnectionId = connectionId;\r\n    }\r\n\r\n    public get connectionId(): string {\r\n        return this.privConnectionId;\r\n    }\r\n}\r\n\r\nexport class ConnectionStartEvent extends ConnectionEvent {\r\n    private privUri: string;\r\n    private privHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\r\n        super(\"ConnectionStartEvent\", connectionId);\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\r\n    public constructor(connectionId: string) {\r\n        super(\"ConnectionEstablishedEvent\", connectionId);\r\n    }\r\n}\r\n\r\nexport class ConnectionClosedEvent extends ConnectionEvent {\r\n    private privReason: string;\r\n    private privStatusCode: number;\r\n\r\n    public constructor(connectionId: string, statusCode: number, reason: string) {\r\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\r\n        this.privReason = reason;\r\n        this.privStatusCode = statusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionErrorEvent extends ConnectionEvent {\r\n    private readonly privMessage: string;\r\n    private readonly privType: string;\r\n\r\n    public constructor(connectionId: string, message: string, type: string) {\r\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\r\n        this.privMessage = message;\r\n        this.privType = type;\r\n    }\r\n\r\n    public get message(): string {\r\n        return this.privMessage;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    public constructor(connectionId: string, statuscode: number, reason: string) {\r\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\r\n        this.privStatusCode = statuscode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\r\n    private privNetworkReceivedTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    public constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\r\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkReceivedTime(): string {\r\n        return this.privNetworkReceivedTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\r\n    private privNetworkSentTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    public constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageSentEvent\", connectionId);\r\n        this.privNetworkSentTime = networkSentTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkSentTime(): string {\r\n        return this.privNetworkSentTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum MessageType {\r\n    Text,\r\n    Binary,\r\n}\r\n\r\nexport class ConnectionMessage {\r\n\r\n    private privMessageType: MessageType;\r\n    private privHeaders: IStringDictionary<string>;\r\n    private privBody: any = null;\r\n    private privSize: number;\r\n\r\n    private privId: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.privBody = body;\r\n        this.privHeaders = headers ? headers : {};\r\n        this.privId = id ? id : createNoDashGuid();\r\n        switch (this.messageType) {\r\n            case MessageType.Binary:\r\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\r\n                break;\r\n            case MessageType.Text:\r\n                this.privSize = this.textBody.length;\r\n        }\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n\r\n    public get body(): any {\r\n        return this.privBody;\r\n    }\r\n\r\n    public get textBody(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privBody as string;\r\n    }\r\n\r\n    public get binaryBody(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privBody;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class ConnectionOpenResponse {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    public constructor(statusCode: number, reason: string) {\r\n        this.privStatusCode = statusCode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Deferred } from \"./Promise\";\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class DefferalMap\r\n */\r\n\r\nexport class DeferralMap {\r\n    private privMap: { [id: string]: Deferred<any> } = {};\r\n\r\n    public add<T>(id: string, deferral: Deferred<T>): void {\r\n        this.privMap[id] = deferral;\r\n    }\r\n\r\n    public getId(id: string): Deferred<any> {\r\n        return this.privMap[id];\r\n    }\r\n\r\n    public complete<T>(id: string, result: T): void {\r\n        try {\r\n            this.privMap[id].resolve(result);\r\n        } catch (error) {\r\n            this.privMap[id].reject(error as string);\r\n        } finally {\r\n            this.privMap[id] = undefined;\r\n         }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { AgentConfig } from \"../common.speech/Exports\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class DialogEvent extends PlatformEvent {\r\n\r\n    public constructor(eventName: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n    }\r\n}\r\n\r\nexport class SendingAgentContextMessageEvent extends DialogEvent {\r\n    private privAgentConfig: AgentConfig;\r\n\r\n    public constructor(agentConfig: AgentConfig) {\r\n        super(\"SendingAgentContextMessageEvent\");\r\n        this.privAgentConfig = agentConfig;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class ArgumentNullError\r\n * @extends {Error}\r\n */\r\nexport class ArgumentNullError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ArgumentNullError.\r\n     *\r\n     * @param {string} argumentName - Name of the argument that is null\r\n     *\r\n     * @memberOf ArgumentNullError\r\n     */\r\n    public constructor(argumentName: string) {\r\n        super(argumentName);\r\n        this.name = \"ArgumentNull\";\r\n        this.message = argumentName;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an invalid operation is performed in the code.\r\n *\r\n * @export\r\n * @class InvalidOperationError\r\n * @extends {Error}\r\n */\r\nexport class InvalidOperationError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of InvalidOperationError.\r\n     *\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf InvalidOperationError\r\n     */\r\n    public constructor(error: string) {\r\n        super(error);\r\n        this.name = \"InvalidOperation\";\r\n        this.message = error;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an object is disposed.\r\n *\r\n * @export\r\n * @class ObjectDisposedError\r\n * @extends {Error}\r\n */\r\nexport class ObjectDisposedError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ObjectDisposedError.\r\n     *\r\n     * @param {string} objectName - The object that is disposed\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf ObjectDisposedError\r\n     */\r\n    public constructor(objectName: string, error?: string) {\r\n        super(error);\r\n        this.name = objectName + \"ObjectDisposed\";\r\n        this.message = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IEventListener, IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class EventSource<TEvent extends PlatformEvent> implements IEventSource<TEvent> {\r\n    private privEventListeners: IStringDictionary<(event: TEvent) => void> = {};\r\n    private privMetadata: IStringDictionary<string>;\r\n    private privIsDisposed: boolean = false;\r\n    private privConsoleListener: IDetachable = undefined;\r\n\r\n    public constructor(metadata?: IStringDictionary<string>) {\r\n        this.privMetadata = metadata;\r\n    }\r\n\r\n    public onEvent(event: TEvent): void {\r\n        if (this.isDisposed()) {\r\n            throw (new ObjectDisposedError(\"EventSource\"));\r\n        }\r\n\r\n        if (this.metadata) {\r\n            for (const paramName in this.metadata) {\r\n                if (paramName) {\r\n                    if (event.metadata) {\r\n                        if (!event.metadata[paramName]) {\r\n                            event.metadata[paramName] = this.metadata[paramName];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const eventId in this.privEventListeners) {\r\n            if (eventId && this.privEventListeners[eventId]) {\r\n                this.privEventListeners[eventId](event);\r\n            }\r\n        }\r\n    }\r\n\r\n    public attach(onEventCallback: (event: TEvent) => void): IDetachable {\r\n        const id = createNoDashGuid();\r\n        this.privEventListeners[id] = onEventCallback;\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privEventListeners[id];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public attachListener(listener: IEventListener<TEvent>): IDetachable {\r\n        return this.attach((e: TEvent): void => listener.onEvent(e));\r\n    }\r\n\r\n    public attachConsoleListener(listener: IEventListener<TEvent>): IDetachable {\r\n        if (!!this.privConsoleListener) {\r\n            void this.privConsoleListener.detach(); // Detach implementation for eventListeners is synchronous\r\n        }\r\n        this.privConsoleListener = this.attach((e: TEvent): void => listener.onEvent(e));\r\n        return this.privConsoleListener;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.privEventListeners = null;\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst createGuid: () => string = (): string => uuid();\r\n\r\nconst createNoDashGuid: () => string = (): string => createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\r\n\r\nexport { createGuid, createNoDashGuid };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionEvent } from \"./ConnectionEvents\";\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { ConnectionOpenResponse } from \"./ConnectionOpenResponse\";\r\nimport { EventSource } from \"./EventSource\";\r\n\r\nexport enum ConnectionState {\r\n    None,\r\n    Connected,\r\n    Connecting,\r\n    Disconnected,\r\n}\r\n\r\nexport interface IConnection {\r\n    id: string;\r\n    state(): ConnectionState;\r\n    open(): Promise<ConnectionOpenResponse>;\r\n    send(message: ConnectionMessage): Promise<void>;\r\n    read(): Promise<ConnectionMessage>;\r\n    events: EventSource<ConnectionEvent>;\r\n    dispose(disposing?: string): Promise<void>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IDisposable } from \"./IDisposable\";\r\n\r\nexport interface IList<TItem> extends IDisposable {\r\n    get(itemIndex: number): TItem;\r\n    first(): TItem;\r\n    last(): TItem;\r\n\r\n    add(item: TItem): void;\r\n    insertAt(index: number, item: TItem): void;\r\n\r\n    removeFirst(): TItem;\r\n    removeLast(): TItem;\r\n    removeAt(index: number): TItem;\r\n    remove(index: number, count: number): TItem[];\r\n    clear(): void;\r\n\r\n    length(): number;\r\n\r\n    onAdded(addedCallback: () => void): IDetachable;\r\n    onRemoved(removedCallback: () => void): IDetachable;\r\n    onDisposed(disposedCallback: () => void): IDetachable;\r\n\r\n    join(seperator?: string): string;\r\n\r\n    toArray(): TItem[];\r\n\r\n    any(callback?: (item: TItem, index: number) => boolean): boolean;\r\n    all(callback: (item: TItem) => boolean): boolean;\r\n    forEach(callback: (item: TItem, index: number) => void): void;\r\n    select<T2>(callback: (item: TItem, index: number) => T2): List<T2>;\r\n    where(callback: (item: TItem, index: number) => boolean): List<TItem>;\r\n    orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    clone(): List<TItem>;\r\n    concat(list: List<TItem>): List<TItem>;\r\n    concatArray(array: TItem[]): List<TItem>;\r\n}\r\n\r\nexport class List<TItem> implements IList<TItem>  {\r\n    private privList: TItem[];\r\n    private privSubscriptionIdCounter: number = 0;\r\n    private privAddSubscriptions: IStringDictionary<() => void> = {};\r\n    private privRemoveSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposedSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: TItem[]) {\r\n        this.privList = [];\r\n        // copy the list rather than taking as is.\r\n        if (list) {\r\n            for (const item of list) {\r\n                this.privList.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get(itemIndex: number): TItem {\r\n        this.throwIfDisposed();\r\n        return this.privList[itemIndex];\r\n    }\r\n\r\n    public first(): TItem {\r\n        return this.get(0);\r\n    }\r\n\r\n    public last(): TItem {\r\n        return this.get(this.length() - 1);\r\n    }\r\n\r\n    public add(item: TItem): void {\r\n        this.throwIfDisposed();\r\n        this.insertAt(this.privList.length, item);\r\n    }\r\n\r\n    public insertAt(index: number, item: TItem): void {\r\n        this.throwIfDisposed();\r\n        if (index === 0) {\r\n            this.privList.unshift(item);\r\n        } else if (index === this.privList.length) {\r\n            this.privList.push(item);\r\n        } else {\r\n            this.privList.splice(index, 0, item);\r\n        }\r\n        this.triggerSubscriptions(this.privAddSubscriptions);\r\n    }\r\n\r\n    public removeFirst(): TItem {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(0);\r\n    }\r\n\r\n    public removeLast(): TItem {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(this.length() - 1);\r\n    }\r\n\r\n    public removeAt(index: number): TItem {\r\n        this.throwIfDisposed();\r\n        return this.remove(index, 1)[0];\r\n    }\r\n\r\n    public remove(index: number, count: number): TItem[] {\r\n        this.throwIfDisposed();\r\n        const removedElements = this.privList.splice(index, count);\r\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\r\n        return removedElements;\r\n    }\r\n\r\n    public clear(): void {\r\n        this.throwIfDisposed();\r\n        this.remove(0, this.length());\r\n    }\r\n\r\n    public length(): number {\r\n        this.throwIfDisposed();\r\n        return this.privList.length;\r\n    }\r\n\r\n    public onAdded(addedCallback: () => void): IDetachable {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\r\n\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privAddSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onRemoved(removedCallback: () => void): IDetachable {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\r\n\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privRemoveSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onDisposed(disposedCallback: () => void): IDetachable {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\r\n\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privDisposedSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public join(seperator?: string): string {\r\n        this.throwIfDisposed();\r\n        return this.privList.join(seperator);\r\n    }\r\n\r\n    public toArray(): TItem[] {\r\n        const cloneCopy = Array<TItem>();\r\n        this.privList.forEach((val: TItem): void => {\r\n            cloneCopy.push(val);\r\n        });\r\n        return cloneCopy;\r\n    }\r\n\r\n    public any(callback?: (item: TItem, index: number) => boolean): boolean {\r\n        this.throwIfDisposed();\r\n        if (callback) {\r\n            return this.where(callback).length() > 0;\r\n        } else {\r\n            return this.length() > 0;\r\n        }\r\n    }\r\n\r\n    public all(callback: (item: TItem) => boolean): boolean {\r\n        this.throwIfDisposed();\r\n        return this.where(callback).length() === this.length();\r\n    }\r\n\r\n    public forEach(callback: (item: TItem, index: number) => void): void {\r\n        this.throwIfDisposed();\r\n        for (let i = 0; i < this.length(); i++) {\r\n            callback(this.privList[i], i);\r\n        }\r\n    }\r\n\r\n    public select<T2>(callback: (item: TItem, index: number) => T2): List<T2> {\r\n        this.throwIfDisposed();\r\n        const selectList: T2[] = [];\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            selectList.push(callback(this.privList[i], i));\r\n        }\r\n\r\n        return new List<T2>(selectList);\r\n    }\r\n\r\n    public where(callback: (item: TItem, index: number) => boolean): List<TItem> {\r\n        this.throwIfDisposed();\r\n        const filteredList = new List<TItem>();\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            if (callback(this.privList[i], i)) {\r\n                filteredList.add(this.privList[i]);\r\n            }\r\n        }\r\n        return filteredList;\r\n    }\r\n\r\n    public orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem> {\r\n        this.throwIfDisposed();\r\n        const clonedArray = this.toArray();\r\n        const orderedArray = clonedArray.sort(compareFn);\r\n        return new List(orderedArray);\r\n    }\r\n\r\n    public orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return this.orderBy((a: TItem, b: TItem): number => compareFn(b, a));\r\n    }\r\n\r\n    public clone(): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.toArray());\r\n    }\r\n\r\n    public concat(list: List<TItem>): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(list.toArray()));\r\n    }\r\n\r\n    public concatArray(array: TItem[]): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(array));\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privList == null;\r\n    }\r\n\r\n    public dispose(reason?: string): void {\r\n        if (!this.isDisposed()) {\r\n            this.privDisposeReason = reason;\r\n            this.privList = null;\r\n            this.privAddSubscriptions = null;\r\n            this.privRemoveSubscriptions = null;\r\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\r\n        }\r\n    }\r\n\r\n    private throwIfDisposed(): void {\r\n        if (this.isDisposed()) {\r\n            throw new ObjectDisposedError(\"List\", this.privDisposeReason);\r\n        }\r\n    }\r\n\r\n    private triggerSubscriptions(subscriptions: IStringDictionary<() => void>): void {\r\n        if (subscriptions) {\r\n            for (const subscriptionId in subscriptions) {\r\n                if (subscriptionId) {\r\n                    subscriptions[subscriptionId]();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum EventType {\r\n    Debug,\r\n    Info,\r\n    Warning,\r\n    Error,\r\n    None,\r\n}\r\n\r\nexport class PlatformEvent {\r\n    private privName: string;\r\n    private privEventId: string;\r\n    private privEventTime: string;\r\n    private privEventType: EventType;\r\n    private privMetadata: IStringDictionary<string>;\r\n\r\n    public constructor(eventName: string, eventType: EventType) {\r\n        this.privName = eventName;\r\n        this.privEventId = createNoDashGuid();\r\n        this.privEventTime = new Date().toISOString();\r\n        this.privEventType = eventType;\r\n        this.privMetadata = { };\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get eventId(): string {\r\n        return this.privEventId;\r\n    }\r\n\r\n    public get eventTime(): string {\r\n        return this.privEventTime;\r\n    }\r\n\r\n    public get eventType(): EventType {\r\n        return this.privEventType;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file, @typescript-eslint/typedef */\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T): void => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string): void => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    };\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    };\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    };\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    };\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    };\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    };\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve(result: T): void {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject(error: string): void {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on(\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void {\r\n\r\n        if (successCallback == null) {\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            successCallback = (): void => { };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback(result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e as string}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback(error: string, errorCallback: (error: string) => void): void {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e as string}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers(): void {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error ;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error as string);\r\n                    }\r\n                // eslint-disable-next-line no-empty\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            // eslint-disable-next-line no-empty\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError, ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IDisposable } from \"./IDisposable\";\r\nimport { List } from \"./List\";\r\nimport {\r\n    Deferred,\r\n} from \"./Promise\";\r\nexport interface IQueue<TItem> extends IDisposable {\r\n    enqueue(item: TItem): void;\r\n    enqueueFromPromise(promise: Promise<TItem>): void;\r\n    dequeue(): Promise<TItem>;\r\n    peek(): Promise<TItem>;\r\n    length(): number;\r\n}\r\n\r\nenum SubscriberType {\r\n    Dequeue,\r\n    Peek,\r\n}\r\n\r\nexport class Queue<TItem> implements IQueue<TItem> {\r\n    private privPromiseStore: List<Promise<TItem>> = new List<Promise<TItem>>();\r\n    private privList: List<TItem>;\r\n    private privDetachables: IDetachable[];\r\n    private privSubscribers: List<{ type: SubscriberType; deferral: Deferred<TItem> }>;\r\n    private privIsDrainInProgress: boolean = false;\r\n    private privIsDisposing: boolean = false;\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: List<TItem>) {\r\n        this.privList = list ? list : new List<TItem>();\r\n        this.privDetachables = [];\r\n        this.privSubscribers = new List<{ type: SubscriberType; deferral: Deferred<TItem> }>();\r\n        this.privDetachables.push(this.privList.onAdded((): void => this.drain()));\r\n    }\r\n\r\n    public enqueue(item: TItem): void {\r\n        this.throwIfDispose();\r\n        this.enqueueFromPromise(new Promise<TItem>((resolve: (value: TItem) => void): void => resolve(item)));\r\n    }\r\n\r\n    public enqueueFromPromise(promise: Promise<TItem>): void {\r\n        this.throwIfDispose();\r\n        promise.then((val: TItem): void => {\r\n            this.privList.add(val);\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        }, (): void => { });\r\n    }\r\n\r\n    public dequeue(): Promise<TItem> {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        if (this.privSubscribers) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public peek(): Promise<TItem> {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        const subs = this.privSubscribers;\r\n        if (subs) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public length(): number {\r\n        this.throwIfDispose();\r\n        return this.privList.length();\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privSubscribers == null;\r\n    }\r\n\r\n    public async drainAndDispose(pendingItemProcessor: (pendingItemInQueue: TItem) => void, reason?: string): Promise<void> {\r\n        if (!this.isDisposed() && !this.privIsDisposing) {\r\n            this.privDisposeReason = reason;\r\n            this.privIsDisposing = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            if (subs) {\r\n                while (subs.length() > 0) {\r\n                    const subscriber = subs.removeFirst();\r\n                    // TODO: this needs work (Resolve(null) instead?).\r\n                    subscriber.deferral.resolve(undefined);\r\n                    // subscriber.deferral.reject(\"Disposed\");\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n            }\r\n\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\r\n                const promiseArray: Promise<TItem>[] = [];\r\n\r\n                this.privPromiseStore.toArray().forEach((wrapper: Promise<TItem>): void => {\r\n                    promiseArray.push(wrapper);\r\n                });\r\n                return Promise.all(promiseArray).finally((): void => {\r\n                    this.privSubscribers = null;\r\n                    this.privList.forEach((item: TItem): void => {\r\n                        pendingItemProcessor(item);\r\n                    });\r\n                    this.privList = null;\r\n                    return;\r\n                }).then<void>();\r\n            } else {\r\n                this.privSubscribers = null;\r\n                this.privList = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        await this.drainAndDispose(null, reason);\r\n    }\r\n\r\n    private drain(): void {\r\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\r\n            this.privIsDrainInProgress = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            const lists = this.privList;\r\n            if (subs && lists) {\r\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\r\n                    const subscriber = subs.removeFirst();\r\n                    if (subscriber.type === SubscriberType.Peek) {\r\n                        subscriber.deferral.resolve(lists.first());\r\n                    } else {\r\n                        const dequeuedItem = lists.removeFirst();\r\n                        subscriber.deferral.resolve(dequeuedItem);\r\n                    }\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privList === lists) {\r\n                    this.privList = lists;\r\n                }\r\n            }\r\n\r\n            this.privIsDrainInProgress = false;\r\n        }\r\n    }\r\n\r\n    private throwIfDispose(): void {\r\n        if (this.isDisposed()) {\r\n            if (this.privDisposeReason) {\r\n                throw new InvalidOperationError(this.privDisposeReason);\r\n            }\r\n\r\n            throw new ObjectDisposedError(\"Queue\");\r\n        } else if (this.privIsDisposing) {\r\n            throw new InvalidOperationError(\"Queue disposing\");\r\n        }\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload as ArrayBuffer;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class RiffPcmEncoder {\r\n\r\n    private privActualSampleRate: number;\r\n    private privDesiredSampleRate: number;\r\n\r\n    public constructor(actualSampleRate: number, desiredSampleRate: number) {\r\n        this.privActualSampleRate = actualSampleRate;\r\n        this.privDesiredSampleRate = desiredSampleRate;\r\n    }\r\n\r\n    public encode(actualAudioFrame: Float32Array): ArrayBuffer {\r\n\r\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\r\n\r\n        if (!audioFrame) {\r\n            return null;\r\n        }\r\n\r\n        const audioLength = audioFrame.length * 2;\r\n\r\n        const buffer = new ArrayBuffer(audioLength);\r\n        const view = new DataView(buffer);\r\n        this.floatTo16BitPCM(view, 0, audioFrame);\r\n\r\n        return buffer;\r\n    }\r\n\r\n    private setString(view: DataView, offset: number, str: string): void {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n\r\n    private floatTo16BitPCM(view: DataView, offset: number, input: Float32Array): void {\r\n        for (let i = 0; i < input.length; i++ , offset += 2) {\r\n            const s = Math.max(-1, Math.min(1, input[i]));\r\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n    }\r\n\r\n    private downSampleAudioFrame(\r\n        srcFrame: Float32Array,\r\n        srcRate: number,\r\n        dstRate: number): Float32Array {\r\n\r\n        if (!srcFrame) {\r\n            return null;\r\n        }\r\n\r\n        if (dstRate === srcRate || dstRate > srcRate) {\r\n            return srcFrame;\r\n        }\r\n\r\n        const ratio = srcRate / dstRate;\r\n        const dstLength = Math.round(srcFrame.length / ratio);\r\n        const dstFrame = new Float32Array(dstLength);\r\n        let srcOffset = 0;\r\n        let dstOffset = 0;\r\n        while (dstOffset < dstLength) {\r\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\r\n            let accum = 0;\r\n            let count = 0;\r\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\r\n                accum += srcFrame[srcOffset++];\r\n                count++;\r\n            }\r\n            dstFrame[dstOffset++] = accum / count;\r\n        }\r\n\r\n        return dstFrame;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { Queue } from \"./Queue\";\r\n\r\nexport interface IStreamChunk<TBuffer> {\r\n    isEnd: boolean;\r\n    buffer: TBuffer;\r\n    timeReceived: number;\r\n}\r\n\r\nexport class Stream<TBuffer> {\r\n    private privId: string;\r\n    private privIsWriteEnded: boolean = false;\r\n    private privIsReadEnded: boolean = false;\r\n    private privReaderQueue: Queue<IStreamChunk<TBuffer>>;\r\n\r\n    public constructor(streamId?: string) {\r\n        this.privId = streamId ? streamId : createNoDashGuid();\r\n        this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsWriteEnded;\r\n    }\r\n\r\n    public get isReadEnded(): boolean {\r\n        return this.privIsReadEnded;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.privIsWriteEnded) {\r\n            this.writeStreamChunk({\r\n                buffer: null,\r\n                isEnd: true,\r\n                timeReceived: Date.now(),\r\n            });\r\n            this.privIsWriteEnded = true;\r\n        }\r\n    }\r\n\r\n    public writeStreamChunk(streamChunk: IStreamChunk<TBuffer>): void {\r\n        this.throwIfClosed();\r\n        if (!this.privReaderQueue.isDisposed()) {\r\n            try {\r\n                this.privReaderQueue.enqueue(streamChunk);\r\n            } catch (e) {\r\n                // Do nothing\r\n            }\r\n        }\r\n    }\r\n\r\n    public read(): Promise<IStreamChunk<TBuffer>> {\r\n        if (this.privIsReadEnded) {\r\n            throw new InvalidOperationError(\"Stream read has already finished\");\r\n        }\r\n\r\n        return this.privReaderQueue\r\n            .dequeue()\r\n            .then(async (streamChunk: IStreamChunk<TBuffer>): Promise<IStreamChunk<TBuffer>> => {\r\n                if (streamChunk === undefined || streamChunk.isEnd) {\r\n                    await this.privReaderQueue.dispose(\"End of stream reached\");\r\n                }\r\n\r\n                return streamChunk;\r\n            });\r\n    }\r\n    public readEnded(): void {\r\n        if (!this.privIsReadEnded) {\r\n            this.privIsReadEnded = true;\r\n            this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n        }\r\n    }\r\n\r\n    private throwIfClosed(): void {\r\n        if (this.privIsWriteEnded) {\r\n            throw new InvalidOperationError(\"Stream closed\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\n/**\r\n * String helper functions\r\n */\r\nexport class StringUtils {\r\n\r\n    /**\r\n     * Formats a string by replacing the named {keys} in the string with the values contained in the replacement dictionary.\r\n     * @param format The format string that contains the parts to replace surrounded by {}. For example: \"wss://{region}.cts.speech.microsoft.com\".\r\n     * If your string needs to contain a { or } you can use the {{ and }} escape sequences respectively.\r\n     * @param replacements The dictionary of replacements. If a replacement is not found, it is replaced with an empty string\r\n     * @returns The formatted string. If you pass in a null or undefined format string, an empty string will be returned\r\n     */\r\n    public static formatString(format: string, replacements: IStringDictionary<string>): string {\r\n        if (!format) {\r\n            return \"\";\r\n        }\r\n\r\n        if (!replacements) {\r\n            return format;\r\n        }\r\n\r\n        let formatted: string = \"\";\r\n        let key: string = \"\";\r\n\r\n        const appendToFormatted = (str: string): void => {\r\n            formatted += str;\r\n        };\r\n        const appendToKey = (str: string): void => {\r\n            key += str;\r\n        };\r\n        let appendFunc: (str: string) => void = appendToFormatted;\r\n\r\n        for (let i = 0; i < format.length; i++) {\r\n            const c: string = format[i];\r\n            const next: string = i + 1 < format.length ? format[i + 1] : \"\";\r\n\r\n            switch (c) {\r\n                case \"{\":\r\n                    if (next === \"{\") {\r\n                        appendFunc(\"{\");\r\n                        i++;\r\n                    } else {\r\n                        appendFunc = appendToKey;\r\n                    }\r\n                    break;\r\n\r\n                case \"}\":\r\n                    if (next === \"}\") {\r\n                        appendFunc(\"}\");\r\n                        i++;\r\n                    } else {\r\n                        if (replacements.hasOwnProperty(key)) {\r\n                            formatted += replacements[key];\r\n                        }\r\n\r\n                        appendFunc = appendToFormatted;\r\n                        key = \"\";\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    appendFunc(c);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\ntype TWorkerMessage = ICallNotification | IClearResponse | IErrorNotification | IErrorResponse;\r\n\r\ninterface IClearResponse {\r\n    error: null;\r\n    id: number;\r\n}\r\n\r\ninterface IErrorNotification {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: null;\r\n    result: null;\r\n}\r\n\r\ninterface IErrorResponse {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: number;\r\n    result: null;\r\n}\r\n\r\ninterface ICallNotification {\r\n    id: null;\r\n    method: \"call\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface ISetNotification {\r\n    id: null;\r\n    method: \"set\";\r\n    params: {\r\n        delay: number;\r\n        now: number;\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IClearRequest {\r\n    id: number;\r\n    method: \"clear\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IWorkerEvent extends Event {\r\n    data: TWorkerMessage;\r\n}\r\n\r\ninterface IWorkerTimers {\r\n    clearTimeout: (timerId: number) => void;\r\n    setTimeout: (func: () => any, delay: number) => number;\r\n}\r\n\r\ndeclare type Func = () => any;\r\n\r\nexport class Timeout {\r\n\r\n    private static workerTimers: null | IWorkerTimers = null;\r\n\r\n    public static clearTimeout: IWorkerTimers[\"clearTimeout\"] = (timerId: number): void => Timeout.timers().clearTimeout(timerId);\r\n\r\n    public static setTimeout: IWorkerTimers[\"setTimeout\"] = (func: () => any, delay: number): number => Timeout.timers().setTimeout(func, delay);\r\n\r\n    public static load(): any {\r\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\r\n        const scheduledTimeoutFunctions: Map<number, number | Func> = new Map([[0, (): void => { }]]); // eslint-disable-line @typescript-eslint/no-empty-function\r\n        const unhandledRequests: Map<number, number> = new Map();\r\n\r\n        // eslint-disable-next-line\r\n        const workerScript = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`;\r\n        const workerUrl = \"data:text/javascript;base64,\" + btoa(workerScript);\r\n        const worker = new Worker(workerUrl);\r\n\r\n        worker.addEventListener(\"message\", ({ data }: IWorkerEvent): void => {\r\n            if (Timeout.isCallNotification(data)) {\r\n                const {\r\n                    params: { timerId }\r\n                } = data;\r\n\r\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\r\n\r\n                if (typeof idOrFunc === \"number\") {\r\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\r\n\r\n                    if (\r\n                        unhandledTimerId === undefined ||\r\n                        unhandledTimerId !== timerId\r\n                    ) {\r\n                        throw new Error(\"The timer is in an undefined state.\");\r\n                    }\r\n                } else if (typeof idOrFunc !== \"undefined\") {\r\n                    idOrFunc();\r\n\r\n                    // A timeout can be safely deleted because it is only called once.\r\n                    scheduledTimeoutFunctions.delete(timerId);\r\n                } else {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n            } else if (Timeout.isClearResponse(data)) {\r\n                const { id } = data;\r\n\r\n                const unhandledTimerId = unhandledRequests.get(id);\r\n\r\n                if (unhandledTimerId === undefined) {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n\r\n                unhandledRequests.delete(id);\r\n\r\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\r\n            } else {\r\n                const {\r\n                    error: { message }\r\n                } = data;\r\n\r\n                throw new Error(message);\r\n            }\r\n        });\r\n\r\n        const clearTimeout = (timerId: number): void => {\r\n            const id = Math.random();\r\n\r\n            unhandledRequests.set(id, timerId);\r\n            scheduledTimeoutFunctions.set(timerId, id);\r\n\r\n            worker.postMessage({\r\n                id,\r\n                method: \"clear\",\r\n                params: { timerId }\r\n            } as IClearRequest);\r\n        };\r\n\r\n        const setTimeout = (func: () => void, delay: number): number => {\r\n            const timerId = Math.random();\r\n\r\n            scheduledTimeoutFunctions.set(timerId, func);\r\n\r\n            worker.postMessage({\r\n                id: null,\r\n                method: \"set\",\r\n                params: {\r\n                    delay,\r\n                    now: performance.now(),\r\n                    timerId\r\n                }\r\n            } as ISetNotification);\r\n\r\n            return timerId;\r\n        };\r\n\r\n        return {\r\n            clearTimeout,\r\n            setTimeout\r\n        };\r\n    }\r\n\r\n    private static loadWorkerTimers(): () => IWorkerTimers {\r\n        return (): IWorkerTimers => {\r\n            if (Timeout.workerTimers !== null) {\r\n                return Timeout.workerTimers;\r\n            }\r\n\r\n            Timeout.workerTimers = Timeout.load() as IWorkerTimers;\r\n\r\n            return Timeout.workerTimers;\r\n        };\r\n    }\r\n\r\n    public static timers: () => IWorkerTimers = Timeout.loadWorkerTimers();\r\n\r\n    private static isCallNotification(message: TWorkerMessage): message is ICallNotification {\r\n        return (message as ICallNotification).method !== undefined && (message as ICallNotification).method === \"call\";\r\n    }\r\n\r\n    private static isClearResponse(message: TWorkerMessage): message is IClearResponse {\r\n        return (message as IClearResponse).error === null && typeof message.id === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { PullAudioOutputStream } from \"./Audio/AudioOutputStream\";\r\n\r\ninterface IActivity {\r\n    conversation?: any;\r\n    id?: string;\r\n    replyToId?: string;\r\n    type?: string;\r\n    text?: string;\r\n    speak?: any;\r\n}\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class ActivityReceivedEventArgs\r\n */\r\nexport class ActivityReceivedEventArgs {\r\n    private privActivity: IActivity;\r\n    private privAudioStream: PullAudioOutputStream;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {any} activity - The activity..\r\n     */\r\n    public constructor(activity: any, audioStream?: PullAudioOutputStream) {\r\n        this.privActivity = activity as IActivity;\r\n        this.privAudioStream = audioStream;\r\n    }\r\n\r\n    /**\r\n     * Gets the received activity\r\n     * @member ActivityReceivedEventArgs.prototype.activity\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received activity.\r\n     */\r\n    public get activity(): any {\r\n        return this.privActivity;\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStream {\r\n        return this.privAudioStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { PathLike } from \"fs\";\r\nimport {\r\n    FileAudioSource,\r\n    MicAudioSource,\r\n    PcmRecorder,\r\n} from \"../../common.browser/Exports\";\r\nimport { ISpeechConfigAudioDevice } from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IAudioSource,\r\n    IAudioStreamNode\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioInputStream,\r\n    AudioOutputStream,\r\n    AudioStreamFormat,\r\n    IPlayer,\r\n    PullAudioInputStreamCallback,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeakerAudioDestination\r\n} from \"../Exports\";\r\nimport { AudioFileWriter } from \"./AudioFileWriter\";\r\nimport { PullAudioInputStreamImpl, PushAudioInputStreamImpl } from \"./AudioInputStream\";\r\nimport { PullAudioOutputStreamImpl, PushAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\r\n * @class AudioConfig\r\n * Updated in version 1.11.0\r\n */\r\nexport abstract class AudioConfig {\r\n    /**\r\n     * Creates an AudioConfig object representing the default microphone on the system.\r\n     * @member AudioConfig.fromDefaultMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromDefaultMicrophoneInput(): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\r\n     * @member AudioConfig.fromMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\r\n     * Default microphone is used the value is omitted.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromMicrophoneInput(deviceId?: string): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder, deviceId));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified file.\r\n     * @member AudioConfig.fromWavFileInput\r\n     * @function\r\n     * @public\r\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromWavFileInput(file: File | Buffer, name: string = \"unnamedBuffer.wav\"): AudioConfig {\r\n        return new AudioConfigImpl(new FileAudioSource(file, name));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified stream.\r\n     * @member AudioConfig.fromStreamInput\r\n     * @function\r\n     * @public\r\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\r\n     * stream. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromStreamInput(audioStream: AudioInputStream | PullAudioInputStreamCallback\r\n        | MediaStream): AudioConfig {\r\n        if (audioStream instanceof PullAudioInputStreamCallback) {\r\n            return new AudioConfigImpl(new PullAudioInputStreamImpl(audioStream));\r\n        }\r\n\r\n        if (audioStream instanceof AudioInputStream) {\r\n            return new AudioConfigImpl(audioStream as PushAudioInputStreamImpl);\r\n        }\r\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\r\n            const pcmRecorder = new PcmRecorder(false);\r\n            return new AudioConfigImpl(new MicAudioSource(pcmRecorder, null, null, audioStream));\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the default speaker.\r\n     * @member AudioConfig.fromDefaultSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromDefaultSpeakerOutput(): AudioConfig {\r\n        return new AudioOutputConfigImpl(new SpeakerAudioDestination());\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the custom IPlayer object.\r\n     * You can use the IPlayer object to control pause, resume, etc.\r\n     * @member AudioConfig.fromSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @param {IPlayer} player - the IPlayer object for playback.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.12.0\r\n     */\r\n    public static fromSpeakerOutput(player?: IPlayer): AudioConfig {\r\n        if (player === undefined) {\r\n            return AudioConfig.fromDefaultSpeakerOutput();\r\n        }\r\n        if (player instanceof SpeakerAudioDestination) {\r\n            return new AudioOutputConfigImpl(player);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified output audio file\r\n     * @member AudioConfig.fromAudioFileOutput\r\n     * @function\r\n     * @public\r\n     * @param {PathLike} filename - the filename of the output audio file\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromAudioFileOutput(filename: PathLike): AudioConfig {\r\n        return new AudioOutputConfigImpl(new AudioFileWriter(filename));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified audio output stream\r\n     * @member AudioConfig.fromStreamOutput\r\n     * @function\r\n     * @public\r\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\r\n     * stream.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromStreamOutput(audioStream: AudioOutputStream | PushAudioOutputStreamCallback): AudioConfig {\r\n        if (audioStream instanceof PushAudioOutputStreamCallback) {\r\n            return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(audioStream));\r\n        }\r\n\r\n        if (audioStream instanceof PushAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PushAudioOutputStreamImpl);\r\n        }\r\n\r\n        if (audioStream instanceof PullAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PullAudioOutputStreamImpl);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class AudioConfigImpl\r\n */\r\nexport class AudioConfigImpl extends AudioConfig implements IAudioSource {\r\n    private privSource: IAudioSource;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioSource} source - An audio source.\r\n     */\r\n    public constructor(source: IAudioSource) {\r\n        super();\r\n        this.privSource = source;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privSource.format;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privSource.turnOff().then((): void => {\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        }, (error: string): void => {\r\n            if (!!err) {\r\n                err(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.id\r\n     * @function\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privSource.id();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOn\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOn(): Promise<void> {\r\n        return this.privSource.turnOn();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.attach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     * @returns {Promise<IAudioStreamNode>} A promise.\r\n     */\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        return this.privSource.attach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.detach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     */\r\n    public detach(audioNodeId: string): void {\r\n        return this.privSource.detach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOff\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOff(): Promise<void> {\r\n        return this.privSource.turnOff();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.events\r\n     * @function\r\n     * @public\r\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\r\n     */\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privSource.events;\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        if (undefined !== this.privSource.setProperty) {\r\n            this.privSource.setProperty(name, value);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n        }\r\n\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        if (undefined !== this.privSource.getProperty) {\r\n            return this.privSource.getProperty(name, def);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privSource.deviceInfo;\r\n    }\r\n}\r\n\r\nexport class AudioOutputConfigImpl extends AudioConfig implements IAudioDestination {\r\n    private privDestination: IAudioDestination;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioDestination} destination - An audio destination.\r\n     */\r\n    public constructor(destination: IAudioDestination) {\r\n        super();\r\n        this.privDestination = destination;\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        this.privDestination.format = format;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        this.privDestination.write(buffer);\r\n    }\r\n\r\n    public close(): void {\r\n        this.privDestination.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privDestination.id();\r\n    }\r\n\r\n    public setProperty(): void {\r\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n    }\r\n\r\n    public getProperty(): string {\r\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { IAudioDestination } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport { AudioStreamFormat } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\nexport class AudioFileWriter implements IAudioDestination {\r\n    private privAudioFormat: AudioOutputFormatImpl;\r\n    private privFd: number;\r\n    private privId: string;\r\n    private privWriteStream: fs.WriteStream;\r\n\r\n    public constructor(filename: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\r\n        this.privFd = fs.openSync(filename, \"w\");\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\r\n        this.privAudioFormat = format as AudioOutputFormatImpl;\r\n        let headerOffset: number = 0;\r\n        if (this.privAudioFormat.hasHeader) {\r\n            headerOffset = this.privAudioFormat.header.byteLength;\r\n        }\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream = fs.createWriteStream(\"\", {fd: this.privFd, start: headerOffset, autoClose: false});\r\n        }\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\r\n        if (this.privWriteStream !== undefined) {\r\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream.on(\"finish\", (): void => {\r\n                if (this.privAudioFormat.hasHeader) {\r\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\r\n                    fs.writeSync(this.privFd,\r\n                        new Int8Array(this.privAudioFormat.header),\r\n                        0,\r\n                        this.privAudioFormat.header.byteLength,\r\n                        0);\r\n                }\r\n                fs.closeSync(this.privFd);\r\n                this.privFd = undefined;\r\n            });\r\n            this.privWriteStream.end();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    ChunkedArrayBufferStream,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { createNoDashGuid } from \"../../common/Guid\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class AudioInputStream\r\n */\r\nexport abstract class AudioInputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member AudioInputStream.createPushStream\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     * written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPushStream(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return PushAudioInputStream.create(format);\r\n    }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\r\n     * and close() methods.\r\n     * @member AudioInputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\r\n     * PullAudioInputStreamCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\r\n     * the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPullStream(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return PullAudioInputStream.create(callback, format);\r\n        // throw new Error(\"Oops\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @class PushAudioInputStream\r\n */\r\nexport abstract class PushAudioInputStream extends AudioInputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member PushAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\r\n     * push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return new PushAudioInputStreamImpl(format);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStream.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PushAudioInputStreamImpl\r\n */\r\nexport class PushAudioInputStreamImpl extends PushAudioInputStream implements IAudioSource {\r\n\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privStream: Stream<ArrayBuffer>;\r\n\r\n    /**\r\n     * Creates and initalizes an instance with the given values.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} format - The audio stream format.\r\n     */\r\n    public constructor(format?: AudioStreamFormat) {\r\n        super();\r\n        if (format === undefined) {\r\n            this.privFormat = AudioStreamFormatImpl.getDefaultInputFormat();\r\n        } else {\r\n            this.privFormat = format as AudioStreamFormatImpl;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        const stream = this.privStream;\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: async (): Promise<void> => {\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: (): string => audioNodeId,\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => stream.read(),\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PushStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private toBuffer(arrayBuffer: ArrayBuffer): Buffer {\r\n        const buf: Buffer = Buffer.alloc(arrayBuffer.byteLength);\r\n        const view: Uint8Array = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < buf.length; ++i) {\r\n            buf[i] = view[i];\r\n        }\r\n        return buf;\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class PullAudioInputStream\r\n */\r\nexport abstract class PullAudioInputStream extends AudioInputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n super();\r\n}\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @member PullAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     * derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return new PullAudioInputStreamImpl(callback, format as AudioStreamFormatImpl);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PullAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PullAudioInputStreamImpl\r\n */\r\nexport class PullAudioInputStreamImpl extends PullAudioInputStream implements IAudioSource {\r\n\r\n    private privCallback: PullAudioInputStreamCallback;\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privIsClosed: boolean;\r\n    private privBufferSize: number;\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @constructor\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     * derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     */\r\n    public constructor(callback: PullAudioInputStreamCallback, format?: AudioStreamFormatImpl) {\r\n        super();\r\n        if (undefined === format) {\r\n            this.privFormat = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n        } else {\r\n            this.privFormat = format;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n        this.privIsClosed = false;\r\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privIsClosed = true;\r\n        this.privCallback.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                this.privCallback.close();\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: (): string => audioNodeId,\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                let totalBytes: number = 0;\r\n                let transmitBuff: ArrayBuffer;\r\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n                while (totalBytes < this.privBufferSize) {\r\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\r\n                    // data back.\r\n                    const readBuff: ArrayBuffer = new ArrayBuffer(this.privBufferSize - totalBytes);\r\n                    const pulledBytes: number = this.privCallback.read(readBuff);\r\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\r\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\r\n                    // preferred size allocated.\r\n                    if (undefined === transmitBuff) {\r\n                        transmitBuff = readBuff;\r\n                    } else {\r\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\r\n                        const intView: Int8Array = new Int8Array(transmitBuff);\r\n                        intView.set(new Int8Array(readBuff), totalBytes);\r\n                    }\r\n                    // If there are no bytes to read, just break out and be done.\r\n                    if (0 === pulledBytes) {\r\n                        break;\r\n                    }\r\n                    totalBytes += pulledBytes;\r\n                }\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: transmitBuff.slice(0, totalBytes),\r\n                    isEnd: this.privIsClosed || totalBytes === 0,\r\n                    timeReceived: Date.now(),\r\n                });\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PullStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { INumberDictionary } from \"../../common/Exports\";\r\nimport { SpeechSynthesisOutputFormat } from \"../SpeechSynthesisOutputFormat\";\r\nimport { AudioFormatTag, AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * @private\r\n * @class AudioOutputFormatImpl\r\n * Updated in version 1.17.0\r\n */\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class AudioOutputFormatImpl extends AudioStreamFormatImpl {\r\n    public static SpeechSynthesisOutputFormatToString: INumberDictionary<string> = {\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus]: \"audio-16khz-16bit-32kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus]: \"audio-24khz-16bit-48kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus]: \"audio-24khz-16bit-24kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm]: \"raw-22050hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm]: \"riff-22050hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm]: \"raw-44100hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm]: \"riff-44100hz-16bit-mono-pcm\",\r\n    };\r\n    private priAudioFormatString: string;\r\n    /**\r\n     * audio format string for synthesis request, which may differ from priAudioFormatString.\r\n     * e.g. for riff format, we will request raw format and add a header in SDK side.\r\n     */\r\n    private readonly priRequestAudioFormatString: string;\r\n    private readonly priHasHeader: boolean;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param formatTag\r\n     * @param {number} channels - Number of channels.\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} avgBytesPerSec - Average bytes per second.\r\n     * @param {number} blockAlign - Block alignment.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {string} audioFormatString - Audio format string\r\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\r\n     * @param {boolean} hasHeader - If the format has header or not.\r\n     */\r\n    public constructor(formatTag: AudioFormatTag,\r\n                       channels: number,\r\n                       samplesPerSec: number,\r\n                       avgBytesPerSec: number,\r\n                       blockAlign: number,\r\n                       bitsPerSample: number,\r\n                       audioFormatString: string,\r\n                       requestAudioFormatString: string,\r\n                       hasHeader: boolean) {\r\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\r\n        this.formatTag = formatTag;\r\n        this.avgBytesPerSec = avgBytesPerSec;\r\n        this.blockAlign = blockAlign;\r\n        this.priAudioFormatString = audioFormatString;\r\n        this.priRequestAudioFormatString = requestAudioFormatString;\r\n        this.priHasHeader = hasHeader;\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat?: SpeechSynthesisOutputFormat): AudioOutputFormatImpl {\r\n        if (speechSynthesisOutputFormat === undefined) {\r\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString: string): AudioOutputFormatImpl {\r\n        switch (speechSynthesisOutputFormatString) {\r\n            case \"raw-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"audio-16khz-16kbps-mono-siren\",\r\n                    true);\r\n            case \"audio-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-32kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    32 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-128kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    128 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-64kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    64 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-48kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    48 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-160kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    160 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-16khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n\r\n            case \"riff-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-mulaw\",\r\n                    true);\r\n            case \"raw-16khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"ogg-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"riff-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"audio-48khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-192kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    192 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-48khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    48000,\r\n                    12000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    16000,\r\n                    4000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    6000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-16bit-32kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    16000,\r\n                    4000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-48kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    24000,\r\n                    6000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    24000,\r\n                    24000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    48000,\r\n                    30000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-alaw\",\r\n                    true);\r\n            case \"raw-22050hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    22050,\r\n                    44100,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-22050hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    22050,\r\n                    44100,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-22050hz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"raw-44100hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    44100,\r\n                    88200,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-44100hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    44100,\r\n                    88200,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-44100hz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-16khz-16bit-mono-pcm\":\r\n            default:\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    \"riff-16khz-16bit-mono-pcm\",\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    true);\r\n        }\r\n    }\r\n\r\n    public static getDefaultOutputFormat(): AudioOutputFormatImpl {\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            (typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\r\n    }\r\n\r\n    /**\r\n     * The format tag of the audio\r\n     * @AudioFormatTag AudioOutputFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: AudioFormatTag;\r\n\r\n    /**\r\n     * Specifies if this audio output format has a header\r\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\r\n     * @function\r\n     * @public\r\n     */\r\n    public get hasHeader(): boolean {\r\n        return this.priHasHeader;\r\n    }\r\n\r\n    /**\r\n     * Specifies the header of this format\r\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\r\n     * @function\r\n     * @public\r\n     */\r\n    public get header(): ArrayBuffer {\r\n        if (this.hasHeader) {\r\n            return this.privHeader;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Updates the header based on the audio length\r\n     * @member AudioOutputFormatImpl.updateHeader\r\n     * @function\r\n     * @public\r\n     * @param {number} audioLength - the audio length\r\n     */\r\n    public updateHeader(audioLength: number): void {\r\n        if (this.priHasHeader) {\r\n            const view = new DataView(this.privHeader);\r\n            view.setUint32(4, audioLength + this.privHeader.byteLength - 8, true);\r\n            view.setUint32(40, audioLength, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio format string to be sent to the service\r\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\r\n     * @function\r\n     * @public\r\n     */\r\n    public get requestAudioFormatString(): string {\r\n        return this.priRequestAudioFormatString;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    IAudioDestination,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioStreamFormat,\r\n    PushAudioOutputStreamCallback\r\n} from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class AudioOutputStream\r\n */\r\nexport abstract class AudioOutputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Sets the format of the AudioOutputStream\r\n     * Note: the format is set by the synthesizer before writing. Do not set it before passing it to AudioConfig\r\n     * @member AudioOutputStream.prototype.format\r\n     */\r\n    public abstract set format(format: AudioStreamFormat);\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member AudioOutputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The audio output stream being created.\r\n     */\r\n    public static createPullStream(): PullAudioOutputStream {\r\n        return PullAudioOutputStream.create();\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @class PullAudioOutputStream\r\n */\r\nexport abstract class PullAudioOutputStream extends AudioOutputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member PullAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(): PullAudioOutputStream {\r\n        return new PullAudioOutputStreamImpl();\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStream.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} Audio buffer length has been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): Promise<number>;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PullAudioOutputStreamImpl\r\n */\r\nexport class PullAudioOutputStreamImpl extends PullAudioOutputStream implements IAudioDestination {\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privId: string;\r\n    private privStream: Stream<ArrayBuffer>;\r\n    private privLastChunkView: Int8Array;\r\n\r\n    /**\r\n     * Creates and initializes an instance with the given values.\r\n     * @constructor\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new Stream<ArrayBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Sets the format information to the stream. For internal use only.\r\n     * @param {AudioStreamFormat} format - the format to be set.\r\n     */\r\n    public set format(format: AudioStreamFormat) {\r\n        if (format === undefined || format === null) {\r\n            this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        this.privFormat = format as AudioOutputFormatImpl;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): AudioStreamFormat {\r\n        return this.privFormat;\r\n    }\r\n\r\n    /**\r\n     * Checks if the stream is closed\r\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\r\n     * @property\r\n     * @public\r\n     */\r\n    public get isClosed(): boolean {\r\n        return this.privStream.isClosed;\r\n    }\r\n\r\n    /**\r\n     * Gets the id of the stream\r\n     * @member PullAudioOutputStreamImpl.prototype.id\r\n     * @property\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStreamImpl.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} - Audio buffer length has been read.\r\n     */\r\n    public async read(dataBuffer: ArrayBuffer): Promise<number> {\r\n        const intView: Int8Array = new Int8Array(dataBuffer);\r\n        let totalBytes: number = 0;\r\n\r\n        if (this.privLastChunkView !== undefined) {\r\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\r\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\r\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\r\n                return Promise.resolve(dataBuffer.byteLength);\r\n            }\r\n            intView.set(this.privLastChunkView);\r\n            totalBytes = this.privLastChunkView.length;\r\n            this.privLastChunkView = undefined;\r\n        }\r\n\r\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\r\n            const chunk: IStreamChunk<ArrayBuffer> = await this.privStream.read();\r\n            if (chunk !== undefined && !chunk.isEnd) {\r\n                let tmpBuffer: ArrayBuffer;\r\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\r\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\r\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\r\n                } else {\r\n                    tmpBuffer = chunk.buffer;\r\n                }\r\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\r\n                totalBytes += tmpBuffer.byteLength;\r\n            } else {\r\n                this.privStream.readEnded();\r\n            }\r\n        }\r\n        return totalBytes;\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PullAudioOutputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class PushAudioOutputStream\r\n */\r\nexport abstract class PushAudioOutputStream extends AudioOutputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * write() and close() methods.\r\n     * @member PushAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     * derived from PushAudioOutputStreamCallback\r\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(callback: PushAudioOutputStreamCallback): PushAudioOutputStream {\r\n        return new PushAudioOutputStreamImpl(callback);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PushAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PushAudioOutputStreamImpl\r\n */\r\nexport class PushAudioOutputStreamImpl extends PushAudioOutputStream implements IAudioDestination {\r\n    private readonly privId: string;\r\n    private privCallback: PushAudioOutputStreamCallback;\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * read() and close() methods.\r\n     * @constructor\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     * derived from PushAudioOutputStreamCallback\r\n     */\r\n    public constructor(callback: PushAudioOutputStreamCallback) {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public set format(format: AudioStreamFormat) { }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        if (!!this.privCallback.write) {\r\n            this.privCallback.write(buffer);\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (!!this.privCallback.close) {\r\n            this.privCallback.close();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport enum AudioFormatTag {\r\n    PCM = 1,\r\n    MuLaw,\r\n    Siren,\r\n    MP3,\r\n    SILKSkype,\r\n    OGG_OPUS,\r\n    WEBM_OPUS,\r\n    ALaw,\r\n    FLAC,\r\n    OPUS,\r\n}\r\n\r\n/**\r\n * Represents audio stream format used for custom audio input configurations.\r\n * @class AudioStreamFormat\r\n */\r\nexport abstract class AudioStreamFormat {\r\n    /**\r\n     * Creates an audio stream format object representing the default audio stream\r\n     * format (16KHz 16bit mono PCM).\r\n     * @member AudioStreamFormat.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormat {\r\n        return AudioStreamFormatImpl.getDefaultInputFormat();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified format characteristics.\r\n     * @member AudioStreamFormat.getWaveFormat\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     * uses one channel and stereo data uses two channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormat(samplesPerSecond: number, bitsPerSample: number, channels: number, format: AudioFormatTag): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels, format);\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\r\n     * @member AudioStreamFormat.getWaveFormatPCM\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     * uses one channel and stereo data uses two channels.\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormatPCM(samplesPerSecond: number, bitsPerSample: number, channels: number): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioStreamFormat.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class AudioStreamFormatImpl\r\n */\r\nexport class AudioStreamFormatImpl extends AudioStreamFormat {\r\n    protected privHeader: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {number} channels - Number of channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     */\r\n    public constructor(samplesPerSec: number = 16000, bitsPerSample: number = 16, channels: number = 1, format: AudioFormatTag = AudioFormatTag.PCM) {\r\n        super();\r\n\r\n        let isWavFormat: boolean = true;\r\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\r\n        switch (format) {\r\n            case AudioFormatTag.PCM:\r\n                this.formatTag = 1;\r\n                break;\r\n            case AudioFormatTag.ALaw:\r\n                this.formatTag = 6;\r\n                break;\r\n            case AudioFormatTag.MuLaw:\r\n                this.formatTag = 7;\r\n                break;\r\n            default:\r\n                isWavFormat = false;\r\n        }\r\n        this.bitsPerSample = bitsPerSample;\r\n        this.samplesPerSec = samplesPerSec;\r\n        this.channels = channels;\r\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\r\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\r\n\r\n        if (isWavFormat) {\r\n            this.privHeader = new ArrayBuffer(44);\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\r\n            const view = new DataView(this.privHeader);\r\n\r\n            /* RIFF identifier */\r\n            this.setString(view, 0, \"RIFF\");\r\n            /* file length */\r\n            view.setUint32(4, 0, true);\r\n            /* RIFF type & Format */\r\n            this.setString(view, 8, \"WAVEfmt \");\r\n            /* format chunk length */\r\n            view.setUint32(16, 16, true);\r\n            /* audio format */\r\n            view.setUint16(20, this.formatTag, true);\r\n            /* channel count */\r\n            view.setUint16(22, this.channels, true);\r\n            /* sample rate */\r\n            view.setUint32(24, this.samplesPerSec, true);\r\n            /* byte rate (sample rate * block align) */\r\n            view.setUint32(28, this.avgBytesPerSec, true);\r\n            /* block align (channel count * bytes per sample) */\r\n            view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\r\n            /* bits per sample */\r\n            view.setUint16(34, this.bitsPerSample, true);\r\n            /* data chunk identifier */\r\n            this.setString(view, 36, \"data\");\r\n            /* data chunk length */\r\n            view.setUint32(40, 0, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the default input format.\r\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormatImpl} The default input format.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormatImpl {\r\n        return new AudioStreamFormatImpl();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio context appropriate to current browser\r\n     * @member AudioStreamFormatImpl.getAudioContext\r\n     * @function\r\n     * @public\r\n     * @returns {AudioContext} An audio context instance\r\n     */\r\n    /* eslint-disable */\r\n    public static getAudioContext(sampleRate?: number): AudioContext {\r\n        // Workaround for Speech SDK bug in Safari.\r\n        const AudioContext = (window as any).AudioContext // our preferred impl\r\n            || (window as any).webkitAudioContext // fallback, mostly when on Safari\r\n            || false; // could not find.\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n        if (!!AudioContext) {\r\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\r\n                return new AudioContext({ sampleRate });\r\n            } else {\r\n                return new AudioContext();\r\n            }\r\n        } else {\r\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\r\n        }\r\n    }\r\n    /* eslint-enable */\r\n\r\n    /**\r\n     * Closes the configuration object.\r\n     * @member AudioStreamFormatImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The format of the audio, valid values: 1 (PCM)\r\n     * @member AudioStreamFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: number;\r\n\r\n    /**\r\n     * The number of channels, valid values: 1 (Mono).\r\n     * @member AudioStreamFormatImpl.prototype.channels\r\n     * @function\r\n     * @public\r\n     */\r\n    public channels: number;\r\n\r\n    /**\r\n     * The sample rate, valid values: 16000.\r\n     * @member AudioStreamFormatImpl.prototype.samplesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public samplesPerSec: number;\r\n\r\n    /**\r\n     * The bits per sample, valid values: 16\r\n     * @member AudioStreamFormatImpl.prototype.b\r\n     * @function\r\n     * @public\r\n     */\r\n    public bitsPerSample: number;\r\n\r\n    /**\r\n     * Average bytes per second, usually calculated as nSamplesPerSec * nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.avgBytesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public avgBytesPerSec: number;\r\n\r\n    /**\r\n     * The size of a single frame, valid values: nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.blockAlign\r\n     * @function\r\n     * @public\r\n     */\r\n    public blockAlign: number;\r\n\r\n    public get header(): ArrayBuffer {\r\n        return this.privHeader;\r\n    }\r\n\r\n    protected setString(view: DataView, offset: number, str: string): void {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../../common/Error\";\r\nimport { AudioStreamFormat } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\ntype AudioDataTypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array;\r\n/**\r\n * Base audio player class\r\n * TODO: Plays only PCM for now.\r\n * @class\r\n */\r\nexport class BaseAudioPlayer {\r\n\r\n    private audioContext: AudioContext = null;\r\n    private gainNode: GainNode = null;\r\n    private audioFormat: AudioStreamFormatImpl;\r\n    private autoUpdateBufferTimer: any = 0;\r\n    private samples: Float32Array;\r\n    private startTime: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\r\n     */\r\n    public constructor(audioFormat?: AudioStreamFormat) {\r\n        if (audioFormat === undefined) {\r\n            audioFormat = AudioStreamFormat.getDefaultInputFormat();\r\n        }\r\n        this.init(audioFormat);\r\n    }\r\n\r\n    /**\r\n     * play Audio sample\r\n     * @param newAudioData audio data to be played.\r\n     */\r\n    public playAudioSample(newAudioData: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        try {\r\n            this.ensureInitializedContext();\r\n            const audioData = this.formatAudioData(newAudioData);\r\n            const newSamplesData = new Float32Array(this.samples.length + audioData.length);\r\n            newSamplesData.set(this.samples, 0);\r\n            newSamplesData.set(audioData, this.samples.length);\r\n            this.samples = newSamplesData;\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        } catch (e) {\r\n            if (!!err) {\r\n                err(e as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * stops audio and clears the buffers\r\n     */\r\n    public stopAudio(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.audioContext !== null) {\r\n            this.samples = new Float32Array();\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            clearInterval(this.autoUpdateBufferTimer);\r\n            this.audioContext.close().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.audioContext = null;\r\n        }\r\n    }\r\n\r\n    private init(audioFormat: AudioStreamFormat): void {\r\n        this.audioFormat = audioFormat as AudioStreamFormatImpl;\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private ensureInitializedContext(): void {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n            const timerPeriod = 200;\r\n            this.autoUpdateBufferTimer = setInterval((): void => {\r\n                this.updateAudioBuffer();\r\n            }, timerPeriod);\r\n        }\r\n    }\r\n\r\n    private createAudioContext(): void {\r\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\r\n        this.audioContext = AudioStreamFormatImpl.getAudioContext();\r\n\r\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\r\n        // to control the volume, not likely\r\n        this.gainNode = this.audioContext.createGain();\r\n        this.gainNode.gain.value = 1;\r\n        this.gainNode.connect(this.audioContext.destination);\r\n        this.startTime = this.audioContext.currentTime;\r\n    }\r\n\r\n    private formatAudioData(audioData: ArrayBuffer): Float32Array {\r\n        switch (this.audioFormat.bitsPerSample) {\r\n            case 8:\r\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\r\n            case 16:\r\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\r\n            case 32:\r\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\r\n            default:\r\n                throw new InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\r\n        }\r\n    }\r\n\r\n    private formatArrayBuffer(audioData: AudioDataTypedArray, maxValue: number): Float32Array {\r\n        const float32Data = new Float32Array(audioData.length);\r\n        for (let i = 0; i < audioData.length; i++) {\r\n            float32Data[i] = audioData[i] / maxValue;\r\n        }\r\n        return float32Data;\r\n    }\r\n\r\n    private updateAudioBuffer(): void {\r\n        if (this.samples.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const channelCount = this.audioFormat.channels;\r\n        const bufferSource = this.audioContext.createBufferSource();\r\n        const frameCount = this.samples.length / channelCount;\r\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\r\n\r\n        // TODO: Should we do the conversion in the pushAudioSample instead?\r\n        for (let channel = 0; channel < channelCount; channel++) {\r\n            // Fill in individual channel data\r\n            let channelOffset = channel;\r\n            const audioData = audioBuffer.getChannelData(channel);\r\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\r\n                audioData[i] = this.samples[channelOffset];\r\n            }\r\n        }\r\n\r\n        if (this.startTime < this.audioContext.currentTime) {\r\n            this.startTime = this.audioContext.currentTime;\r\n        }\r\n\r\n        bufferSource.buffer = audioBuffer;\r\n        bufferSource.connect(this.gainNode);\r\n        bufferSource.start(this.startTime);\r\n\r\n        // Make sure we play the next sample after the current one.\r\n        this.startTime += audioBuffer.duration;\r\n\r\n        // Clear the samples for the next pushed data.\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private async playAudio(audioData: ArrayBuffer): Promise<void> {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n        }\r\n        const source: AudioBufferSourceNode = this.audioContext.createBufferSource();\r\n        const destination: AudioDestinationNode = this.audioContext.destination;\r\n        await this.audioContext.decodeAudioData(audioData, (newBuffer: AudioBuffer): void => {\r\n            source.buffer = newBuffer;\r\n            source.connect(destination);\r\n            source.start(0);\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n /**\r\n  * An abstract base class that defines callback methods (read() and close()) for\r\n  * custom audio input streams).\r\n  * @class PullAudioInputStreamCallback\r\n  */\r\nexport abstract class PullAudioInputStreamCallback {\r\n\r\n    /**\r\n     * Reads data from audio input stream into the data buffer. The maximal number of bytes\r\n     * to be read is determined by the size of dataBuffer.\r\n     * @member PullAudioInputStreamCallback.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array to store the read data.\r\n     * @returns {number} the number of bytes have been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): number;\r\n\r\n    /**\r\n     * Closes the audio input stream.\r\n     * @member PullAudioInputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/**\r\n * An abstract base class that defines callback methods (write() and close()) for\r\n * custom audio output streams).\r\n * @class PushAudioOutputStreamCallback\r\n */\r\nexport abstract class PushAudioOutputStreamCallback {\r\n\r\n    /**\r\n     * Writes audio data into the data buffer.\r\n     * @member PushAudioOutputStreamCallback.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array that stores the audio data to write.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the audio output stream.\r\n     * @member PushAudioOutputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisAdapterBase } from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    createNoDashGuid,\r\n    Events,\r\n    IAudioDestination,\r\n    INumberDictionary\r\n} from \"../../common/Exports\";\r\nimport { AudioStreamFormat, IPlayer } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioFormatTag } from \"./AudioStreamFormat\";\r\n\r\nconst MediaDurationPlaceholderSeconds = 60 * 30;\r\n\r\nconst AudioFormatToMimeType: INumberDictionary<string> = {\r\n    [AudioFormatTag.PCM]: \"audio/wav\",\r\n    [AudioFormatTag.MuLaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.MP3]: \"audio/mpeg\",\r\n    [AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\r\n    [AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\r\n    [AudioFormatTag.ALaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.FLAC]: \"audio/flac\",\r\n};\r\n\r\n/**\r\n * Represents the speaker playback audio destination, which only works in browser.\r\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\r\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\r\n * @class SpeakerAudioDestination\r\n * Updated in version 1.17.0\r\n */\r\nexport class SpeakerAudioDestination implements IAudioDestination, IPlayer {\r\n    private readonly privId: string;\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privAudio: HTMLAudioElement;\r\n    private privMediaSource: MediaSource;\r\n    private privSourceBuffer: SourceBuffer;\r\n    private privPlaybackStarted: boolean = false;\r\n    private privAudioBuffer: ArrayBuffer[];\r\n    private privAppendingToBuffer: boolean = false;\r\n    private privMediaSourceOpened: boolean = false;\r\n    private privIsClosed: boolean;\r\n    private privIsPaused: boolean;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privBytesReceived: number = 0;\r\n\r\n    public constructor(audioDestinationId?: string) {\r\n        this.privId = audioDestinationId ? audioDestinationId : createNoDashGuid();\r\n        this.privIsPaused = false;\r\n        this.privIsClosed = false;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privAudioBuffer !== undefined) {\r\n            this.privAudioBuffer.push(buffer);\r\n            this.updateSourceBuffer().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            this.privAudioOutputStream.write(buffer);\r\n            this.privBytesReceived += buffer.byteLength;\r\n        }\r\n    }\r\n\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privIsClosed = true;\r\n        if (this.privSourceBuffer !== undefined) {\r\n            this.handleSourceBufferUpdateEnd().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined && typeof window !== \"undefined\") {\r\n            if ((this.privFormat.formatTag === AudioFormatTag.PCM || this.privFormat.formatTag === AudioFormatTag.MuLaw\r\n                || this.privFormat.formatTag === AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\"Play back is not supported for raw PCM, mulaw or alaw format without header.\");\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            } else {\r\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\r\n                this.privAudioOutputStream.read(receivedAudio).then((): void => {\r\n                    receivedAudio = SynthesisAdapterBase.addHeader(receivedAudio, this.privFormat);\r\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\r\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\r\n                    this.notifyPlayback().then((): void => {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    }, (error: string): void => {\r\n                        if (!!err) {\r\n                            err(error);\r\n                        }\r\n                    });\r\n                }, (error: string): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            // unsupported format, call onAudioEnd directly.\r\n            if (!!this.onAudioEnd) {\r\n                this.onAudioEnd(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (typeof (AudioContext) !== \"undefined\" || (typeof (window) !== \"undefined\" && typeof ((window as any).webkitAudioContext) !== \"undefined\")) {\r\n            this.privFormat = format as AudioOutputFormatImpl;\r\n            const mimeType: string = AudioFormatToMimeType[this.privFormat.formatTag];\r\n            if (mimeType === undefined) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    `Unknown mimeType for format ${AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\r\n\r\n            } else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\r\n                this.privAudio = new Audio();\r\n                this.privAudioBuffer = [];\r\n                this.privMediaSource = new MediaSource();\r\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\r\n                this.privAudio.load();\r\n                this.privMediaSource.onsourceopen = (): void => {\r\n                    this.privMediaSourceOpened = true;\r\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\r\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\r\n                    this.privSourceBuffer.onupdate = (): void => {\r\n                        this.updateSourceBuffer().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdateend = (): void => {\r\n                        this.handleSourceBufferUpdateEnd().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdatestart = (): void => {\r\n                        this.privAppendingToBuffer = false;\r\n                    };\r\n                };\r\n                this.updateSourceBuffer().catch((reason: string): void => {\r\n                    Events.instance.onEvent(new BackgroundEvent(reason));\r\n                });\r\n\r\n            } else {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    `Format ${AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\r\n                this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n                this.privAudioOutputStream.format = this.privFormat;\r\n                this.privAudio = new Audio();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get volume(): number {\r\n        return this.privAudio?.volume ?? -1;\r\n    }\r\n\r\n    public set volume(volume: number) {\r\n        if (!!this.privAudio) {\r\n            this.privAudio.volume = volume;\r\n        }\r\n    }\r\n\r\n    public mute(): void {\r\n        if (!!this.privAudio) {\r\n            this.privAudio.muted = true;\r\n        }\r\n    }\r\n\r\n    public unmute(): void {\r\n        if (!!this.privAudio) {\r\n            this.privAudio.muted = false;\r\n        }\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsClosed;\r\n    }\r\n\r\n    public get currentTime(): number {\r\n        if (this.privAudio !== undefined) {\r\n            return this.privAudio.currentTime;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.pause();\r\n            this.privIsPaused = true;\r\n        }\r\n    }\r\n\r\n    public resume(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.play().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.privIsPaused = false;\r\n        }\r\n    }\r\n\r\n    public onAudioStart: (sender: IPlayer) => void;\r\n\r\n    public onAudioEnd: (sender: IPlayer) => void;\r\n\r\n    public get internalAudio(): HTMLAudioElement {\r\n        return this.privAudio;\r\n    }\r\n\r\n    private async updateSourceBuffer(): Promise<void> {\r\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\r\n            this.privAppendingToBuffer = true;\r\n            const binary = this.privAudioBuffer.shift();\r\n            try {\r\n                this.privSourceBuffer.appendBuffer(binary);\r\n            } catch (error) {\r\n                this.privAudioBuffer.unshift(binary);\r\n                // eslint-disable-next-line no-console\r\n                console.log(\r\n                    \"buffer filled, pausing addition of binaries until space is made\");\r\n                return;\r\n            }\r\n            await this.notifyPlayback();\r\n        } else if (this.canEndStream()) {\r\n            await this.handleSourceBufferUpdateEnd();\r\n        }\r\n    }\r\n\r\n    private async handleSourceBufferUpdateEnd(): Promise<void> {\r\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\r\n            this.privMediaSource.endOfStream();\r\n            await this.notifyPlayback();\r\n        }\r\n    }\r\n\r\n    private async notifyPlayback(): Promise<void> {\r\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\r\n            this.privPlaybackStarted = true;\r\n            if (!!this.onAudioStart) {\r\n                this.onAudioStart(this);\r\n            }\r\n            this.privAudio.onended = (): void => {\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            };\r\n            if (!this.privIsPaused) {\r\n                await this.privAudio.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    private canEndStream(): boolean {\r\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\r\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\r\n    }\r\n\r\n    private sourceBufferAvailable(): boolean {\r\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AutoDetectSourceLanguagesOpenRangeOptionName } from \"../common.speech/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SourceLanguageConfig,\r\n} from \"./Exports\";\r\nimport { LanguageIdMode } from \"./LanguageIdMode\";\r\n\r\n/**\r\n * Language auto detect configuration.\r\n * @class AutoDetectSourceLanguageConfig\r\n * Added in version 1.13.0.\r\n */\r\nexport class AutoDetectSourceLanguageConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privLanguageIdMode: LanguageIdMode;\r\n\r\n    private constructor() {\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\r\n        this.privLanguageIdMode = LanguageIdMode.AtStart;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\r\n     * @function\r\n     * @public\r\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\r\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\r\n     */\r\n    public static fromOpenRange(): AutoDetectSourceLanguageConfig {\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, AutoDetectSourceLanguagesOpenRangeOptionName);\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\r\n     */\r\n    public static fromLanguages(languages: string[]): AutoDetectSourceLanguageConfig {\r\n        Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\r\n     * @function\r\n     * @public\r\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\r\n     */\r\n    public static fromSourceLanguageConfigs(configs: SourceLanguageConfig[]): AutoDetectSourceLanguageConfig {\r\n        if (configs.length < 1) {\r\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\r\n        }\r\n        const autoConfig = new AutoDetectSourceLanguageConfig();\r\n        const langs: string[] = [];\r\n        configs.forEach((config: SourceLanguageConfig): void => {\r\n            langs.push(config.language);\r\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\r\n                const customProperty = config.language + PropertyId.SpeechServiceConnection_EndpointId.toString();\r\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\r\n            }\r\n        });\r\n        autoConfig.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\r\n\r\n        return autoConfig;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets an auto detected language config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.prototype.mode\r\n     * @function\r\n     * @public\r\n     * @param {LanguageIdMode} mode LID mode desired.\r\n     * @summary Sets LID operation to desired mode\r\n     */\r\n    public set mode(mode: LanguageIdMode) {\r\n        if (mode === LanguageIdMode.Continuous) {\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, \"Continuous\");\r\n        } else { // LanguageIdMode.AtStart\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\r\n        }\r\n        this.privLanguageIdMode = mode;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class AutoDetectSourceLanguageResult\r\n */\r\nexport class AutoDetectSourceLanguageResult {\r\n\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n\r\n    private constructor(language: string, languageDetectionConfidence: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult} result - The recognition result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\r\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\r\n * @class BotFrameworkConfig\r\n */\r\nexport class BotFrameworkConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of BotFrameworkConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance with the provided subscription information.\r\n     * @member BotFrameworkConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     * resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromSubscription(subscription: string, region: string, botId?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance for the specified authorization token and region.\r\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\r\n     * caller must refresh it by setting the authorizationToken property on the corresponding\r\n     * DialogServiceConnector instance created with this config. The contents of configuration objects are copied\r\n     * when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\r\n     * original configuration's authorization token. Create a new configuration instance or set the\r\n     * SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\r\n     * further DialogServiceConnectors.\r\n     * @member BotFrameworkConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param authorizationToken The authorization token associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     * resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromAuthorizationToken(\r\n        authorizationToken: string, region: string, botId?: string\r\n    ): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\r\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\r\n     * property on the created BotFrameworkConfig instance.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\r\n     * wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\r\n     * wss://{host}.convai.speech.azure.us.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     * token must be set.\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     * resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromHost(\r\n        host: URL | string,\r\n        subscriptionKey?: string,\r\n        botId?: string): BotFrameworkConfig {\r\n\r\n        void botId;\r\n        Contracts.throwIfNullOrUndefined(host, \"host\");\r\n        const resolvedHost: URL = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\r\n        Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\r\n     * use the authorization token.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     * token must be set.\r\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports\";\r\nimport { CancellationDetailsBase } from \"./CancellationDetailsBase\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    RecognitionResult,\r\n    SpeechSynthesisResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetails\r\n */\r\nexport class CancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\r\n     * @member CancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\r\n     * @returns {CancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: RecognitionResult | SpeechSynthesisResult): CancellationDetails {\r\n        let reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (result instanceof RecognitionResult && !!result.json) {\r\n            const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n            reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\r\n        }\r\n\r\n        if (!!result.properties) {\r\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError]) as keyof typeof CancellationErrorCode];\r\n        }\r\n\r\n        return new CancellationDetails(reason, result.errorDetails || EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetailsBase\r\n */\r\nexport class CancellationDetailsBase {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - The error details, if provided.\r\n     */\r\n    protected constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationDetailsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member CancellationDetailsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get ErrorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines error code in case that CancellationReason is Error.\r\n * Added in version 1.1.0.\r\n */\r\nexport enum CancellationErrorCode {\r\n    /**\r\n     * Indicates that no error occurred during speech recognition.\r\n     */\r\n    NoError,\r\n\r\n    /**\r\n     * Indicates an authentication error.\r\n     */\r\n    AuthenticationFailure,\r\n\r\n    /**\r\n     * Indicates that one or more recognition parameters are invalid.\r\n     */\r\n    BadRequestParameters,\r\n\r\n    /**\r\n     * Indicates that the number of parallel requests exceeded the number of allowed\r\n     * concurrent transcriptions for the subscription.\r\n     */\r\n    TooManyRequests,\r\n\r\n    /**\r\n     * Indicates a connection error.\r\n     */\r\n    ConnectionFailure,\r\n\r\n    /**\r\n     * Indicates a time-out error when waiting for response from service.\r\n     */\r\n    ServiceTimeout,\r\n\r\n    /**\r\n     * Indicates that an error is returned by the service.\r\n     */\r\n    ServiceError,\r\n\r\n    /**\r\n     * Indicates an unexpected runtime error.\r\n     */\r\n    RuntimeError,\r\n\r\n    /**\r\n     * Indicates an quota overrun on existing key.\r\n     */\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationEventArgs,\r\n    CancellationReason,\r\n    RecognitionEventArgs\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines content of a CancellationEvent.\r\n * @class CancellationEventArgsBase\r\n */\r\nexport class CancellationEventArgsBase extends RecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(reason: CancellationReason, errorDetails: string,\r\n                       errorCode: CancellationErrorCode, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationEventArgsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful operation.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful operation, provides details of the occurred error.\r\n     * @member CancellationEventArgsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be canceled.\r\n * @class CancellationReason\r\n */\r\nexport enum CancellationReason {\r\n    /**\r\n     * Indicates that an error occurred during speech recognition.\r\n     * @member CancellationReason.Error\r\n     */\r\n    Error,\r\n\r\n    /**\r\n     * Indicates that the end of the audio stream was reached.\r\n     * @member CancellationReason.EndOfStream\r\n     */\r\n    EndOfStream,\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ServiceRecognizerBase,\r\n    SynthesisAdapterBase,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    ConnectionEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    IDetachable,\r\n    marshalPromiseToCallbacks,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectionMessageImpl\r\n} from \"./ConnectionMessage\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConnectionMessageEventArgs,\r\n    ConversationTranscriber,\r\n    Recognizer,\r\n    ServiceEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\r\n * By default, a Recognizer autonomously manages connection to service when needed.\r\n * The Connection class provides additional methods for users to explicitly open or close a connection and\r\n * to subscribe to connection status changes.\r\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\r\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\r\n * in advance before starting recognition on the Recognizer associated with this Connection.\r\n * If the Recognizer needs to connect or disconnect to service, it will\r\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\r\n * status via Connected/Disconnected events.\r\n * Added in version 1.2.1.\r\n */\r\nexport class Connection {\r\n    private privInternalData: ServiceRecognizerBase | SynthesisAdapterBase;\r\n    private privEventListener: IDetachable;\r\n    private privServiceEventListener: IDetachable;\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified recognizer.\r\n     * @param recognizer The recognizer associated with the connection.\r\n     * @return The Connection instance of the recognizer.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer | ConversationTranscriber): Connection {\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = recoBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified synthesizer.\r\n     * @param synthesizer The synthesizer associated with the connection.\r\n     * @return The Connection instance of the synthesizer.\r\n     */\r\n    public static fromSynthesizer(synthesizer: SpeechSynthesizer): Connection {\r\n        const synthBase: SynthesisAdapterBase = synthesizer.internalData as SynthesisAdapterBase;\r\n\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = synthBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Starts to set up connection to the service.\r\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\r\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     */\r\n    public openConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\r\n     *\r\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public closeConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\r\n        } else {\r\n            marshalPromiseToCallbacks(this.privInternalData.disconnect(), cb, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends a parameter in a message to service.\r\n     * Added in version 1.12.1.\r\n     * @param path The path of the network message.\r\n     * @param propertyName Name of the property\r\n     * @param propertyValue Value of the property. This is a json string.\r\n     */\r\n    public setMessageProperty(path: string, propertyName: string, propertyValue: string | object): void {\r\n        Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\r\n\r\n        if (this.privInternalData instanceof ServiceRecognizerBase) {\r\n            if (path.toLowerCase() !== \"speech.context\") {\r\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\r\n            } else {\r\n                this.privInternalData.speechContext.setSection(propertyName, propertyValue);\r\n            }\r\n        } else if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            if (path.toLowerCase() !== \"synthesis.context\") {\r\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\r\n            } else {\r\n                this.privInternalData.synthesisContext.setSection(propertyName, propertyValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the speech service.\r\n     * Added in version 1.13.0.\r\n     * @param path The WebSocket path of the message\r\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\r\n     * @param success A callback to indicate success.\r\n     * @param error A callback to indicate an error.\r\n     */\r\n    public sendMessageAsync(path: string, payload: string | ArrayBuffer, success?: () => void, error?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(path, payload), success, error);\r\n    }\r\n\r\n    /**\r\n     * Any message from service that is not being processed by any other top level recognizers.\r\n     *\r\n     * Will be removed in 2.0.\r\n     */\r\n    public receivedServiceMessage: (args: ServiceEventArgs) => void;\r\n\r\n    /**\r\n     * Any message received from the Speech Service.\r\n     */\r\n    public messageReceived: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * Any message sent to the Speech Service.\r\n     */\r\n    public messageSent: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * The Connected event to indicate that the recognizer is connected to service.\r\n     */\r\n    public connected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * The Disconnected event to indicate that the recognizer is disconnected from service.\r\n     */\r\n    public disconnected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     */\r\n    public close(): void {\r\n        /* eslint-disable no-empty */\r\n    }\r\n\r\n    private setupEvents(): void {\r\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                if (!!this.connected) {\r\n                    this.connected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                if (!!this.disconnected) {\r\n                    this.disconnected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\r\n                if (!!this.messageSent) {\r\n                    this.messageSent(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageSentEvent).message)));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\r\n                if (!!this.messageReceived) {\r\n                    this.messageReceived(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageReceivedEvent).message)));\r\n                }\r\n            }\r\n        });\r\n\r\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e: ServiceEvent): void => {\r\n            if (!!this.receivedServiceMessage) {\r\n                this.receivedServiceMessage(new ServiceEventArgs(e.jsonString, e.name));\r\n            }\r\n        });\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for connection events like Connected/Disconnected.\r\n * Added in version 1.2.0\r\n */\r\nexport class ConnectionEventArgs extends SessionEventArgs {\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ConnectionMessage as IntConnectionMessage,\r\n    MessageType\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyCollection\r\n} from \"./PropertyCollection\";\r\nimport { PropertyId } from \"./PropertyId\";\r\n\r\n/**\r\n * ConnectionMessage represents implementation specific messages sent to and received from\r\n * the speech service. These messages are provided for debugging purposes and should not\r\n * be used for production use cases with the Azure Cognitive Services Speech Service.\r\n * Messages sent to and received from the Speech Service are subject to change without\r\n * notice. This includes message contents, headers, payloads, ordering, etc.\r\n * Added in version 1.11.0.\r\n */\r\nexport abstract class ConnectionMessage {\r\n    /**\r\n     * The message path.\r\n     */\r\n    public abstract get path(): string;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public abstract get isTextMessage(): boolean;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public abstract get isBinaryMessage(): boolean;\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public abstract get TextMessage(): string;\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public abstract get binaryMessage(): ArrayBuffer;\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public abstract get properties(): PropertyCollection;\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public abstract toString(): string;\r\n}\r\n\r\nexport class ConnectionMessageImpl {\r\n\r\n    private privConnectionMessage: IntConnectionMessage;\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor(message: IntConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n        this.privProperties = new PropertyCollection();\r\n        if (!!this.privConnectionMessage.headers[HeaderNames.ConnectionId]) {\r\n            this.privProperties.setProperty(PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames.ConnectionId]);\r\n        }\r\n\r\n        Object.keys(this.privConnectionMessage.headers).forEach((header: string): void => {\r\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The message path.\r\n     */\r\n    public get path(): string {\r\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key: string): boolean => key.toLowerCase() === \"path\".toLowerCase())];\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public get isTextMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Text;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public get isBinaryMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Binary;\r\n    }\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public get TextMessage(): string {\r\n        return this.privConnectionMessage.textBody;\r\n    }\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public get binaryMessage(): ArrayBuffer {\r\n        return this.privConnectionMessage.binaryBody;\r\n    }\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public toString(): string {\r\n        return \"\";\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ConnectionMessage\r\n} from \"./Exports\";\r\n\r\nexport class ConnectionMessageEventArgs {\r\n\r\n    private privConnectionMessage: ConnectionMessage;\r\n\r\n    public constructor(message: ConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\r\n     */\r\n    public get message(): ConnectionMessage {\r\n        return this.privConnectionMessage;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message event.\r\n     */\r\n    public toString(): string {\r\n        return \"Message: \" + this.privConnectionMessage.toString();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class Contracts\r\n * @private\r\n */\r\nexport class Contracts {\r\n    public static throwIfNullOrUndefined(param: any, name: string): void {\r\n        if (param === undefined || param === null) {\r\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNull(param: any, name: string): void {\r\n        if (param === null) {\r\n            throw new Error(\"throwIfNull:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrWhitespace(param: string, name: string): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).trim().length < 1) {\r\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrTooLong(param: string, name: string, maxLength: number): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).length > maxLength) {\r\n            throw new Error(\"throwIfNullOrTooLong:\" + name + \" (more than \" + maxLength.toString() + \" characters)\");\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrTooShort(param: string, name: string, minLength: number): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).length < minLength) {\r\n            throw new Error(\"throwIfNullOrTooShort:\" + name + \" (less than \" + minLength.toString() + \" characters)\");\r\n        }\r\n    }\r\n\r\n    public static throwIfDisposed(isDisposed: boolean): void {\r\n        if (isDisposed) {\r\n            throw new Error(\"the object is already disposed\");\r\n        }\r\n    }\r\n\r\n    public static throwIfArrayEmptyOrWhitespace(array: string[], name: string): void {\r\n        Contracts.throwIfNullOrUndefined(array, name);\r\n\r\n        if (array.length === 0) {\r\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\r\n        }\r\n\r\n        for (const item of array) {\r\n            Contracts.throwIfNullOrWhitespace(item, name);\r\n        }\r\n    }\r\n\r\n    public static throwIfFileDoesNotExist(param: string, name: string): void {\r\n        Contracts.throwIfNullOrWhitespace(param, name);\r\n\r\n        // TODO check for file existence.\r\n    }\r\n\r\n    public static throwIfNotUndefined(param: any, name: string): void {\r\n        if (param !== undefined) {\r\n            throw new Error(\"throwIfNotUndefined:\" + name);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\n/**\r\n * Defines content of a RecognitionErrorEvent.\r\n * @class ConversationTranscriptionCanceledEventArgs\r\n */\r\nexport class ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\r\n * @class CustomCommandsConfig\r\n */\r\nexport class CustomCommandsConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of CustomCommandsConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified subscription and region.\r\n     * @member CustomCommandsConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new bot framework config.\r\n     */\r\n    public static fromSubscription(applicationId: string, subscription: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member CustomCommandsConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param authorizationToken The authorization token associated with the application.\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new speech commands config.\r\n     */\r\n    public static fromAuthorizationToken(applicationId: string, authorizationToken: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    public set applicationId(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.setProperty(PropertyId.Conversation_ApplicationId, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to get.\r\n     */\r\n    public get applicationId(): string {\r\n        return this.getProperty(PropertyId.Conversation_ApplicationId);\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { ConsoleLoggingListener } from \"../common.browser/Exports\";\r\nimport { Events } from \"../common/Exports\";\r\nimport { LogLevel } from \"./LogLevel\";\r\n\r\n/**\r\n * Defines diagnostics API for managing console output\r\n * Added in version 1.21.0\r\n */\r\nexport class Diagnostics {\r\n    private static privListener: ConsoleLoggingListener = undefined;\r\n\r\n    public static SetLoggingLevel(logLevel: LogLevel): void {\r\n        this.privListener = new ConsoleLoggingListener(logLevel);\r\n        Events.instance.attachConsoleListener(this.privListener);\r\n    }\r\n\r\n    public static StartConsoleOutput(): void {\r\n        if (!!this.privListener) {\r\n            this.privListener.enableConsoleOutput = true;\r\n        }\r\n    }\r\n\r\n    public static StopConsoleOutput(): void {\r\n        if (!!this.privListener) {\r\n            this.privListener.enableConsoleOutput = false;\r\n        }\r\n    }\r\n\r\n    public static SetLogOutputPath(path: string): void {\r\n        if (typeof window === \"undefined\") {\r\n            if (!!this.privListener) {\r\n                this.privListener.logPath = path;\r\n            }\r\n        } else {\r\n            throw new Error(\"File system logging not available in browser.\");\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { Contracts } from \"./Contracts\";\r\nimport { PropertyCollection, PropertyId, ServicePropertyChannel, SpeechConfigImpl } from \"./Exports\";\r\nimport { OutputFormat } from \"./OutputFormat\";\r\n\r\n/**\r\n * Class that defines base configurations for dialog service connector\r\n * @class DialogServiceConfig\r\n */\r\nexport abstract class DialogServiceConfig {\r\n\r\n    /**\r\n     * Creates an instance of DialogService config.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string | PropertyId, def?: string): string;\r\n\r\n    /**\r\n     * @member DialogServiceConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param porxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to use for recognition.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public set applicationId(value: string) { }\r\n\r\n    public static get DialogTypes(): { BotFramework: string; CustomCommands: string } {\r\n        return {\r\n            BotFramework: \"bot_framework\",\r\n            CustomCommands: \"custom_commands\"\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Dialog Service configuration.\r\n * @class DialogServiceConfigImpl\r\n */\r\nexport class DialogServiceConfigImpl extends DialogServiceConfig {\r\n\r\n    private privSpeechConfig: SpeechConfigImpl;\r\n\r\n    /**\r\n     * Creates an instance of dialogService config.\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechConfig = new SpeechConfigImpl();\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member DialogServiceConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechConfig.properties;\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechConfig.speechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to set.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechConfig.speechRecognitionLanguage = value;\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return this.privSpeechConfig.outputFormat;\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechConfig.outputFormat = value;\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to set.\r\n     * @param {string} value - The value.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechConfig.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to get.\r\n     * @param {string} def - The default value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n        void def;\r\n        return this.privSpeechConfig.getProperty(name);\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName?: string, proxyPassword?: string): void {\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\r\n        if (proxyUserName) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\r\n        }\r\n        if (proxyPassword) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\r\n        }\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        void channel;\r\n        this.privSpeechConfig.setServiceProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member DialogServiceConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { DialogConnectionFactory } from \"../common.speech/DialogConnectorFactory\";\r\nimport {\r\n    DialogServiceAdapter,\r\n    IAgentConfig,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport { ActivityReceivedEventArgs } from \"./ActivityReceivedEventArgs\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult\r\n} from \"./Exports\";\r\nimport { PropertyId } from \"./PropertyId\";\r\nimport { TurnStatusReceivedEventArgs } from \"./TurnStatusReceivedEventArgs\";\r\n\r\n/**\r\n * Dialog Service Connector\r\n * @class DialogServiceConnector\r\n */\r\nexport class DialogServiceConnector extends Recognizer {\r\n    private privIsDisposed: boolean;\r\n    private isTurnComplete: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the DialogServiceConnector.\r\n     * @constructor\r\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     */\r\n    public constructor(dialogConfig: DialogServiceConfig, audioConfig?: AudioConfig) {\r\n        const dialogServiceConfigImpl = dialogConfig as DialogServiceConfigImpl;\r\n        Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\r\n\r\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectionFactory());\r\n\r\n        this.isTurnComplete = true;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\r\n\r\n        const agentConfig = this.buildAgentConfig();\r\n        this.privReco.agentConfig.set(agentConfig);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member DialogServiceConnector.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member DialogServiceConfig.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member DialogServiceConnector.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: DialogServiceConnector, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event activityReceived signals that an activity has been received.\r\n     * @member DialogServiceConnector.prototype.activityReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public activityReceived: (sender: DialogServiceConnector, event: ActivityReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * The event turnStatusReceived signals that a turn status message has been received. These messages are\r\n     * associated with both an interaction and a conversation. They are used to notify the client in the event\r\n     * of an interaction failure with the dialog backend, e.g. in the event of a network issue, timeout, crash,\r\n     * or other problem.\r\n     * @member DialogServiceConnector.prototype.turnStatusReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public turnStatusReceived: (sender: DialogServiceConnector, event: TurnStatusReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * Starts a connection to the service.\r\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     * @member DialogServiceConnector.prototype.connect\r\n     * @function\r\n     * @public\r\n     */\r\n    public connect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\r\n     *\r\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public disconnect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.disconnect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Sets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this DialogServiceConnector.\r\n     * @member DialogServiceConnector.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /** Gets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be empty\r\n     */\r\n    public get speechActivityTemplate(): string {\r\n        return this.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n    }\r\n\r\n    /** Sets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be null or empty.\r\n     * Note: it has to be a valid Json object.\r\n     */\r\n    public set speechActivityTemplate(speechActivityTemplate: string) {\r\n        this.properties.setProperty(PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and stops after the first utterance is recognized.\r\n     * @member DialogServiceConnector.prototype.listenOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the reco has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public listenOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        if (this.isTurnComplete) {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            const callbackHolder = async (): Promise<SpeechRecognitionResult> => {\r\n                await this.privReco.connect();\r\n                await this.implRecognizerStop();\r\n                this.isTurnComplete = false;\r\n\r\n                const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n                await this.privReco.recognize(RecognitionMode.Conversation, ret.resolve, ret.reject);\r\n\r\n                const e: SpeechRecognitionResult = await ret.promise;\r\n                await this.implRecognizerStop();\r\n\r\n                return e;\r\n            };\r\n\r\n            const retPromise: Promise<SpeechRecognitionResult> = callbackHolder();\r\n\r\n            retPromise.catch((): void => {\r\n                // Destroy the recognizer.\r\n                // We've done all we can here.\r\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                this.dispose(true).catch((): void => { });\r\n            });\r\n\r\n            marshalPromiseToCallbacks(retPromise.finally((): void => {\r\n                this.isTurnComplete = true;\r\n            }), cb, err);\r\n        }\r\n    }\r\n\r\n    public sendActivityAsync(activity: string, cb?: () => void, errCb?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((this.privReco as DialogServiceAdapter).sendMessage(activity), cb, errCb);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member DialogServiceConnector.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privIsDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privIsDisposed = true;\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private buildAgentConfig(): IAgentConfig {\r\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\r\n\r\n        return {\r\n            botInfo: {\r\n                commType: communicationType,\r\n                commandsCulture: undefined,\r\n                connectionId: this.properties.getProperty(PropertyId.Conversation_Agent_Connection_Id),\r\n                conversationId: this.properties.getProperty(PropertyId.Conversation_Conversation_Id, undefined),\r\n                fromId: this.properties.getProperty(PropertyId.Conversation_From_Id, undefined),\r\n                ttsAudioFormat: this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\r\n            },\r\n            version: 0.2\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport { AudioConfig } from \"./Audio/AudioConfig\";\r\nexport { AudioStreamFormat, AudioFormatTag } from \"./Audio/AudioStreamFormat\";\r\nexport { AudioInputStream, PullAudioInputStream, PushAudioInputStream } from \"./Audio/AudioInputStream\";\r\nexport { AudioOutputStream, PullAudioOutputStream, PushAudioOutputStream} from \"./Audio/AudioOutputStream\";\r\nexport { CancellationReason } from \"./CancellationReason\";\r\nexport { PullAudioInputStreamCallback } from \"./Audio/PullAudioInputStreamCallback\";\r\nexport { PushAudioOutputStreamCallback } from \"./Audio/PushAudioOutputStreamCallback\";\r\nexport { KeywordRecognitionModel } from \"./KeywordRecognitionModel\";\r\nexport { SessionEventArgs } from \"./SessionEventArgs\";\r\nexport { RecognitionEventArgs } from \"./RecognitionEventArgs\";\r\nexport { OutputFormat } from \"./OutputFormat\";\r\nexport { IntentRecognitionEventArgs } from \"./IntentRecognitionEventArgs\";\r\nexport { RecognitionResult } from \"./RecognitionResult\";\r\nexport { SpeechRecognitionResult } from \"./SpeechRecognitionResult\";\r\nexport { IntentRecognitionResult } from \"./IntentRecognitionResult\";\r\nexport { LanguageUnderstandingModel } from \"./LanguageUnderstandingModel\";\r\nexport { SpeechRecognitionEventArgs, ConversationTranscriptionEventArgs } from \"./SpeechRecognitionEventArgs\";\r\nexport { SpeechRecognitionCanceledEventArgs } from \"./SpeechRecognitionCanceledEventArgs\";\r\nexport { TranslationRecognitionEventArgs } from \"./TranslationRecognitionEventArgs\";\r\nexport { TranslationSynthesisEventArgs } from \"./TranslationSynthesisEventArgs\";\r\nexport { TranslationRecognitionResult } from \"./TranslationRecognitionResult\";\r\nexport { TranslationSynthesisResult } from \"./TranslationSynthesisResult\";\r\nexport { ResultReason } from \"./ResultReason\";\r\nexport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\nexport { SpeechTranslationConfig, SpeechTranslationConfigImpl } from \"./SpeechTranslationConfig\";\r\nexport { PropertyCollection } from \"./PropertyCollection\";\r\nexport { PropertyId } from \"./PropertyId\";\r\nexport { Recognizer } from \"./Recognizer\";\r\nexport { SpeechRecognizer } from \"./SpeechRecognizer\";\r\nexport { IntentRecognizer } from \"./IntentRecognizer\";\r\nexport { VoiceProfileType } from \"./VoiceProfileType\";\r\nexport { TranslationRecognizer } from \"./TranslationRecognizer\";\r\nexport { Translations } from \"./Translations\";\r\nexport { NoMatchReason } from \"./NoMatchReason\";\r\nexport { NoMatchDetails } from \"./NoMatchDetails\";\r\nexport { TranslationRecognitionCanceledEventArgs } from \"./TranslationRecognitionCanceledEventArgs\";\r\nexport { IntentRecognitionCanceledEventArgs } from \"./IntentRecognitionCanceledEventArgs\";\r\nexport { CancellationDetailsBase } from \"./CancellationDetailsBase\";\r\nexport { CancellationDetails } from \"./CancellationDetails\";\r\nexport { CancellationErrorCode } from \"./CancellationErrorCodes\";\r\nexport { ConnectionEventArgs } from \"./ConnectionEventArgs\";\r\nexport { ServiceEventArgs } from \"./ServiceEventArgs\";\r\nexport { Connection } from \"./Connection\";\r\nexport { PhraseListGrammar } from \"./PhraseListGrammar\";\r\nexport { DialogServiceConfig } from \"./DialogServiceConfig\";\r\nexport { BotFrameworkConfig } from \"./BotFrameworkConfig\";\r\nexport { CustomCommandsConfig } from \"./CustomCommandsConfig\";\r\nexport { DialogServiceConnector } from \"./DialogServiceConnector\";\r\nexport { ActivityReceivedEventArgs } from \"./ActivityReceivedEventArgs\";\r\nexport { TurnStatusReceivedEventArgs } from \"./TurnStatusReceivedEventArgs\";\r\nexport { ServicePropertyChannel } from \"./ServicePropertyChannel\";\r\nexport { ProfanityOption } from \"./ProfanityOption\";\r\nexport { BaseAudioPlayer } from \"./Audio/BaseAudioPlayer\";\r\nexport { ConnectionMessageEventArgs } from \"./ConnectionMessageEventArgs\";\r\nexport { ConnectionMessage } from \"./ConnectionMessage\";\r\nexport { VoiceProfile } from \"./VoiceProfile\";\r\nexport { VoiceProfileEnrollmentResult, VoiceProfileEnrollmentCancellationDetails } from \"./VoiceProfileEnrollmentResult\";\r\nexport { VoiceProfileResult, VoiceProfileCancellationDetails } from \"./VoiceProfileResult\";\r\nexport { VoiceProfilePhraseResult } from \"./VoiceProfilePhraseResult\";\r\nexport { VoiceProfileClient } from \"./VoiceProfileClient\";\r\nexport { SpeakerRecognizer } from \"./SpeakerRecognizer\";\r\nexport { SpeakerIdentificationModel } from \"./SpeakerIdentificationModel\";\r\nexport { SpeakerVerificationModel } from \"./SpeakerVerificationModel\";\r\nexport { AutoDetectSourceLanguageConfig } from \"./AutoDetectSourceLanguageConfig\";\r\nexport { AutoDetectSourceLanguageResult } from \"./AutoDetectSourceLanguageResult\";\r\nexport { SourceLanguageConfig } from \"./SourceLanguageConfig\";\r\nexport { SpeakerRecognitionResult, SpeakerRecognitionResultType, SpeakerRecognitionCancellationDetails } from \"./SpeakerRecognitionResult\";\r\nexport { Conversation,\r\n    ConversationExpirationEventArgs,\r\n    ConversationInfo,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslationResult,\r\n    ConversationTranslator,\r\n    ConversationTranscriber,\r\n    IParticipant,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    User,\r\n    VoiceSignature\r\n    } from \"./Transcription/Exports\";\r\nexport { SpeechSynthesisOutputFormat } from \"./SpeechSynthesisOutputFormat\";\r\nexport { SpeechSynthesizer } from \"./SpeechSynthesizer\";\r\nexport { SynthesisResult } from \"./SynthesisResult\";\r\nexport { SpeechSynthesisResult } from \"./SpeechSynthesisResult\";\r\nexport { SpeechSynthesisEventArgs } from \"./SpeechSynthesisEventArgs\";\r\nexport { SpeechSynthesisWordBoundaryEventArgs } from \"./SpeechSynthesisWordBoundaryEventArgs\";\r\nexport { SpeechSynthesisBookmarkEventArgs } from \"./SpeechSynthesisBookmarkEventArgs\";\r\nexport { SpeechSynthesisVisemeEventArgs } from \"./SpeechSynthesisVisemeEventArgs\";\r\nexport { SpeechSynthesisBoundaryType } from \"./SpeechSynthesisBoundaryType\";\r\nexport { SynthesisVoicesResult } from \"./SynthesisVoicesResult\";\r\nexport { VoiceInfo } from \"./VoiceInfo\";\r\nexport { IPlayer } from \"./Audio/IPlayer\";\r\nexport { SpeakerAudioDestination } from \"./Audio/SpeakerAudioDestination\";\r\nexport { CancellationEventArgs } from \"./CancellationEventArgs\";\r\nexport { ConversationTranscriptionCanceledEventArgs } from \"./ConversationTranscriptionCanceledEventArgs\";\r\nexport { PronunciationAssessmentGradingSystem } from \"./PronunciationAssessmentGradingSystem\";\r\nexport { PronunciationAssessmentGranularity } from \"./PronunciationAssessmentGranularity\";\r\nexport { PronunciationAssessmentConfig } from \"./PronunciationAssessmentConfig\";\r\nexport { PronunciationAssessmentResult } from \"./PronunciationAssessmentResult\";\r\nexport { LanguageIdMode } from \"./LanguageIdMode\";\r\nexport { Diagnostics } from \"./Diagnostics\";\r\nexport { LogLevel } from \"./LogLevel\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationEventArgs } from \"./CancellationEventArgs\";\r\nimport { CancellationErrorCode, CancellationReason, IntentRecognitionEventArgs, IntentRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Define payload of intent recognition canceled result events.\r\n * @class IntentRecognitionCanceledEventArgs\r\n */\r\nexport class IntentRecognitionCanceledEventArgs extends IntentRecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} result - The result of the intent recognition.\r\n     * @param {string} offset - The offset.\r\n     * @param {IntentRecognitionResult} sessionId - The session id.\r\n     */\r\n    public constructor(\r\n        reason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result?: IntentRecognitionResult,\r\n        offset?: number,\r\n        sessionId?: string) {\r\n        super(result, offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IntentRecognitionResult, RecognitionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result event arguments.\r\n * @class\r\n */\r\nexport class IntentRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: IntentRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param result - The result of the intent recognition.\r\n     * @param offset - The offset.\r\n     * @param sessionId - The session id.\r\n     */\r\n    public constructor(result: IntentRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Represents the intent recognition result.\r\n     * @member IntentRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\r\n     */\r\n    public get result(): IntentRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result.\r\n * @class\r\n */\r\nexport class IntentRecognitionResult extends SpeechRecognitionResult {\r\n    private privIntentId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param intentId - The intent id.\r\n     * @param resultId - The result id.\r\n     * @param reason - The reason.\r\n     * @param text - The recognized text.\r\n     * @param duration - The duration.\r\n     * @param offset - The offset into the stream.\r\n     * @param language - Primary Language detected, if provided.\r\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param errorDetails - Error details, if provided.\r\n     * @param json - Additional Json, if provided.\r\n     * @param properties - Additional properties, if provided.\r\n     */\r\n    public constructor(intentId?: string, resultId?: string, reason?: ResultReason, text?: string,\r\n                duration?: number, offset?: number, language?: string, languageDetectionConfidence?: string,\r\n                errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privIntentId = intentId;\r\n    }\r\n\r\n    /**\r\n     * A String that represents the intent identifier being recognized.\r\n     * @member IntentRecognitionResult.prototype.intentId\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the intent identifier being recognized.\r\n     */\r\n    public get intentId(): string {\r\n        return this.privIntentId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AddedLmIntent,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    IntentConnectionFactory,\r\n    IntentServiceRecognizer,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    KeywordRecognitionModel,\r\n    LanguageUnderstandingModel,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechConfig,\r\n} from \"./Exports\";\r\nimport { LanguageUnderstandingModelImpl } from \"./LanguageUnderstandingModel\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Intent recognizer.\r\n * @class\r\n */\r\nexport class IntentRecognizer extends Recognizer {\r\n    private privDisposedIntentRecognizer: boolean;\r\n    private privAddedIntents: string[][];\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent };\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n\r\n    /**\r\n     * Initializes an instance of the IntentRecognizer.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\r\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const configImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new IntentConnectionFactory());\r\n        this.privAddedIntents = [];\r\n        this.privAddedLmIntents = {};\r\n\r\n        this.privDisposedIntentRecognizer = false;\r\n        this.privProperties = configImpl.properties;\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member IntentRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: IntentRecognizer, event: IntentRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} the spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this IntentRecognizer.\r\n     * @member IntentRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their\r\n     * values defined for this IntentRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts intent recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text and intent as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     * so it is suitable only for single shot recognition like command or query.\r\n     * For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: IntentRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous intent recognition.\r\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     * This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     * This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a phrase that should be recognized as intent.\r\n     * @member IntentRecognizer.prototype.addIntent\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\r\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\r\n     */\r\n    public addIntent(simplePhrase: string, intentId?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\r\n\r\n        this.privAddedIntents.push([intentId, simplePhrase]);\r\n    }\r\n\r\n    /**\r\n     * Adds an intent from Language Understanding service for recognition.\r\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent\r\n     * to be recognized. Ignored if intentName is empty.\r\n     * @param {string} model - The intent model from Language Understanding service.\r\n     * @param {string} intentName - The intent name defined in the intent model. If it\r\n     * is empty, all intent names defined in the model will be added.\r\n     */\r\n    public addIntentWithLanguageModel(intentId: string, model: LanguageUnderstandingModel, intentName?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privAddedLmIntents[intentId] = new AddedLmIntent(modelImpl, intentName);\r\n    }\r\n\r\n    /**\r\n     * @summary Adds all intents from the specified Language Understanding Model.\r\n     * @member IntentRecognizer.prototype.addAllIntents\r\n     * @function\r\n     * @public\r\n     * @function\r\n     * @public\r\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\r\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\r\n     */\r\n    public addAllIntents(model: LanguageUnderstandingModel, intentId?: string): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privUmbrellaIntent = new AddedLmIntent(modelImpl, intentId);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member IntentRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedIntentRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedIntentRecognizer = true;\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    private buildSpeechContext(): IIntentContext {\r\n        let appId: string;\r\n        let region: string;\r\n        let subscriptionKey: string;\r\n        const refGrammers: string[] = [];\r\n\r\n        if (undefined !== this.privUmbrellaIntent) {\r\n            appId = this.privUmbrellaIntent.modelImpl.appId;\r\n            region = this.privUmbrellaIntent.modelImpl.region;\r\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\r\n        }\r\n\r\n        // Build the reference grammer array.\r\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\r\n            const addedLmIntent: AddedLmIntent = this.privAddedLmIntents[intentId];\r\n\r\n            // validate all the same model, region, and key...\r\n            if (appId === undefined) {\r\n                appId = addedLmIntent.modelImpl.appId;\r\n            } else {\r\n                if (appId !== addedLmIntent.modelImpl.appId) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model\");\r\n                }\r\n            }\r\n\r\n            if (region === undefined) {\r\n                region = addedLmIntent.modelImpl.region;\r\n            } else {\r\n                if (region !== addedLmIntent.modelImpl.region) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\r\n                }\r\n            }\r\n\r\n            if (subscriptionKey === undefined) {\r\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\r\n            } else {\r\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\r\n                    throw new Error(\"Intents must all use the same subscription key\");\r\n                }\r\n            }\r\n\r\n            const grammer: string = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\r\n            refGrammers.push(grammer);\r\n        }\r\n\r\n        return {\r\n            Intent: {\r\n                id: appId,\r\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\r\n                provider: \"LUIS\",\r\n            },\r\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\r\n        };\r\n    }\r\n}\r\n\r\ninterface IIntentContext {\r\n    Intent: {\r\n        id: string;\r\n        key: string;\r\n        provider: string;\r\n    };\r\n    ReferenceGrammars: string[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     * Note, the file can point to a zip file in which case the model\r\n     * will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Language Identification mode\r\n * @class LanguageIdMode\r\n */\r\nexport enum LanguageIdMode {\r\n\r\n    /**\r\n     * Detect language at audio start\r\n     * @member LanguageIdMode.AtStart\r\n     */\r\n    AtStart,\r\n\r\n    /**\r\n     * Continuously detect language\r\n     * @member LanguageIdMode.Continuous\r\n     */\r\n    Continuous,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Language understanding model\r\n * @class LanguageUnderstandingModel\r\n */\r\nexport class LanguageUnderstandingModel {\r\n    /**\r\n     * Creates and initializes a new instance\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the specified endpoint.\r\n     * @member LanguageUnderstandingModel.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromEndpoint(uri: URL): LanguageUnderstandingModel {\r\n        Contracts.throwIfNull(uri, \"uri\");\r\n        Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        // Need to extract the app ID from the URL.\r\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\r\n\r\n        // Start tearing the string apart.\r\n\r\n        // region can be extracted from the host name.\r\n        const firstDot: number = uri.host.indexOf(\".\");\r\n        if (-1 === firstDot) {\r\n            throw new Error(\"Could not determine region from endpoint\");\r\n        }\r\n        langModelImp.region = uri.host.substr(0, firstDot);\r\n\r\n        // Now the app ID.\r\n\r\n        const lastSegment: number = uri.pathname.lastIndexOf(\"/\") + 1;\r\n        if (-1 === lastSegment) {\r\n            throw new Error(\"Could not determine appId from endpoint\");\r\n        }\r\n\r\n        langModelImp.appId = uri.pathname.substr(lastSegment);\r\n\r\n        // And finally the key.\r\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\r\n        if (undefined === langModelImp.subscriptionKey) {\r\n            throw new Error(\"Could not determine subscription key from endpoint\");\r\n        }\r\n\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the application id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromAppId\r\n     * @function\r\n     * @public\r\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromAppId(appId: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates a language understanding model using hostname, subscription key and application\r\n     * id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - A String that represents the subscription key of\r\n     * Language Understanding service.\r\n     * @param {string} appId - A String that represents the application id of Language\r\n     * Understanding service.\r\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\r\n     * of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, appId: string, region: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        langModelImp.region = region;\r\n        langModelImp.subscriptionKey = subscriptionKey;\r\n        return langModelImp;\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @class LanguageUnderstandingModelImpl\r\n */\r\nexport class LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\r\n    public appId: string;\r\n    public region: string;\r\n    public subscriptionKey: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     * result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might not be recognized.\r\n * @class NoMatchReason\r\n */\r\nexport enum NoMatchReason {\r\n\r\n    /**\r\n     * Indicates that speech was detected, but not recognized.\r\n     * @member NoMatchReason.NotRecognized\r\n     */\r\n    NotRecognized,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only silence,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialSilenceTimeout\r\n     */\r\n    InitialSilenceTimeout,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only noise,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialBabbleTimeout\r\n     */\r\n    InitialBabbleTimeout,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define Speech Recognizer output formats.\r\n * @class OutputFormat\r\n */\r\nexport enum OutputFormat {\r\n    /**\r\n     * @member OutputFormat.Simple\r\n     */\r\n    Simple = 0,\r\n\r\n    /**\r\n     * @member OutputFormat.Detailed\r\n     */\r\n    Detailed,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    ConversationTranscriber,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer | ConversationTranscriber): PhraseListGrammar {\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Profanity option.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ProfanityOption {\r\n    Masked = 0,\r\n    Removed = 1,\r\n    Raw = 2\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\ninterface PronunciationAssessmentJSON {\r\n    referenceText: string;\r\n    gradingSystem: string;\r\n    granularity: string;\r\n    phonemeAlphabet: string;\r\n    nbestPhonemeCount: number;\r\n    dimension: string;\r\n    enableMiscue: boolean;\r\n}\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privPhonemeAlphabet: string;\r\n    private privNBestPhonemeCount: number;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * Sets the phoneme alphabet.\r\n     * The valid values are \"SAPI\" (default) and \"IPA\".\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\r\n     * @function\r\n     * @public\r\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\r\n     */\r\n    public set phonemeAlphabet(phonemeAlphabet: string) {\r\n        Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\r\n        this.privPhonemeAlphabet = phonemeAlphabet;\r\n    }\r\n\r\n    /**\r\n     * Sets the boolean enableMiscue property.\r\n     * Added in version 1.26.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\r\n     * @function\r\n     * @public\r\n     * @param {boolean} enableMiscue - enable miscue.\r\n     */\r\n    public set enableMiscue(enableMiscue: boolean) {\r\n        const enableMiscueString = enableMiscue ? \"true\" : \"false\";\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\r\n    }\r\n\r\n    /**\r\n     * Gets the boolean enableMiscue property.\r\n     * Added in version 1.26.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\r\n     * @function\r\n     * @public\r\n     * @return {boolean} enableMiscue - enable miscue.\r\n     */\r\n    public get enableMiscue(): boolean {\r\n        const enableMiscueString = this.properties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\r\n        return (enableMiscueString.toLowerCase() === \"true\");\r\n    }\r\n\r\n    /**\r\n     * Sets the nbest phoneme count\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\r\n     * @function\r\n     * @public\r\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\r\n     */\r\n    public set nbestPhonemeCount(nbestPhonemeCount: number) {\r\n        this.privNBestPhonemeCount = nbestPhonemeCount;\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson: PronunciationAssessmentJSON = JSON.parse(jsonString) as PronunciationAssessmentJSON;\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        if (this.privPhonemeAlphabet) {\r\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\r\n        }\r\n\r\n        if (this.privNBestPhonemeCount) {\r\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n        paramsJson.enableMiscue = this.enableMiscue;\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGradingSystem\r\n */\r\nexport enum PronunciationAssessmentGradingSystem {\r\n    /**\r\n     * Five point calibration\r\n     * @member PronunciationAssessmentGradingSystem.FivePoint\r\n     */\r\n    FivePoint = 1,\r\n\r\n    /**\r\n     * Hundred mark\r\n     * @member PronunciationAssessmentGradingSystem.HundredMark\r\n     */\r\n    HundredMark,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGranularity\r\n */\r\nexport enum PronunciationAssessmentGranularity {\r\n    /**\r\n     * Shows the score on the full text, word and phoneme level\r\n     * @member PronunciationAssessmentGranularity.Phoneme\r\n     */\r\n    Phoneme = 1,\r\n\r\n    /**\r\n     * Shows the score on the full text and word level\r\n     * @member PronunciationAssessmentGranularity.Word\r\n     */\r\n    Word,\r\n\r\n    /**\r\n     * Shows the score on the full text level only\r\n     * @member PronunciationAssessmentGranularity.FullText\r\n     */\r\n    FullText,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyId,\r\n    RecognitionResult\r\n} from \"./Exports\";\r\n\r\ninterface AssessmentResult {\r\n    NBest: DetailResult[];\r\n}\r\n\r\ninterface DetailResult {\r\n    Words: WordResult[];\r\n    PronunciationAssessment: {\r\n        AccuracyScore: number;\r\n        CompletenessScore: number;\r\n        FluencyScore: number;\r\n        PronScore: number;\r\n    };\r\n}\r\n\r\ninterface WordResult {\r\n    Word: string;\r\n    Phonemes: {\r\n        Phoneme?: string;\r\n        PronunciationAssessment?: {\r\n            NBestPhonemes: { Phoneme: string }[];\r\n        };\r\n     }[];\r\n\r\n    Syllables: { Syllable: string }[];\r\n}\r\n\r\n/**\r\n * Pronunciation assessment results.\r\n * @class PronunciationAssessmentResult\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentResult {\r\n    private privPronJson: DetailResult;\r\n\r\n    private constructor(jsonString: string) {\r\n        const j = JSON.parse(jsonString) as AssessmentResult;\r\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\r\n        this.privPronJson = j.NBest[0];\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult} result The recognition result.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\r\n     */\r\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\r\n        Contracts.throwIfNullOrUndefined(result, \"result\");\r\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        return new PronunciationAssessmentResult(json);\r\n    }\r\n\r\n    /**\r\n     * Gets the detail result of pronunciation assessment.\r\n     * @member PronunciationAssessmentConfig.prototype.detailResult\r\n     * @function\r\n     * @public\r\n     * @returns {DetailResult} detail result.\r\n     */\r\n    public get detailResult(): DetailResult {\r\n        return this.privPronJson;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\r\n     * how closely the phonemes match a native speaker's pronunciation.\r\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Accuracy score.\r\n     */\r\n    public get accuracyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.AccuracyScore;\r\n    }\r\n\r\n    /**\r\n     * The overall score indicating the pronunciation quality of the given speech.\r\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\r\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Pronunciation score.\r\n     */\r\n    public get pronunciationScore(): number {\r\n        return this.detailResult.PronunciationAssessment.PronScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\r\n     * @member PronunciationAssessmentResult.prototype.completenessScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Completeness score.\r\n     */\r\n    public get completenessScore(): number {\r\n        return this.detailResult.PronunciationAssessment.CompletenessScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the fluency of the given speech.\r\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Fluency score.\r\n     */\r\n    public get fluencyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.FluencyScore;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of properties and their values.\r\n * @class PropertyCollection\r\n */\r\nexport class PropertyCollection {\r\n    private privKeys: string[] = [] as string[];\r\n    private privValues: string[] = [] as string[];\r\n\r\n    /**\r\n     * Returns the property value in type String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member PropertyCollection.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string | number | boolean} def - The default value which is returned if the parameter\r\n     * is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public getProperty(key: PropertyId | string, def?: string | number | boolean): string {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                return this.privValues[n];\r\n            }\r\n        }\r\n\r\n        if (def === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return String(def);\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member PropertyCollection.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public setProperty(key: string | PropertyId, value: string): void {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                this.privValues[n] = value;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.privKeys.push(keyToUse);\r\n        this.privValues.push(value);\r\n    }\r\n\r\n    /**\r\n     * Clones the collection.\r\n     * @member PropertyCollection.prototype.clone\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} A copy of the collection.\r\n     */\r\n    public clone(): PropertyCollection {\r\n        const clonedMap = new PropertyCollection();\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            clonedMap.privKeys.push(this.privKeys[n]);\r\n            clonedMap.privValues.push(this.privValues[n]);\r\n        }\r\n\r\n        return clonedMap;\r\n    }\r\n\r\n    /**\r\n     * Merges this set of properties into another, no overwrites.\r\n     * @member PropertyCollection.prototype.mergeTo\r\n     * @function\r\n     * @public\r\n     * @param {PropertyCollection}  destinationCollection - The collection to merge into.\r\n     */\r\n    public mergeTo(destinationCollection: PropertyCollection): void {\r\n        this.privKeys.forEach((key: string | PropertyId): void => {\r\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\r\n                const value = this.getProperty(key);\r\n                destinationCollection.setProperty(key, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the keys in Property Collection.\r\n     * @member PropertyCollection.prototype.keys\r\n     * @function\r\n     * @public\r\n     * @returns {string []} Keys in the collection.\r\n     */\r\n    public get keys(): string[] {\r\n        return this.privKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines speech property ids.\r\n * @class PropertyId\r\n */\r\nexport enum PropertyId {\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to\r\n     * specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]].\r\n     * @member PropertyId.SpeechServiceConnection_Key\r\n     */\r\n    SpeechServiceConnection_Key = 0,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromEndpoint]].\r\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\r\n     * @member PropertyId.SpeechServiceConnection_Endpoint\r\n     */\r\n    SpeechServiceConnection_Endpoint,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\r\n     * use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\r\n     * @member PropertyId.SpeechServiceConnection_Region\r\n     */\r\n    SpeechServiceConnection_Region,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\r\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\r\n     * @member PropertyId.SpeechServiceAuthorization_Token\r\n     */\r\n    SpeechServiceAuthorization_Token,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization type. Currently unused.\r\n     * @member PropertyId.SpeechServiceAuthorization_Type\r\n     */\r\n    SpeechServiceAuthorization_Type,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.endpointId]].\r\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\r\n     * @member PropertyId.SpeechServiceConnection_EndpointId\r\n     */\r\n    SpeechServiceConnection_EndpointId,\r\n\r\n    /**\r\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\r\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\r\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\r\n     */\r\n    SpeechServiceConnection_TranslationToLanguages,\r\n\r\n    /**\r\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\r\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\r\n     */\r\n    SpeechServiceConnection_TranslationVoice,\r\n\r\n    /**\r\n     * Translation features.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\r\n     */\r\n    SpeechServiceConnection_TranslationFeatures,\r\n\r\n    /**\r\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[LanguageUnderstandingModel]].\r\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\r\n     */\r\n    SpeechServiceConnection_IntentRegion,\r\n\r\n    /**\r\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyHostName,\r\n\r\n    /**\r\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPort,\r\n\r\n    /**\r\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyUserName,\r\n\r\n    /**\r\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPassword,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * @member PropertyId.SpeechServiceConnection_RecoMode\r\n     */\r\n    SpeechServiceConnection_RecoMode,\r\n\r\n    /**\r\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\r\n     * directly.\r\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\r\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\r\n     */\r\n    SpeechServiceConnection_RecoLanguage,\r\n\r\n    /**\r\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\r\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead use [[SessionEventArgs.sessionId]].\r\n     * @member PropertyId.Speech_SessionId\r\n     */\r\n    Speech_SessionId,\r\n\r\n    /**\r\n     * The spoken language to be synthesized (e.g. en-US)\r\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\r\n     */\r\n    SpeechServiceConnection_SynthLanguage,\r\n\r\n    /**\r\n     * The name of the TTS voice to be used for speech synthesis\r\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\r\n     */\r\n    SpeechServiceConnection_SynthVoice,\r\n\r\n    /**\r\n     * The string to specify TTS output audio format\r\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\r\n     */\r\n    SpeechServiceConnection_SynthOutputFormat,\r\n\r\n    /**\r\n     * The list of comma separated languages used as possible source languages\r\n     * Added in version 1.13.0\r\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\r\n     */\r\n    SpeechServiceConnection_AutoDetectSourceLanguages,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\r\n     * to use this property directly.\r\n     * Instead use [[SpeechConfig.outputFormat]].\r\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestDetailedResultTrueFalse,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\r\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestProfanityFilterTrueFalse,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\r\n     * @member PropertyId.SpeechServiceResponse_JsonResult\r\n     */\r\n    SpeechServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\r\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\r\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\r\n     */\r\n    SpeechServiceResponse_JsonErrorDetails,\r\n\r\n    /**\r\n     * The cancellation reason. Currently unused.\r\n     * @member PropertyId.CancellationDetails_Reason\r\n     */\r\n    CancellationDetails_Reason,\r\n\r\n    /**\r\n     * The cancellation text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonText\r\n     */\r\n    CancellationDetails_ReasonText,\r\n\r\n    /**\r\n     * The Cancellation detailed text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\r\n     */\r\n    CancellationDetails_ReasonDetailedText,\r\n\r\n    /**\r\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\r\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\r\n     */\r\n    LanguageUnderstandingServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The URL string built from speech configuration.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * NOTE: Added in version 1.7.0.\r\n     */\r\n    SpeechServiceConnection_Url,\r\n\r\n    /**\r\n     * The initial silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n\r\n    /**\r\n     * The end silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EndSilenceTimeoutMs,\r\n\r\n    /**\r\n     * A duration of detected silence, measured in milliseconds, after which speech-to-text will determine a spoken\r\n     * phrase has ended and generate a final Recognized result. Configuring this timeout may be helpful in situations\r\n     * where spoken input is significantly faster or slower than usual and default segmentation behavior consistently\r\n     * yields results that are too long or too short. Segmentation timeout values that are inappropriately high or low\r\n     * can negatively affect speech-to-text accuracy; this property should be carefully configured and the resulting\r\n     * behavior should be thoroughly validated as intended.\r\n     *\r\n     * For more information about timeout configuration that includes discussion of default behaviors, please visit\r\n     * https://aka.ms/csspeech/timeouts.\r\n     *\r\n     * Added in version 1.21.0.\r\n     */\r\n    Speech_SegmentationSilenceTimeoutMs,\r\n\r\n    /**\r\n     * A boolean value specifying whether audio logging is enabled in the service or not.\r\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\r\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\r\n     * The logs will be removed after 30 days.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EnableAudioLogging,\r\n\r\n    /**\r\n     * The speech service connection language identifier mode.\r\n     * Can be \"AtStart\" (the default), or \"Continuous\". See Language\r\n     * Identification document https://aka.ms/speech/lid?pivots=programming-language-javascript\r\n     * for more details.\r\n     * Added in 1.25.0\r\n     **/\r\n    SpeechServiceConnection_LanguageIdMode,\r\n\r\n    /**\r\n     * A string value representing the desired endpoint version to target for Speech Recognition.\r\n     * Added in version 1.21.0\r\n     */\r\n    SpeechServiceConnection_RecognitionEndpointVersion,\r\n\r\n    /**\r\n    /**\r\n     * A string value the current speaker recognition scenario/mode (TextIndependentIdentification, etc.).\r\n     * Added in version 1.23.0\r\n     */\r\n    SpeechServiceConnection_SpeakerIdMode,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity setting.\r\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_ProfanityOption,\r\n\r\n    /**\r\n     * A string value specifying which post processing option should be used by service.\r\n     * Allowed values are \"TrueText\".\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_PostProcessingOption,\r\n\r\n    /**\r\n     * A boolean value specifying whether to include word-level timestamps in the response result.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_RequestWordLevelTimestamps,\r\n\r\n    /**\r\n     * The number of times a word has to be in partial results to be returned.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_StablePartialResultThreshold,\r\n\r\n    /**\r\n     * A string value specifying the output format option in the response result. Internal use only.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_OutputFormatOption,\r\n\r\n    /**\r\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n\r\n    /**\r\n     * A boolean value specifying whether to request WordBoundary events.\r\n     * @member PropertyId.SpeechServiceResponse_RequestWordBoundary\r\n     * Added in version 1.21.0.\r\n     */\r\n    SpeechServiceResponse_RequestWordBoundary,\r\n\r\n    /**\r\n     * A boolean value specifying whether to request punctuation boundary in WordBoundary Events. Default is true.\r\n     * @member PropertyId.SpeechServiceResponse_RequestPunctuationBoundary\r\n     * Added in version 1.21.0.\r\n     */\r\n    SpeechServiceResponse_RequestPunctuationBoundary,\r\n\r\n    /**\r\n     * A boolean value specifying whether to request sentence boundary in WordBoundary Events. Default is false.\r\n     * @member PropertyId.SpeechServiceResponse_RequestSentenceBoundary\r\n     * Added in version 1.21.0.\r\n     */\r\n    SpeechServiceResponse_RequestSentenceBoundary,\r\n\r\n    /**\r\n     * Identifier used to connect to the backend service.\r\n     * @member PropertyId.Conversation_ApplicationId\r\n     */\r\n    Conversation_ApplicationId,\r\n\r\n    /**\r\n     * Type of dialog backend to connect to.\r\n     * @member PropertyId.Conversation_DialogType\r\n     */\r\n    Conversation_DialogType,\r\n\r\n    /**\r\n     * Silence timeout for listening\r\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\r\n     */\r\n    Conversation_Initial_Silence_Timeout,\r\n\r\n    /**\r\n     * From Id to add to speech recognition activities.\r\n     * @member PropertyId.Conversation_From_Id\r\n     */\r\n    Conversation_From_Id,\r\n\r\n    /**\r\n     * ConversationId for the session.\r\n     * @member PropertyId.Conversation_Conversation_Id\r\n     */\r\n    Conversation_Conversation_Id,\r\n\r\n    /**\r\n     * Comma separated list of custom voice deployment ids.\r\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\r\n     */\r\n    Conversation_Custom_Voice_Deployment_Ids,\r\n\r\n    /**\r\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\r\n     * @member PropertyId.Conversation_Speech_Activity_Template\r\n     * Added in version 1.10.0.\r\n     */\r\n    Conversation_Speech_Activity_Template,\r\n\r\n    /**\r\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\r\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\r\n     * Added in version 1.15.0.\r\n     */\r\n    Conversation_Request_Bot_Status_Messages,\r\n\r\n    /**\r\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\r\n     * channel authentication.\r\n     * Added in version 1.15.1.\r\n     */\r\n    Conversation_Agent_Connection_Id,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromHost]].\r\n     */\r\n    SpeechServiceConnection_Host,\r\n\r\n    /**\r\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\r\n     */\r\n    ConversationTranslator_Host,\r\n\r\n    /**\r\n     * Optionally set the the host's display name.\r\n     * Used when joining a conversation.\r\n     */\r\n    ConversationTranslator_Name,\r\n\r\n    /**\r\n     * Optionally set a value for the X-CorrelationId request header.\r\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\r\n     */\r\n    ConversationTranslator_CorrelationId,\r\n\r\n    /**\r\n     * Set the conversation token to be sent to the speech service. This enables the\r\n     * service to service call from the speech service to the Conversation Translator service for relaying\r\n     * recognitions. For internal use.\r\n     */\r\n    ConversationTranslator_Token,\r\n\r\n    /**\r\n     * The reference text of the audio for pronunciation evaluation.\r\n     * For this and the following pronunciation assessment parameters, see\r\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_ReferenceText,\r\n\r\n    /**\r\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_GradingSystem,\r\n\r\n    /**\r\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Granularity,\r\n\r\n    /**\r\n     * Defines if enable miscue calculation.\r\n     * With this enabled, the pronounced words will be compared to the reference text,\r\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_EnableMiscue,\r\n\r\n    /**\r\n     * The json string of pronunciation assessment parameters\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Json,\r\n\r\n    /**\r\n     * Pronunciation assessment parameters.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Params,\r\n\r\n    /**\r\n     * Version of Speaker Recognition API to use.\r\n     * Added in version 1.18.0\r\n     */\r\n    SpeakerRecognition_Api_Version\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for session events like Speech Start/End Detected\r\n * @class\r\n */\r\nexport class RecognitionEventArgs extends SessionEventArgs {\r\n    private privOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(offset: number, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * Represents the message offset\r\n     * @member RecognitionEventArgs.prototype.offset\r\n     * @function\r\n     * @public\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class RecognitionResult\r\n */\r\nexport class RecognitionResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privText: string;\r\n    private privDuration: number;\r\n    private privOffset: number;\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n    private privErrorDetails: string;\r\n    private privJson: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string, duration?: number,\r\n                offset?: number, language?: string, languageDetectionConfidence?: string, errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privText = text;\r\n        this.privDuration = duration;\r\n        this.privOffset = offset;\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privJson = json;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member RecognitionResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member RecognitionResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * Presents the recognized text in the result.\r\n     * @member RecognitionResult.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} Presents the recognized text in the result.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Duration of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Offset of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.offset\r\n     * @function\r\n     * @public\r\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detected.\r\n     * @member RecognitionResult.prototype.language\r\n     * @function\r\n     * @public\r\n     * @returns {string} language detected.\r\n     */\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\r\n     * @member RecognitionResult.prototype.languageDetectionConfidence\r\n     * @function\r\n     * @public\r\n     * @returns {string} detection confidence strength.\r\n     */\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member RecognitionResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * A string containing Json serialized recognition result as it was received from the service.\r\n     * @member RecognitionResult.prototype.json\r\n     * @function\r\n     * @private\r\n     * @returns {string} Json serialized representation of the result.\r\n     */\r\n    public get json(): string {\r\n        return this.privJson;\r\n    }\r\n\r\n    /**\r\n     * The set of properties exposed in the result.\r\n     * @member RecognitionResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OS,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport {\r\n    Contracts\r\n} from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines the base class Recognizer which mainly contains common event handlers.\r\n * @class Recognizer\r\n */\r\nexport abstract class Recognizer {\r\n    private privDisposed: boolean;\r\n    protected audioConfig: AudioConfig;\r\n    protected privReco: ServiceRecognizerBase;\r\n    protected privProperties: PropertyCollection;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\r\n     */\r\n    protected constructor(audioConfig: AudioConfig, properties: PropertyCollection, connectionFactory: IConnectionFactory) {\r\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : AudioConfig.fromDefaultMicrophoneInput();\r\n        this.privDisposed = false;\r\n        this.privProperties = properties.clone();\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.implCommonRecognizerSetup();\r\n    }\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member Recognizer.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member Recognizer.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech started events.\r\n     * @member Recognizer.prototype.speechStartDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechStartDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech stopped events.\r\n     * @member Recognizer.prototype.speechEndDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechEndDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member Recognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privReco;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Recognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n\r\n        if (disposing) {\r\n            if (this.privReco) {\r\n                await this.privReco.audioSource.turnOff();\r\n                await this.privReco.dispose();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method returns the current state of the telemetry setting.\r\n     * @member Recognizer.prototype.telemetryEnabled\r\n     * @function\r\n     * @public\r\n     * @returns true if the telemetry is enabled, false otherwise.\r\n     */\r\n    public static get telemetryEnabled(): boolean {\r\n        return ServiceRecognizerBase.telemetryDataEnabled;\r\n    }\r\n\r\n    /**\r\n     * This method globally enables or disables telemetry.\r\n     * @member Recognizer.prototype.enableTelemetry\r\n     * @function\r\n     * @public\r\n     * @param enabled - Global setting for telemetry collection.\r\n     * If set to true, telemetry information like microphone errors,\r\n     * recognition errors are collected and sent to Microsoft.\r\n     * If set to false, no telemetry is sent to Microsoft.\r\n     */\r\n    public static enableTelemetry(enabled: boolean): void {\r\n        ServiceRecognizerBase.telemetryDataEnabled = enabled;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected abstract createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig;\r\n\r\n    // Creates the correct service recognizer for the type\r\n    protected abstract createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase;\r\n\r\n    // Does the generic recognizer setup that is common across all recognizer types.\r\n    protected implCommonRecognizerSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig = this.createRecognizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        this.privReco = this.createServiceRecognizer(\r\n            Recognizer.getAuthFromProperties(this.privProperties),\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            recognizerConfig);\r\n    }\r\n\r\n    protected async recognizeOnceAsyncImpl(recognitionMode: RecognitionMode): Promise<SpeechRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\r\n        const result: SpeechRecognitionResult = await ret.promise;\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    protected async startContinuousRecognitionAsyncImpl(recognitionMode: RecognitionMode): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\r\n    }\r\n\r\n    protected async stopContinuousRecognitionAsyncImpl(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        await this.implRecognizerStop();\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected static getAuthFromProperties(properties: PropertyCollection): IAuthentication {\r\n        const subscriptionKey = properties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        return authentication;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be generated.\r\n * @class ResultReason\r\n */\r\nexport enum ResultReason {\r\n    /**\r\n     * Indicates speech could not be recognized. More details\r\n     * can be found in the NoMatchDetails object.\r\n     * @member ResultReason.NoMatch\r\n     */\r\n    NoMatch,\r\n\r\n    /**\r\n     * Indicates that the recognition was canceled. More details\r\n     * can be found using the CancellationDetails object.\r\n     * @member ResultReason.Canceled\r\n     */\r\n    Canceled,\r\n\r\n    /**\r\n     * Indicates the speech result contains hypothesis text.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizingSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains final text that has been recognized.\r\n     * Speech Recognition is now complete for this phrase.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizedSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\r\n     * Speech recognition will continue unless otherwise configured.\r\n     * @member ResultReason.RecognizedKeyword\r\n     */\r\n    RecognizedKeyword,\r\n\r\n    /**\r\n     * Indicates the intent result contains hypothesis text and intent.\r\n     * @member ResultReason.RecognizingIntent\r\n     */\r\n    RecognizingIntent,\r\n\r\n    /**\r\n     * Indicates the intent result contains final text and intent.\r\n     * Speech Recognition and Intent determination are now complete for this phrase.\r\n     * @member ResultReason.RecognizedIntent\r\n     */\r\n    RecognizedIntent,\r\n\r\n    /**\r\n     * Indicates the translation result contains hypothesis text and its translation(s).\r\n     * @member ResultReason.TranslatingSpeech\r\n     */\r\n    TranslatingSpeech,\r\n\r\n    /**\r\n     * Indicates the translation result contains final text and corresponding translation(s).\r\n     * Speech Recognition and Translation are now complete for this phrase.\r\n     * @member ResultReason.TranslatedSpeech\r\n     */\r\n    TranslatedSpeech,\r\n\r\n    /**\r\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\r\n     * @member ResultReason.SynthesizingAudio\r\n     */\r\n    SynthesizingAudio,\r\n\r\n    /**\r\n     * Indicates the synthesized audio is now complete for this phrase.\r\n     * @member ResultReason.SynthesizingAudioCompleted\r\n     */\r\n    SynthesizingAudioCompleted,\r\n\r\n    /**\r\n     * Indicates the speech synthesis is now started\r\n     * @member ResultReason.SynthesizingAudioStarted\r\n     */\r\n    SynthesizingAudioStarted,\r\n\r\n    /**\r\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\r\n     * @member ResultReason.EnrollingVoiceProfile\r\n     */\r\n    EnrollingVoiceProfile,\r\n\r\n    /**\r\n     * Indicates the voice profile has been enrolled.\r\n     * @member ResultReason.EnrolledVoiceProfile\r\n     */\r\n    EnrolledVoiceProfile,\r\n\r\n    /**\r\n     * Indicates successful identification of some speakers.\r\n     * @member ResultReason.RecognizedSpeakers\r\n     */\r\n    RecognizedSpeakers,\r\n\r\n    /**\r\n     * Indicates successfully verified one speaker.\r\n     * @member ResultReason.RecognizedSpeaker\r\n     */\r\n    RecognizedSpeaker,\r\n\r\n    /**\r\n     * Indicates a voice profile has been reset successfully.\r\n     * @member ResultReason.ResetVoiceProfile\r\n     */\r\n    ResetVoiceProfile,\r\n\r\n    /**\r\n     * Indicates a voice profile has been deleted successfully.\r\n     * @member ResultReason.DeletedVoiceProfile\r\n     */\r\n    DeletedVoiceProfile,\r\n\r\n    /**\r\n     * Indicates synthesis voices list has been successfully retrieved.\r\n     * @member ResultReason.VoicesListRetrieved\r\n     */\r\n    VoicesListRetrieved,\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for any Service message event\r\n * Added in version 1.9.0\r\n */\r\n\r\nexport class ServiceEventArgs extends SessionEventArgs {\r\n    private privJsonResult: string;\r\n    private privEventName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} json - json payload of the USP message.\r\n     */\r\n    public constructor(json: string,  name: string, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privJsonResult = json;\r\n        this.privEventName = name;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n\r\n    public get eventName(): string {\r\n        return this.privEventName;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines channels used to pass property settings to service.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ServicePropertyChannel {\r\n    /**\r\n     * Uses URI query parameter to pass property settings to service.\r\n     */\r\n    UriQueryParameter = 0.\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\r\n * @class SessionEventArgs\r\n */\r\nexport class SessionEventArgs {\r\n    private privSessionId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    /**\r\n     * Represents the session identifier.\r\n     * @member SessionEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Represents the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Source Language configuration.\r\n * @class SourceLanguageConfig\r\n */\r\nexport class SourceLanguageConfig {\r\n    private privLanguage: string;\r\n    private privEndpointId: string;\r\n\r\n    private constructor(language: string, endpointId?: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        this.privLanguage = language;\r\n        this.privEndpointId = endpointId;\r\n    }\r\n\r\n    /**\r\n     * @member SourceLanguageConfig.fromLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} language language (eg. \"en-US\") value of config.\r\n     * @param {string?} endpointId endpointId of model bound to given language of config.\r\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\r\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\r\n     * Added in version 1.13.0.\r\n     */\r\n    public static fromLanguage(language: string, endpointId?: string): SourceLanguageConfig {\r\n        return new SourceLanguageConfig(language, endpointId);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privEndpointId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel implements SpeakerRecognitionModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n    private privProfileIds: string[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        for (const profile of profiles) {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n            this.privProfileIds.push(profile.profileId);\r\n        }\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privProfileIds.join(\",\");\r\n    }\r\n\r\n    public get profileIds(): string[] {\r\n        return this.privProfileIds;\r\n    }\r\n\r\n    public get scenario(): string {\r\n        return \"TextIndependentIdentification\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName, SpeakerResponse } from \"../common.speech/Exports\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\nexport enum SpeakerRecognitionResultType {\r\n    Verify,\r\n    Identify\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class SpeakerRecognitionResult\r\n */\r\nexport class SpeakerRecognitionResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privProfileId: string;\r\n    private privScore: number;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(response: SpeakerResponse, resultReason: ResultReason = ResultReason.RecognizedSpeaker, cancellationErrorCode: CancellationErrorCode = CancellationErrorCode.NoError, errorDetails: string = \"\") {\r\n        this.privProperties = new PropertyCollection();\r\n        const resultType = response.scenario === \"TextIndependentIdentification\" ? SpeakerRecognitionResultType.Identify : SpeakerRecognitionResultType.Verify;\r\n        this.privReason = resultReason;\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (resultType === SpeakerRecognitionResultType.Identify) {\r\n                this.privProfileId = response.identificationResult.identifiedProfile.profileId;\r\n                this.privScore = response.identificationResult.identifiedProfile.score;\r\n                this.privReason = ResultReason.RecognizedSpeakers;\r\n            } else {\r\n                this.privScore = response.verificationResult.score;\r\n                if (response.verificationResult.recognitionResult.toLowerCase() !== \"accept\") {\r\n                    this.privReason = ResultReason.NoMatch;\r\n                }\r\n                if (response.verificationResult.profileId !== undefined && response.verificationResult.profileId !== \"\") {\r\n                    this.privProfileId = response.verificationResult.profileId;\r\n                }\r\n            }\r\n        } else {\r\n            this.privErrorDetails = errorDetails;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[cancellationErrorCode]);\r\n        }\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, JSON.stringify(response));\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get profileId(): string {\r\n        return this.privProfileId;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public get score(): number {\r\n        return this.privScore;\r\n    }\r\n}\r\n\r\n/**\r\n * @class SpeakerRecognitionCancellationDetails\r\n */\r\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\r\n     * @member SpeakerRecognitionCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\r\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: SpeakerRecognitionResult): SpeakerRecognitionCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError]) as keyof typeof CancellationErrorCode];\r\n        }\r\n\r\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeakerRecognitionConnectionFactory,\r\n    SpeakerServiceRecognizer,\r\n    SpeechServiceConfig\r\n} from \"../common.speech/Exports\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeakerIdentificationModel,\r\n    SpeakerRecognitionResult,\r\n    SpeakerVerificationModel,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines SpeakerRecognizer class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class SpeakerRecognizer\r\n */\r\nexport class SpeakerRecognizer extends Recognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privDisposedSpeakerRecognizer: boolean;\r\n    private privAudioConfigImpl: AudioConfigImpl;\r\n    /**\r\n     * Initializes an instance of the SpeakerRecognizer.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\r\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig: AudioConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const configImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new SpeakerRecognitionConnectionFactory());\r\n        this.privAudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\r\n\r\n        this.privDisposedSpeakerRecognizer = false;\r\n        this.privProperties = configImpl.properties;\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeakerRecognizer.\r\n     * @member SpeakerRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Get recognition result for model using given audio\r\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {SpeakerIdentificationModel | SpeakerVerificationModel} model Model containing Voice Profiles to be identified\r\n     * @param cb - Callback invoked once result is returned.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public async recognizeOnceAsync(model: SpeakerIdentificationModel | SpeakerVerificationModel): Promise<SpeakerRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\r\n\r\n        return this.recognizeSpeakerOnceAsyncImpl(model);\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member SpeakerRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     * @async\r\n     */\r\n    public async close(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\r\n        await this.dispose(true);\r\n    }\r\n\r\n    protected async recognizeSpeakerOnceAsyncImpl(model: SpeakerRecognitionModel): Promise<SpeakerRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\r\n\r\n        await this.implRecognizerStop();\r\n        const result: SpeakerRecognitionResult = await this.privReco.recognizeSpeaker(model);\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeakerServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedSpeakerRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedSpeakerRecognizer = true;\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerVerificationModel class for Speaker Recognition\r\n * Model contains a profile against which to verify a speaker\r\n * @class SpeakerVerificationModel\r\n */\r\nexport class SpeakerVerificationModel implements SpeakerRecognitionModel {\r\n    private privVoiceProfile: VoiceProfile;\r\n\r\n    private constructor(profile: VoiceProfile) {\r\n        Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\r\n        if (profile.profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            throw new Error(\"Verification model cannot be created from Identification profile\");\r\n        }\r\n        this.privVoiceProfile = profile;\r\n    }\r\n\r\n    public static fromProfile(profile: VoiceProfile): SpeakerVerificationModel {\r\n        return new SpeakerVerificationModel(profile);\r\n    }\r\n\r\n    public get voiceProfile(): VoiceProfile {\r\n        return this.privVoiceProfile;\r\n    }\r\n\r\n    public get profileIds(): string[] {\r\n        return [ this.voiceProfile.profileId ];\r\n    }\r\n\r\n    public get scenario(): string {\r\n        if (this.voiceProfile.profileType === VoiceProfileType.TextDependentVerification) {\r\n            return \"TextDependentVerification\";\r\n        } else {\r\n            return \"TextIndependentVerification\";\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport {IStringDictionary} from \"../common/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech configuration.\r\n * @class SpeechConfig\r\n */\r\nexport abstract class SpeechConfig {\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * @member SpeechConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} The speech factory\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\r\n     * SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\r\n     * and the effective language is \"de-DE\". Only the parameters that are not specified in the\r\n     * endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     * use the authorization token.\r\n     * @member SpeechConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech factory with specified initial authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\r\n     * to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\r\n     * the new token value will not apply to recognizers that have already been created. For recognizers\r\n     * that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The initial authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.authorizationToken = authorizationToken;\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Gets the authorization token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get authorizationToken(): string;\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string | PropertyId} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n    /**\r\n     * Gets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * get synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} Returns the output format.\r\n     */\r\n    public abstract get outputFormat(): OutputFormat;\r\n\r\n    /**\r\n     * Gets/Sets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * set synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set outputFormat(format: OutputFormat);\r\n\r\n    /**\r\n     * Gets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @return {string} The endpoint ID\r\n     */\r\n    public abstract get endpointId(): string;\r\n\r\n    /**\r\n     * Gets/Sets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The endpoint ID\r\n     */\r\n    public abstract set endpointId(value: string);\r\n\r\n    /**\r\n     * Closes the configuration.\r\n     * @member SpeechConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public close(): void { }\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     * @return {string} The subscription key set on the config.\r\n     */\r\n    public abstract get subscriptionKey(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.region\r\n     * @function\r\n     * @public\r\n     * @return {region} The region set on the config.\r\n     */\r\n    public abstract get region(): string;\r\n\r\n    /**\r\n     * Sets a property value that will be passed to service using the specified channel.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * Sets profanity option.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.setProfanity\r\n     * @function\r\n     * @public\r\n     * @param {profanity} Profanity option to set.\r\n     */\r\n    public abstract setProfanity(profanity: ProfanityOption): void;\r\n\r\n    /**\r\n     * Enable audio logging in service.\r\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\r\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\r\n     * The logs will be removed after 30 days.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.enableAudioLogging\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract enableAudioLogging(): void;\r\n\r\n    /**\r\n     * Includes word-level timestamps.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.requestWordLevelTimestamps\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract requestWordLevelTimestamps(): void;\r\n\r\n    /**\r\n     * Enable dictation. Only supported in speech continuous recognition.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.enableDictation\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract enableDictation(): void;\r\n\r\n    /**\r\n     * Gets the language of the speech synthesizer.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis language.\r\n     */\r\n    public abstract get speechSynthesisLanguage(): string;\r\n\r\n    /**\r\n     * Sets the language of the speech synthesizer.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set speechSynthesisLanguage(language: string);\r\n\r\n    /**\r\n     * Gets the voice of the speech synthesizer.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis voice.\r\n     */\r\n    public abstract get speechSynthesisVoiceName(): string;\r\n\r\n    /**\r\n     * Sets the voice of the speech synthesizer. (see <a href=\"https://aka.ms/speech/tts-languages\">available voices</a>).\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set speechSynthesisVoiceName(voice: string);\r\n\r\n    /**\r\n     * Gets the speech synthesis output format.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisOutputFormat} Returns the speech synthesis output format\r\n     */\r\n    public abstract get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat;\r\n\r\n    /**\r\n     * Sets the speech synthesis output format (e.g. Riff16Khz16BitMonoPcm).\r\n     * The default format is Audio16Khz64KBitRateMonoMp3 for browser and Riff16Khz16BitMonoPcm for Node.JS.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat);\r\n}\r\n\r\n/**\r\n * @public\r\n * @class SpeechConfigImpl\r\n */\r\nexport class SpeechConfigImpl extends SpeechConfig {\r\n\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get endPoint(): URL {\r\n        return new URL(this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Endpoint));\r\n    }\r\n\r\n    public get subscriptionKey(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n    }\r\n\r\n    public get region(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public set speechRecognitionLanguage(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\r\n    }\r\n\r\n    public set autoDetectSourceLanguages(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return OutputFormat[this.privProperties.getProperty(OutputFormatPropertyName, undefined) as keyof typeof OutputFormat];\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    public set endpointId(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        this.privProperties.setProperty(name, value);\r\n    }\r\n\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n\r\n        return this.privProperties.getProperty(name, def);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword as string);\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public clone(): SpeechConfigImpl {\r\n        const ret: SpeechConfigImpl = new SpeechConfigImpl();\r\n        ret.privProperties = this.privProperties.clone();\r\n        return ret;\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return SpeechSynthesisOutputFormat[this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined) as keyof typeof SpeechSynthesisOutputFormat];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\nexport class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class SpeechRecognitionResult\r\n */\r\nexport class SpeechRecognitionResult extends RecognitionResult {\r\n    private readonly privSpeakerId: string;\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @public\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\r\n                       duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n        this.privSpeakerId = speakerId;\r\n    }\r\n\r\n    /**\r\n     * speaker id from conversation transcription/id scenarios\r\n     * @member SpeechRecognitionResult.prototype.speakerId\r\n     * @function\r\n     * @public\r\n     * @returns {string} id of speaker in given result\r\n     */\r\n    public get speakerId(): string {\r\n        return this.privSpeakerId;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechConnectionFactory,\r\n    SpeechServiceConfig,\r\n    SpeechServiceRecognizer,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    KeywordRecognitionModel,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\r\n * @class SpeechRecognizer\r\n */\r\nexport class SpeechRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechRecognizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\r\n        return recognizer;\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member SpeechRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\r\n     * @member SpeechRecognizer.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\r\n     */\r\n    public get endpointId(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format of recognition.\r\n     * @member SpeechRecognizer.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} The output format of recognition.\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\r\n            return OutputFormat.Simple;\r\n        } else {\r\n            return OutputFormat.Detailed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechRecognizer.\r\n     * @member SpeechRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     * so it is suitable only for single shot recognition\r\n     * like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the SpeechRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until\r\n     * stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the\r\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\r\n     * specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the\r\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member SpeechRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member SpeechRecognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis bookmark event.\r\n * @class SpeechSynthesisBookmarkEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisBookmarkEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The bookmark text.\r\n     */\r\n    public constructor(audioOffset: number, text: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the bookmark.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the bookmark text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the boundary type of speech synthesis boundary event.\r\n * @class SpeechSynthesisBoundaryType\r\n * Added in version 1.21.0\r\n */\r\nexport enum SpeechSynthesisBoundaryType {\r\n    /**\r\n     * Indicates the boundary text is a word.\r\n     * @member SpeechSynthesisBoundaryType.Word\r\n     */\r\n    Word = \"WordBoundary\",\r\n\r\n    /**\r\n     * Indicates the boundary text is a punctuation.\r\n     * @member SpeechSynthesisBoundaryType.Punctuation\r\n     */\r\n    Punctuation = \"PunctuationBoundary\",\r\n\r\n    /**\r\n     * Indicates the boundary text is a sentence.\r\n     * @member SpeechSynthesisBoundaryType.Sentence\r\n     */\r\n    Sentence = \"SentenceBoundary\"\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech synthesis events.\r\n * @class SpeechSynthesisEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisEventArgs {\r\n    private readonly privResult: SpeechSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\r\n     */\r\n    public constructor(result: SpeechSynthesisResult) {\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the synthesis result.\r\n     * @member SpeechSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisResult} the synthesis result.\r\n     */\r\n    public get result(): SpeechSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define speech synthesis audio output formats.\r\n * @enum SpeechSynthesisOutputFormat\r\n * Updated in version 1.17.0\r\n */\r\nexport enum SpeechSynthesisOutputFormat {\r\n    /**\r\n     * raw-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\r\n     */\r\n    Raw8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * riff-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\r\n     */\r\n    Riff16Khz16KbpsMonoSiren ,\r\n\r\n    /**\r\n     * audio-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\r\n     */\r\n    Audio16Khz16KbpsMonoSiren,\r\n\r\n    /**\r\n     * audio-16khz-32kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\r\n     */\r\n    Audio16Khz32KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-128kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\r\n     */\r\n    Audio16Khz128KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-64kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\r\n     */\r\n    Audio16Khz64KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-48kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\r\n     */\r\n    Audio24Khz48KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\r\n     */\r\n    Audio24Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-160kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\r\n     */\r\n    Audio24Khz160KBitRateMonoMp3,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-truesilk\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\r\n     */\r\n    Raw16Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * riff-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\r\n     */\r\n    Riff16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\r\n     */\r\n    Riff8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\r\n     */\r\n    Riff24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\r\n     */\r\n    Riff8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\r\n     */\r\n    Raw16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\r\n     */\r\n    Raw24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\r\n     */\r\n    Raw8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * ogg-16khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\r\n     */\r\n    Ogg16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * ogg-24khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\r\n     */\r\n    Ogg24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\r\n     */\r\n    Raw48Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\r\n     */\r\n\r\n    Riff48Khz16BitMonoPcm,\r\n    /**\r\n     * audio-48khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\r\n     */\r\n    Audio48Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-48khz-192kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\r\n     */\r\n    Audio48Khz192KBitRateMonoMp3,\r\n\r\n    /**\r\n     * ogg-48khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\r\n     */\r\n    Ogg48Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-16khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\r\n     */\r\n    Webm16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-24khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\r\n     */\r\n    Webm24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-truesilk\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\r\n     */\r\n     Raw24Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * raw-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\r\n     */\r\n     Raw8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\r\n     */\r\n     Riff8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * webm-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\r\n     * Added in version 1.19.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Webm24Khz16Bit24KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-16khz-16bit-32kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 32kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus\r\n     */\r\n    Audio16Khz16Bit32KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-24khz-16bit-48kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 48kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus\r\n     */\r\n    Audio24Khz16Bit48KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 24kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Audio24Khz16Bit24KbpsMonoOpus,\r\n\r\n    /**\r\n     * raw-22050hz-16bit-mono-pcm\r\n     * Raw PCM audio at 22050Hz sampling rate and 16-bit depth.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm\r\n     */\r\n    Raw22050Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-22050hz-16bit-mono-pcm\r\n     * PCM audio at 22050Hz sampling rate and 16-bit depth, with RIFF header.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm\r\n     */\r\n    Riff22050Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-44100hz-16bit-mono-pcm\r\n     * Raw PCM audio at 44100Hz sampling rate and 16-bit depth.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm\r\n     */\r\n    Raw44100Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-44100hz-16bit-mono-pcm\r\n     * PCM audio at 44100Hz sampling rate and 16-bit depth, with RIFF header.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm\r\n     */\r\n    Riff44100Hz16BitMonoPcm\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    PropertyCollection,\r\n    ResultReason,\r\n    SynthesisResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult extends SynthesisResult {\r\n    private readonly privAudioData: ArrayBuffer;\r\n    private readonly privAudioDuration: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {ArrayBuffer} audioData - The synthesized audio binary.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     * @param {number} audioDuration - The audio duration.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection, audioDuration?: number) {\r\n        super(resultId, reason, errorDetails, properties);\r\n        this.privAudioData = audioData;\r\n        this.privAudioDuration = audioDuration;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n\r\n    /**\r\n     * The time duration of synthesized audio, in ticks (100 nanoseconds).\r\n     * @member SpeechSynthesisResult.prototype.audioDuration\r\n     * @function\r\n     * @public\r\n     * @returns {number} The time duration of synthesized audio.\r\n     */\r\n    public get audioDuration(): number {\r\n        return this.privAudioDuration;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis viseme event.\r\n * @class SpeechSynthesisVisemeEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisVisemeEventArgs {\r\n    private privAudioOffset: number;\r\n    private privVisemeId: number;\r\n    private privAnimation: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} visemeId - The viseme ID.\r\n     * @param {string} animation - The animation, could be in svg or other format.\r\n     */\r\n    public constructor(audioOffset: number, visemeId: number, animation: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privVisemeId = visemeId;\r\n        this.privAnimation = animation;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the viseme ID.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\r\n     * @function\r\n     * @public\r\n     * @returns {number} the viseme ID.\r\n     */\r\n    public get visemeId(): number {\r\n        return this.privVisemeId;\r\n    }\r\n\r\n    /**\r\n     * Specifies the animation.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\r\n     * @function\r\n     * @public\r\n     * @returns {string} the animation, could be in svg or other format.\r\n     */\r\n    public get animation(): string {\r\n        return this.privAnimation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisBoundaryType } from \"./SpeechSynthesisBoundaryType\";\r\n\r\n/**\r\n * Defines contents of speech synthesis word boundary event.\r\n * @class SpeechSynthesisWordBoundaryEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisWordBoundaryEventArgs {\r\n    private readonly privAudioOffset: number;\r\n    private readonly privDuration: number;\r\n    private readonly privText: string;\r\n    private readonly privWordLength: number;\r\n    private readonly privTextOffset: number;\r\n    private readonly privBoundaryType: SpeechSynthesisBoundaryType;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} duration - The audio duration.\r\n     * @param {string} text - The text.\r\n     * @param {number} wordLength - The length of the word.\r\n     * @param {number} textOffset - The text offset.\r\n     * @param {SpeechSynthesisBoundaryType} boundaryType - The boundary type\r\n     */\r\n    public constructor(audioOffset: number, duration: number, text: string, wordLength: number,\r\n                       textOffset: number, boundaryType: SpeechSynthesisBoundaryType) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privDuration = duration;\r\n        this.privText = text;\r\n        this.privWordLength = wordLength;\r\n        this.privTextOffset = textOffset;\r\n        this.privBoundaryType = boundaryType;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the duration, in ticks (100 nanoseconds).\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration in 100 nanosecond increments.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text of the word boundary event.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Specifies the word length\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\r\n     * @function\r\n     * @public\r\n     * @returns {number} the word length\r\n     */\r\n    public get wordLength(): number {\r\n        return this.privWordLength;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the text offset.\r\n     */\r\n    public get textOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the boundary type.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.boundaryType\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisBoundaryType} the boundary type.\r\n     */\r\n    public get boundaryType(): SpeechSynthesisBoundaryType {\r\n        return this.privBoundaryType;\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { PathLike } from \"fs\";\r\nimport { IRestResponse } from \"../common.browser/RestMessageAdapter\";\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    OS,\r\n    SpeechServiceConfig,\r\n    SpeechSynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SynthesisRestAdapter,\r\n    SynthesizerConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    IAudioDestination,\r\n    IStringDictionary,\r\n    marshalPromiseToCallbacks,\r\n    Queue\r\n} from \"../common/Exports\";\r\nimport { AudioOutputConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\r\nimport {\r\n    PullAudioOutputStreamImpl,\r\n    PushAudioOutputStreamImpl\r\n} from \"./Audio/AudioOutputStream\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AudioOutputStream,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeechConfig,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisOutputFormat,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SynthesisVoicesResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines the class SpeechSynthesizer for text to speech.\r\n * Updated in version 1.16.0\r\n * @class SpeechSynthesizer\r\n */\r\nexport class SpeechSynthesizer {\r\n    protected audioConfig: AudioConfig;\r\n    protected privAdapter: SynthesisAdapterBase;\r\n    protected privRestAdapter: SynthesisRestAdapter;\r\n    protected privProperties: PropertyCollection;\r\n    protected synthesisRequestQueue: Queue<SynthesisRequest>;\r\n\r\n    /**\r\n     * Defines event handler for synthesis start events.\r\n     * @member SpeechSynthesizer.prototype.synthesisStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisStarted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesizing events.\r\n     * @member SpeechSynthesizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis completed events.\r\n     * @member SpeechSynthesizer.prototype.synthesisCompleted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisCompleted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis cancelled events.\r\n     * @member SpeechSynthesizer.prototype.SynthesisCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public SynthesisCanceled: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for word boundary events\r\n     * @member SpeechSynthesizer.prototype.wordBoundary\r\n     * @function\r\n     * @public\r\n     */\r\n    public wordBoundary: (sender: SpeechSynthesizer, event: SpeechSynthesisWordBoundaryEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for bookmark reached events\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.bookmarkReached\r\n     * @function\r\n     * @public\r\n     */\r\n    public bookmarkReached: (sender: SpeechSynthesizer, event: SpeechSynthesisBookmarkEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for viseme received event\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.visemeReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public visemeReceived: (sender: SpeechSynthesizer, event: SpeechSynthesisVisemeEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechSynthesizer.\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Indicates if auto detect source language is enabled\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {boolean} if auto detect source language is enabled\r\n     */\r\n    public get autoDetectSourceLanguage(): boolean {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\r\n    }\r\n\r\n    private privDisposed: boolean;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n    private privSynthesizing: boolean;\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        if (audioConfig !== null) {\r\n            if (audioConfig === undefined) {\r\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : AudioConfig.fromDefaultSpeakerOutput();\r\n            } else {\r\n                this.audioConfig = audioConfig;\r\n            }\r\n        }\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privDisposed = false;\r\n        this.privSynthesizing = false;\r\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\r\n        this.synthesisRequestQueue = new Queue<SynthesisRequest>();\r\n        this.implCommonSynthesizeSetup();\r\n    }\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechSynthesizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        return new SpeechSynthesizer(speechConfig, audioConfig);\r\n    }\r\n\r\n    public buildSsml(text: string): string {\r\n        const languageToDefaultVoice: IStringDictionary<string>  = {\r\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\r\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\r\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\r\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\r\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\r\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\r\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\r\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\r\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\r\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\r\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\r\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\r\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\r\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\r\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\r\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\r\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\r\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\r\n            [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\r\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\r\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\r\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\r\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\r\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\r\n            [\"de-CH\"]: \"de-CH-JanNeural\",\r\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\r\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\r\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\r\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\r\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\r\n            [\"en-HK\"]: \"en-HK-SamNeural\",\r\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\r\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\r\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\r\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\r\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\r\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\r\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\r\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\r\n            [\"en-US\"]: \"en-US-JennyNeural\",\r\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\r\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\r\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\r\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\r\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\r\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\r\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\r\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\r\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\r\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\r\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\r\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\r\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\r\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\r\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\r\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\r\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\r\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\r\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\r\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\r\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\r\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\r\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\r\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\r\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\r\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\r\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\r\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\r\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\r\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\r\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\r\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\r\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\r\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\r\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\r\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\r\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\r\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\r\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\r\n            [\"is-IS\"]: \"is-IS-GudrunNeural\",\r\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\r\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\r\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\r\n            [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\r\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\r\n            [\"kn-IN\"]: \"kn-IN-GaganNeural\",\r\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\r\n            [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\r\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\r\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\r\n            [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\r\n            [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\r\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\r\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\r\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\r\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\r\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\r\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\r\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\r\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\r\n            [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\r\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\r\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\r\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\r\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\r\n            [\"si-LK\"]: \"si-LK-SameeraNeural\",\r\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\r\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\r\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\r\n            [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\r\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\r\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\r\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\r\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\r\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\r\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\r\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\r\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\r\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\r\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\r\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\r\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\r\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\r\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\r\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\r\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\r\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\r\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\r\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\r\n        };\r\n\r\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\r\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\r\n        let ssml: string = SpeechSynthesizer.XMLEncode(text);\r\n        if (this.autoDetectSourceLanguage) {\r\n            language = \"en-US\";\r\n        } else {\r\n            voice = voice || languageToDefaultVoice[language];\r\n        }\r\n        if (voice) {\r\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\r\n        }\r\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\r\n        return ssml;\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on plain text.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakTextAsync\r\n     * @function\r\n     * @public\r\n     * @param text - Text to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakTextAsync(text: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(text, false, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on SSML.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\r\n     * @function\r\n     * @public\r\n     * @param ssml - SSML to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakSsmlAsync(ssml: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(ssml, true, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Get list of synthesis voices available.\r\n     * The task returns the synthesis voice result.\r\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\r\n     * @function\r\n     * @async\r\n     * @public\r\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\r\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\r\n     */\r\n    public async getVoicesAsync(locale: string = \"\"): Promise<SynthesisVoicesResult> {\r\n        return this.getVoices(locale);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechSynthesizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privAdapter;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member SpeechSynthesizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            if (this.privAdapter) {\r\n                await this.privAdapter.dispose();\r\n            }\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        return new SynthesizerConfig(\r\n            speechConfig,\r\n            this.privProperties);\r\n    }\r\n\r\n    // Creates the synthesis adapter\r\n    protected createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase {\r\n        return new SynthesisAdapterBase(authentication, connectionFactory,\r\n            synthesizerConfig, this, this.audioConfig as AudioOutputConfigImpl);\r\n    }\r\n\r\n    protected implCommonSynthesizeSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const synthesizerConfig = this.createSynthesizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        this.privAdapter = this.createSynthesisAdapter(\r\n            authentication,\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            synthesizerConfig);\r\n\r\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(\r\n            SpeechSynthesisOutputFormat[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined) as keyof typeof SpeechSynthesisOutputFormat]\r\n        );\r\n\r\n        this.privRestAdapter = new SynthesisRestAdapter(synthesizerConfig, authentication);\r\n    }\r\n\r\n    protected speakImpl(text: string, IsSsml: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privDisposed);\r\n            const requestId = createNoDashGuid();\r\n            let audioDestination;\r\n            if (dataStream instanceof PushAudioOutputStreamCallback) {\r\n                audioDestination = new PushAudioOutputStreamImpl(dataStream);\r\n            } else if (dataStream instanceof PullAudioOutputStream) {\r\n                audioDestination = dataStream as PullAudioOutputStreamImpl;\r\n            } else if (dataStream !== undefined) {\r\n                audioDestination = new AudioFileWriter(dataStream as PathLike);\r\n            } else {\r\n                audioDestination = undefined;\r\n            }\r\n            this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, (e: SpeechSynthesisResult): void => {\r\n                this.privSynthesizing = false;\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(e);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e as string);\r\n                        }\r\n                    }\r\n                }\r\n                cb = undefined;\r\n                /* eslint-disable no-empty */\r\n                this.adapterSpeak().catch((): void => { });\r\n\r\n            }, (e: string): void => {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }, audioDestination));\r\n\r\n            /* eslint-disable no-empty-function */\r\n            this.adapterSpeak().catch((): void => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n\r\n            // Destroy the synthesizer.\r\n            /* eslint-disable no-empty */\r\n            this.dispose(true).catch((): void => { });\r\n        }\r\n    }\r\n\r\n    protected async getVoices(locale: string): Promise<SynthesisVoicesResult> {\r\n        const requestId = createNoDashGuid();\r\n        const response: IRestResponse = await this.privRestAdapter.getVoicesList(requestId);\r\n        if (response.ok && Array.isArray(response.json)) {\r\n            let json = response.json;\r\n            if (!!locale && locale.length > 0) {\r\n                json = json.filter((item: { Locale: string }): boolean => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase() );\r\n            }\r\n            return new SynthesisVoicesResult(requestId, json, undefined);\r\n        } else {\r\n            return new SynthesisVoicesResult(requestId, undefined, `Error: ${response.status}: ${response.statusText}`);\r\n        }\r\n   }\r\n\r\n    protected async adapterSpeak(): Promise<void> {\r\n        if (!this.privDisposed && !this.privSynthesizing) {\r\n            this.privSynthesizing = true;\r\n            const request: SynthesisRequest = await this.synthesisRequestQueue.dequeue();\r\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\r\n        }\r\n    }\r\n\r\n    private static XMLEncode(text: string): string {\r\n        return text.replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n}\r\n\r\nexport class SynthesisRequest {\r\n    public requestId: string;\r\n    public text: string;\r\n    public isSSML: boolean;\r\n    public cb: (e: SpeechSynthesisResult) => void;\r\n    public err: (e: string) => void;\r\n    public dataStream: IAudioDestination;\r\n\r\n    public constructor(requestId: string, text: string, isSSML: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: IAudioDestination) {\r\n        this.requestId = requestId;\r\n        this.text = text;\r\n        this.isSSML = isSSML;\r\n        this.cb = cb;\r\n        this.err = err;\r\n        this.dataStream = dataStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport { IStringDictionary } from \"../common/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechConfig,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech translation configuration.\r\n * @class SpeechTranslationConfig\r\n */\r\nexport abstract class SpeechTranslationConfig extends SpeechConfig {\r\n\r\n    /**\r\n     * Creates an instance of recognizer config.\r\n     */\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\r\n     * @member SpeechTranslationConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by setting the property authorizationToken with a new\r\n     * valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\r\n     * will encounter errors during recognition.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\r\n     * to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechTranslationConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\r\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\r\n     * set by any other APIs. For example, if language is defined in the uri as query parameter\r\n     * \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\r\n     * setting in uri takes precedence, and the effective language is \"de-DE\".\r\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     * use the authorization token.\r\n     * @member SpeechTranslationConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @returns {SpeechTranslationConfig} A speech config instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n        Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechTranslationConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Gets/Sets the speech recognition language.\r\n     * @member SpeechTranslationConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract addTargetLanguage(value: string): void;\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract get targetLanguages(): string[];\r\n\r\n    /**\r\n     * Gets the selected voice name.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} The voice name.\r\n     */\r\n    public abstract get voiceName(): string;\r\n\r\n    /**\r\n     * Gets/Sets voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public abstract set voiceName(value: string);\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member SpeechTranslationConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string | PropertyId} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class SpeechTranslationConfigImpl\r\n */\r\nexport class SpeechTranslationConfigImpl extends SpeechTranslationConfig {\r\n\r\n    private privSpeechProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechProperties = new PropertyCollection();\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * If this is set, subscription key is ignored.\r\n     * User needs to make sure the provided authorization token is valid and not expired.\r\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @return {string} The speechRecognitionLanguage.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     */\r\n    public get subscriptionKey(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        // eslint-disable-next-line\r\n        return (OutputFormat as any)[this.privSpeechProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    /**\r\n     * Gets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public get endpointId(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public set endpointId(value: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public addTargetLanguage(value: string): void {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        const languages: string[] = this.targetLanguages;\r\n        languages.push(value);\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n    }\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public get targetLanguages(): string[] {\r\n\r\n        if (this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n        } else {\r\n            return [];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the voice name.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     */\r\n    public get voiceName(): string {\r\n        return this.getProperty(PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public set voiceName(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationVoice, value);\r\n    }\r\n\r\n    /**\r\n     * Provides the region.\r\n     * @member SpeechTranslationConfigImpl.prototype.region\r\n     * @function\r\n     * @public\r\n     * @returns {string} The region.\r\n     */\r\n    public get region(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword as string);\r\n    }\r\n\r\n    /**\r\n     * Gets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} def - The default value of the property in case it is not set.\r\n     * @returns {string} The value of the property.\r\n     */\r\n    public getProperty(name: string, def?: string): string {\r\n        return this.privSpeechProperties.getProperty(name, def);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string | PropertyId} name - The name of the property to set.\r\n     * @param {string} value - The value of the property.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechProperties.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member SpeechTranslationConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechProperties;\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privSpeechProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privSpeechProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privSpeechProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        // eslint-disable-next-line\r\n        return (SpeechSynthesisOutputFormat as any)[this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Base class for synthesis results\r\n * @class SynthesisResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privErrorDetails: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, errorDetails?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member SynthesisResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member SynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\r\n     * @member SynthesisResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The set of properties exposed in the result.\r\n     * @member SynthesisResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SynthesisResult, VoiceInfo } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SynthesisVoicesResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisVoicesResult extends SynthesisResult {\r\n    private privVoices: VoiceInfo[];\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param requestId - result id for request.\r\n     * @param json - json payload from endpoint.\r\n     */\r\n    public constructor(requestId: string, json: any, errorDetails: string ) {\r\n        if (Array.isArray(json)) {\r\n            super(requestId, ResultReason.VoicesListRetrieved, undefined, new PropertyCollection());\r\n            this.privVoices = [];\r\n            for (const item of json) {\r\n                this.privVoices.push(new VoiceInfo(item as { Name: string; LocalName: string; LocaleName: string; ShortName: string; Gender: string; VoiceType: string; Locale: string; StyleList: string[] }));\r\n            }\r\n        } else {\r\n            super(requestId, ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new PropertyCollection());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The list of voices\r\n     * @member SynthesisVoicesResult.prototype.voices\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceInfo[]} List of synthesized voices.\r\n     */\r\n    public get voices(): VoiceInfo[] {\r\n        return this.privVoices;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    ConversationManager,\r\n    ConversationReceivedTranslationEventArgs,\r\n    ConversationRecognizer,\r\n    ConversationRecognizerFactory,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs,\r\n    TranscriberRecognizer\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslator,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports\";\r\nimport { SpeechTranslationConfigImpl } from \"../SpeechTranslationConfig\";\r\nimport { Callback, ConversationInfo, ConversationProperties, IConversation } from \"./IConversation\";\r\nimport { IParticipant, IUser, TranscriptionParticipant } from \"./IParticipant\";\r\n\r\nexport abstract class Conversation implements IConversation {\r\n\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    public abstract get authorizationToken(): string;\r\n\r\n    public abstract get config(): SpeechTranslationConfig;\r\n\r\n    public abstract get conversationId(): string;\r\n    public abstract get conversationInfo(): ConversationInfo;\r\n    public abstract get properties(): PropertyCollection;\r\n    public abstract get speechRecognitionLanguage(): string;\r\n    public abstract get participants(): Participant[];\r\n    public abstract set authorizationToken(value: string);\r\n    public abstract get isConnected(): boolean;\r\n\r\n    /**\r\n     * Create a conversation\r\n     * @param speechConfig\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public static createConversationAsync(speechConfig: SpeechTranslationConfig, arg2?: string | Callback, arg3?: Callback, arg4?: Callback): Conversation {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n        Contracts.throwIfNullOrUndefined(speechConfig.region, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\r\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceAuthorization_Token])) {\r\n            Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\r\n        }\r\n        let conversationImpl: ConversationImpl;\r\n        let cb: Callback;\r\n        let err: Callback;\r\n        if (typeof arg2 === \"string\") {\r\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            marshalPromiseToCallbacks((async (): Promise<void> => {})(), arg3, arg4);\r\n        } else {\r\n            conversationImpl = new ConversationImpl(speechConfig);\r\n            cb = arg2;\r\n            err = arg3;\r\n            conversationImpl.createConversationAsync(\r\n                ((): void => {\r\n                    if (!!cb) {\r\n                        cb();\r\n                    }\r\n                }),\r\n                (error: any): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n        }\r\n        return conversationImpl;\r\n\r\n    }\r\n\r\n    /** Start a conversation. */\r\n    public abstract startConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Delete a conversation. After this no one will be able to join the conversation. */\r\n    public abstract deleteConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** End a conversation. */\r\n    public abstract endConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Lock a conversation. This will prevent new participants from joining. */\r\n    public abstract lockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Add Participant to Conversation. */\r\n    public abstract addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute all other participants in the conversation. After this no other participants will\r\n     * have their speech recognitions broadcast, nor be able to send text messages.\r\n     */\r\n    public abstract muteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Remove a participant from a conversation using the user id, Participant or User object\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unlocks a conversation. */\r\n    public abstract unlockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unmute all other participants in the conversation. */\r\n    public abstract unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Unmute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n}\r\n\r\nexport class ConversationImpl extends Conversation implements IDisposable {\r\n\r\n    private privConfig: SpeechTranslationConfig;\r\n    private privProperties: PropertyCollection;\r\n    private privLanguage: string;\r\n    private privToken: string;\r\n    private privIsDisposed: boolean;\r\n    private privRoom: IInternalConversation;\r\n    private privManager: ConversationManager;\r\n    private privConversationRecognizer: ConversationRecognizer;\r\n    private privIsConnected: boolean;\r\n    private privParticipants: InternalParticipants;\r\n    private privIsReady: boolean;\r\n    private privConversationTranslator: ConversationTranslator;\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privConversationId: string;\r\n    private readonly privTextMessageMaxLength: number;\r\n\r\n    /**\r\n     * Create a conversation impl\r\n     * @param speechConfig\r\n     * @param {string} id - optional conversationId\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, id?: string) {\r\n        super();\r\n        this.privIsConnected = false;\r\n        this.privIsDisposed = false;\r\n        this.privConversationId = \"\";\r\n        this.privProperties = new PropertyCollection();\r\n        this.privManager = new ConversationManager();\r\n\r\n        // check the speech language\r\n        const language: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n        if (!language) {\r\n            speechConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], ConversationConnectionConfig.defaultLanguageCode);\r\n        }\r\n        this.privLanguage = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        if (!id) {\r\n            // check the target language(s)\r\n            if (speechConfig.targetLanguages.length === 0) {\r\n                speechConfig.addTargetLanguage(this.privLanguage);\r\n            }\r\n\r\n            // check the profanity setting: speech and conversationTranslator should be in sync\r\n            const profanity: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceResponse_ProfanityOption]);\r\n            if (!profanity) {\r\n                speechConfig.setProfanity(ProfanityOption.Masked);\r\n            }\r\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\r\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\r\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\r\n            let hostNickname: string = speechConfig.getProperty(PropertyId[PropertyId.ConversationTranslator_Name]);\r\n            if (hostNickname === undefined || hostNickname === null) {\r\n                hostNickname = \"Host\";\r\n            }\r\n            Contracts.throwIfNullOrTooLong(hostNickname, \"nickname\", 50);\r\n            Contracts.throwIfNullOrTooShort(hostNickname, \"nickname\", 2);\r\n            speechConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], hostNickname);\r\n\r\n        } else {\r\n            this.privConversationId = id;\r\n        }\r\n\r\n        // save the speech config for future usage\r\n        this.privConfig = speechConfig;\r\n\r\n        // save the config properties\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n        this.privProperties = configImpl.properties.clone();\r\n        this.privIsConnected = false;\r\n        this.privParticipants = new InternalParticipants();\r\n        this.privIsReady = false;\r\n        this.privTextMessageMaxLength = 1000;\r\n    }\r\n\r\n    // get the internal data about a conversation\r\n    public get room(): IInternalConversation {\r\n        return this.privRoom;\r\n    }\r\n\r\n    // get the wrapper for connecting to the websockets\r\n    public get connection(): ConversationRecognizer {\r\n        return this.privConversationRecognizer; // this.privConnection;\r\n    }\r\n\r\n    // get the config\r\n    public get config(): SpeechTranslationConfig {\r\n        return this.privConfig;\r\n    }\r\n\r\n    // get the conversation Id\r\n    public get conversationId(): string {\r\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\r\n    }\r\n\r\n    // get the properties\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    // get the speech language\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get isMutedByHost(): boolean {\r\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.privIsConnected && this.privIsReady;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.toParticipants(true);\r\n    }\r\n\r\n    public get me(): Participant {\r\n        return this.toParticipant(this.privParticipants.me);\r\n    }\r\n\r\n    public get host(): Participant {\r\n        return this.toParticipant(this.privParticipants.host);\r\n    }\r\n\r\n    public get transcriberRecognizer(): TranscriberRecognizer {\r\n        return this.privTranscriberRecognizer;\r\n    }\r\n\r\n    public get conversationInfo(): ConversationInfo {\r\n        const convId: string = this.conversationId;\r\n        const p: TranscriptionParticipant[] = this.participants.map((part: Participant): TranscriptionParticipant => (\r\n            {\r\n                id: part.id,\r\n                preferredLanguage: part.preferredLanguage,\r\n                voice: part.voice\r\n            }\r\n        ));\r\n        const props: ConversationProperties = {};\r\n        for (const key of ConversationConnectionConfig.transcriptionEventKeys) {\r\n            const val: string = this.properties.getProperty(key, \"\");\r\n            if (val !== \"\") {\r\n                props[key] = val;\r\n            }\r\n        }\r\n        const info: ConversationInfo = { id: convId, participants: p, conversationProperties: props };\r\n        return info;\r\n    }\r\n\r\n    private get canSend(): boolean {\r\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    private get canSendAsHost(): boolean {\r\n        return this.privIsConnected && this.privParticipants.me?.isHost;\r\n    }\r\n\r\n    // get / set the speech auth token\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    public get authorizationToken(): string {\r\n        return this.privToken;\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\r\n        this.privToken = value;\r\n    }\r\n\r\n    public set conversationTranslator(conversationTranslator: ConversationTranslator) {\r\n        this.privConversationTranslator = conversationTranslator;\r\n    }\r\n\r\n\r\n    /**\r\n     * Create a new conversation as Host\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public createConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            this.privManager.createOrJoin(this.privProperties, undefined,\r\n                ((room: IInternalConversation): void => {\r\n                    if (!room) {\r\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\r\n                    }\r\n                    this.privRoom = room;\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new conversation as host.\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // check if there is already a recognizer\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            // check if there is conversation data available\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\r\n            // connect to the conversation websocket\r\n            this.privParticipants.meId = this.privRoom.participantId;\r\n            this.privConversationRecognizer = ConversationRecognizerFactory.fromConfig(this, this.privConfig);\r\n\r\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\r\n            // has to forward serviceRecognizer connection events that usually get passed automatically\r\n            this.privConversationRecognizer.connected = this.onConnected;\r\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\r\n            this.privConversationRecognizer.canceled = this.onCanceled;\r\n\r\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\r\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\r\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\r\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\r\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\r\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\r\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\r\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\r\n\r\n            this.privConversationRecognizer.connect(this.privRoom.token,\r\n                ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param { IParticipant } participant - participant to add\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void {\r\n        Contracts.throwIfNullOrUndefined(participant, \"Participant\");\r\n        marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // TODO\r\n            // if (!!this.privConversationRecognizer) {\r\n            //     throw new Error(this.privErrors.permissionDeniedStart);\r\n            // }\r\n            Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\r\n            // join the conversation\r\n            this.privManager.createOrJoin(this.privProperties, conversationId,\r\n                ((room: IInternalConversation): void => {\r\n                    Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\r\n                    this.privRoom = room;\r\n                    this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\r\n                    // join callback\r\n                    if (!!cb) {\r\n                        cb(room.cognitiveSpeechAuthToken);\r\n                    }\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public deleteConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.deleteConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public async deleteConversationImplAsync(): Promise<void> {\r\n            Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\r\n            Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\r\n            await this.privManager.leave(this.privProperties, this.privRoom.token);\r\n\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * Issues a request to close the client websockets\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public endConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.endConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public endConversationImplAsync(): Promise<void> {\r\n        return this.close(true);\r\n    }\r\n\r\n    /**\r\n     * Issues a request to lock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public lockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the user's permissions\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to remove a participant from the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\r\n                // Assume this is a transcription participant\r\n                marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId as IParticipant), cb, err);\r\n            } else {\r\n                Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n                Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n                if (!this.canSendAsHost) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\r\n                }\r\n                let participantId = \"\";\r\n                if (typeof userId === \"string\") {\r\n                    participantId = userId;\r\n                } else if (userId.hasOwnProperty(\"id\")) {\r\n                    const participant: IParticipant = userId as IParticipant;\r\n                    participantId = participant.id;\r\n                } else if (userId.hasOwnProperty(\"userId\")) {\r\n                    const user: IUser = userId as IUser;\r\n                    participantId = user.userId;\r\n                }\r\n                Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n                // check the participant exists\r\n                const index: number = this.participants.findIndex((p: Participant): boolean => p.id === participantId);\r\n                if (index === -1) {\r\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n                }\r\n                if (!!this.privConversationRecognizer) {\r\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                        ((error: any): void => {\r\n                            this.handleError(error, err);\r\n                        }));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unlock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unlockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n                }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute all participants in the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // TODO: is a max length check required?\r\n            if (message.length > this.privTextMessageMaxLength) {\r\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set translated to languages\r\n     * @param {string[]} languages - languages to translate to\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public setTranslatedLanguagesAsync(languages: string[], cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change nickname\r\n     * @param {string} nickname - new nickname for the room\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public changeNicknameAsync(nickname: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        this.privIsDisposed = true;\r\n        if (!!this.config) {\r\n            this.config.close();\r\n        }\r\n        this.privConfig = undefined;\r\n        this.privLanguage = undefined;\r\n        this.privProperties = undefined;\r\n        this.privRoom = undefined;\r\n        this.privToken = undefined;\r\n        this.privManager = undefined;\r\n        this.privIsConnected = false;\r\n        this.privIsReady = false;\r\n        this.privParticipants = undefined;\r\n    }\r\n\r\n    public async connectTranscriberRecognizer(recognizer: TranscriberRecognizer): Promise<void> {\r\n        if (!!this.privTranscriberRecognizer) {\r\n            await this.privTranscriberRecognizer.close();\r\n        }\r\n        await recognizer.enforceAudioGating();\r\n        this.privTranscriberRecognizer = recognizer;\r\n        this.privTranscriberRecognizer.conversation = this;\r\n    }\r\n\r\n    public getKeepAlive(): string {\r\n        const nickname: string = (!!this.me) ? this.me.displayName : \"default_nickname\";\r\n        return JSON.stringify({\r\n            id: \"0\",\r\n            nickname,\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.keepAlive\r\n        });\r\n    }\r\n\r\n    /** websocket callbacks */\r\n    /* eslint-disable @typescript-eslint/typedef */\r\n    private onConnected = (e: ConnectionEventArgs): void => {\r\n        this.privIsConnected = true;\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStarted) {\r\n                this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onDisconnected = (e: ConnectionEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStopped) {\r\n                this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        } finally {\r\n            void this.close(false);\r\n        }\r\n    };\r\n\r\n    private onCanceled = (r: ConversationRecognizer, e: ConversationTranslationCanceledEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.canceled) {\r\n                this.privConversationTranslator.canceled(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantUpdateCommandReceived = (r: ConversationRecognizer, e: ParticipantAttributeEventArgs): void => {\r\n        try {\r\n            const updatedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.id);\r\n            if (updatedParticipant !== undefined) {\r\n\r\n                switch (e.key) {\r\n                    case ConversationTranslatorCommandTypes.changeNickname:\r\n                        updatedParticipant.displayName = e.value as string;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setUseTTS:\r\n                        updatedParticipant.isUsingTts = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setProfanityFiltering:\r\n                        updatedParticipant.profanity = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setMute:\r\n                        updatedParticipant.isMuted = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setTranslateToLanguages:\r\n                        updatedParticipant.translateToLanguages = e.value as string[];\r\n                        break;\r\n                }\r\n                this.privParticipants.addOrUpdateParticipant(updatedParticipant);\r\n\r\n                if (!!this.privConversationTranslator) {\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                            [this.toParticipant(updatedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onLockRoomCommandReceived = (): void => {\r\n        // TODO\r\n    };\r\n\r\n    private onMuteAllCommandReceived = (r: ConversationRecognizer, e: MuteAllEventArgs): void => {\r\n        try {\r\n            this.privParticipants.participants.forEach((p: IInternalParticipant): boolean => p.isMuted = (p.isHost ? false : e.isMuted));\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                        this.toParticipants(false), e.sessionId));\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantJoinCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\r\n            if (newParticipant !== undefined) {\r\n                if (!!this.privConversationTranslator) {\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation,\r\n                            [this.toParticipant(newParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantLeaveCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const ejectedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.participant.id);\r\n            if (ejectedParticipant !== undefined) {\r\n                // remove the participant from the internal participants list\r\n                this.privParticipants.deleteParticipant(e.participant.id);\r\n                if (!!this.privConversationTranslator) {\r\n                    // notify subscribers that the participant has left the conversation\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.LeftConversation,\r\n                            [this.toParticipant(ejectedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onTranslationReceived = (r: ConversationRecognizer, e: ConversationReceivedTranslationEventArgs): void => {\r\n        try {\r\n            switch (e.command) {\r\n                case ConversationTranslatorMessageTypes.final:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.transcribed(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.partial:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.transcribing(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.instantMessage:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.textMessageReceived(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantsListReceived = (r: ConversationRecognizer, e: ParticipantsListEventArgs): void => {\r\n        try {\r\n            // check if the session token needs to be updated\r\n            if (e.sessionToken !== undefined && e.sessionToken !== null) {\r\n                this.privRoom.token = e.sessionToken;\r\n            }\r\n            // save the participants\r\n            this.privParticipants.participants = [...e.participants];\r\n            // enable the conversation\r\n            if (this.privParticipants.me !== undefined) {\r\n                this.privIsReady = true;\r\n            }\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\r\n            }\r\n            // if this is the host, update the nickname if needed\r\n            if (this.me.isHost) {\r\n                const nickname: string = this.privConversationTranslator?.properties.getProperty(PropertyId.ConversationTranslator_Name);\r\n                if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\r\n                    // issue a change nickname request\r\n                    this.changeNicknameAsync(nickname);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onConversationExpiration = (r: ConversationRecognizer, e: ConversationExpirationEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n    /* eslint-enable @typescript-eslint/typedef */\r\n\r\n    private addParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(participant);\r\n        if (newParticipant !== undefined) {\r\n            if (!!this.privTranscriberRecognizer) {\r\n                const conversationInfo = this.conversationInfo;\r\n                conversationInfo.participants = [participant];\r\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        this.privParticipants.deleteParticipant(participant.id);\r\n        const conversationInfo = this.conversationInfo;\r\n        conversationInfo.participants = [participant];\r\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\r\n    }\r\n\r\n    private async close(dispose: boolean): Promise<void> {\r\n        try {\r\n            this.privIsConnected = false;\r\n            await this.privConversationRecognizer?.close();\r\n            this.privConversationRecognizer = undefined;\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.dispose();\r\n            }\r\n        } catch (e) {\r\n            // ignore error\r\n            throw e;\r\n        }\r\n        if (dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n\r\n    /** Helpers */\r\n    private handleCallback(cb: () => void, err: (message: string) => void): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e as string);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    private handleError(error: any, err: (message: string) => void): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Participant Helpers */\r\n    private toParticipants(includeHost: boolean): Participant[] {\r\n\r\n        const participants: Participant[] = this.privParticipants.participants.map((p: IInternalParticipant): Participant => ( this.toParticipant(p) ) );\r\n        if (!includeHost) {\r\n            return participants.filter((p: Participant): boolean => p.isHost === false);\r\n        } else {\r\n            return participants;\r\n        }\r\n    }\r\n\r\n    private toParticipant(p: IInternalParticipant): Participant {\r\n        return new Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\r\n    }\r\n\r\n    private getMuteAllCommand(isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMuteAll,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getMuteCommand(participantId: string, isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMute,\r\n            // eslint-disable-next-line object-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getLockCommand(isLocked: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setLockState,\r\n            participantId: this.privRoom.participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isLocked\r\n        });\r\n    }\r\n\r\n    private getEjectCommand(participantId: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.ejectParticipant,\r\n            // eslint-disable-next-line object-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n        });\r\n    }\r\n\r\n    private getSetTranslateToLanguagesCommand(languages: string[]): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: languages\r\n        });\r\n    }\r\n\r\n    private getChangeNicknameCommand(nickname: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.changeNickname,\r\n            nickname,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: nickname\r\n        });\r\n    }\r\n\r\n    private getMessageCommand(message: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n        Contracts.throwIfNullOrWhitespace(message, \"message\");\r\n\r\n        return JSON.stringify({\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            text: message,\r\n            type: ConversationTranslatorMessageTypes.instantMessage\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AudioConfig,\r\n    SpeechTranslationConfig\r\n} from \"../Exports\";\r\nimport { Callback } from \"./IConversation\";\r\n\r\nexport class ConversationCommon {\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    protected privSpeechTranslationConfig: SpeechTranslationConfig;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n    }\r\n\r\n    protected handleCallback(cb: Callback, err: Callback): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    protected handleError(error: any, err: Callback): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports\";\r\n\r\nexport class ConversationExpirationEventArgs extends SessionEventArgs {\r\n    private privExpirationTime: number;\r\n\r\n    public constructor(expirationTime: number, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privExpirationTime = expirationTime;\r\n    }\r\n\r\n    /** How much longer until the conversation expires (in minutes). */\r\n    public get expirationTime(): number {\r\n        return this.privExpirationTime;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports\";\r\nimport { ParticipantChangedReason } from \"./Exports\";\r\nimport { IParticipant } from \"./IParticipant\";\r\n\r\nexport class ConversationParticipantsChangedEventArgs extends SessionEventArgs {\r\n    private privReason: ParticipantChangedReason;\r\n    private privParticipant: IParticipant[];\r\n\r\n    public constructor(reason: ParticipantChangedReason, participants: IParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privReason = reason;\r\n        this.privParticipant = participants;\r\n    }\r\n\r\n    public get reason(): ParticipantChangedReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get participants(): IParticipant[] {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { TranscriberRecognizer } from \"../../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Connection,\r\n    ConversationTranscriptionEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SessionEventArgs\r\n} from \"../Exports\";\r\nimport {\r\n    ConversationHandler,\r\n    ConversationImpl,\r\n    ConversationTranscriptionHandler\r\n} from \"./Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport class ConversationTranscriber implements ConversationTranscriptionHandler {\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during the conversation.\r\n     * @member ConversationTranscriber.prototype.conversationCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationCanceled: (sender: ConversationHandler, event: CancellationEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during transcription.\r\n     * @member ConversationTranscriber.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: ConversationHandler, event: CancellationEventArgs) => void;\r\n\r\n     /**\r\n      * The event recognized signals that a final conversation transcription result is received.\r\n      * @member ConversationTranscriber.prototype.transcribed\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribed: (sender: ConversationTranscriptionHandler, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n     /**\r\n      * The event recognizing signals that an intermediate conversation transcription result is received.\r\n      * @member ConversationTranscriber.prototype.transcribing\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribing: (sender: ConversationTranscriptionHandler, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member ConversationTranscriber.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member ConversationTranscriber.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for conversation started events.\r\n     * @member ConversationTranscriber.prototype.conversationStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for conversation stopped events.\r\n     * @member ConversationTranscriber.prototype.conversationStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    private privDisposedRecognizer: boolean;\r\n    private privRecognizer: TranscriberRecognizer;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * ConversationTranscriber constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n        this.privProperties = new PropertyCollection();\r\n        this.privRecognizer = undefined;\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this ConversationTranscriber.\r\n     * @member ConversationTranscriber.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this ConversationTranscriber.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privRecognizer.internalData;\r\n    }\r\n\r\n    /**\r\n     * @Deprecated\r\n     * @Obsolete\r\n     * Please use the Connection.fromRecognizer pattern to obtain a connection object\r\n     */\r\n    public get connection(): Connection {\r\n        return Connection.fromRecognizer(this.privRecognizer);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * @param {Conversation} conversation - conversation to be recognized\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, cb?: Callback, err?: Callback): void {\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNullOrUndefined(conversationImpl, \"Conversation\");\r\n\r\n        // ref the conversation object\r\n        // create recognizer and subscribe to recognizer events\r\n        this.privRecognizer = new TranscriberRecognizer(conversation.config, this.privAudioConfig);\r\n        Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\r\n        this.privRecognizer.connectCallbacks(this);\r\n\r\n        marshalPromiseToCallbacks(conversationImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Leave the current conversation. After this is called, you will no longer receive any events.\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.disconnectCallbacks();\r\n        // eslint-disable-next-line\r\n        marshalPromiseToCallbacks((async (): Promise<void> => { return; })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member ConversationTranscriber.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n        if (!!this.privRecognizer) {\r\n            await this.privRecognizer.close();\r\n            this.privRecognizer = undefined;\r\n        }\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { CancellationEventArgsBase } from \"../CancellationEventArgsBase\";\r\n\r\nexport class ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { RecognitionEventArgs } from \"../Exports\";\r\nimport { ConversationTranslationResult } from \"./Exports\";\r\n\r\nexport class ConversationTranslationEventArgs extends RecognitionEventArgs {\r\n    private privResult: ConversationTranslationResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ConversationTranslationResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: ConversationTranslationResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @returns {ConversationTranslationResult} the recognition result.\r\n     */\r\n    public get result(): ConversationTranslationResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../PropertyCollection\";\r\nimport { ResultReason } from \"../ResultReason\";\r\nimport { TranslationRecognitionResult } from \"../TranslationRecognitionResult\";\r\nimport { Translations } from \"../Translations\";\r\n\r\nexport class ConversationTranslationResult extends TranslationRecognitionResult {\r\n    private privId: string;\r\n    private privOrigLang: string;\r\n\r\n    public constructor(participantId: string,\r\n                       translations: Translations,\r\n                       originalLanguage?: string,\r\n                       resultId?: string,\r\n                       reason?: ResultReason,\r\n                       text?: string,\r\n                       duration?: number,\r\n                       offset?: number,\r\n                       errorDetails?: string,\r\n                       json?: string,\r\n                       properties?: PropertyCollection) {\r\n        super(translations, resultId, reason, text, duration, offset, undefined, undefined, errorDetails, json, properties);\r\n        this.privId = participantId;\r\n        this.privOrigLang = originalLanguage;\r\n    }\r\n\r\n    /**\r\n     * The unique identifier for the participant this result is for.\r\n     */\r\n    public get participantId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * The original language this result was in.\r\n     */\r\n    public get originalLang(): string {\r\n        return this.privOrigLang;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    ServicePropertiesPropertyName,\r\n} from \"../../common.speech/Exports\";\r\nimport { ConversationTranslatorConnectionFactory } from \"../../common.speech/Transcription/ConversationTranslatorConnectionFactory\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    IStringDictionary,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognizer\r\n} from \"../Exports\";\r\nimport { ConversationImpl } from \"./Conversation\";\r\nimport {\r\n    ConversationCommon,\r\n    ConversationExpirationEventArgs,\r\n    ConversationHandler,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    IConversationTranslator,\r\n    Participant\r\n} from \"./Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport enum SpeechState {\r\n    Inactive, Connecting, Connected\r\n}\r\n\r\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\r\nclass ConversationTranslationRecognizer extends TranslationRecognizer {\r\n    private privTranslator: ConversationTranslator;\r\n    private privSpeechState: SpeechState;\r\n\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig: AudioConfig, translator: ConversationTranslator, convGetter: () => ConversationImpl) {\r\n\r\n        super(speechConfig, audioConfig, new ConversationTranslatorConnectionFactory(convGetter));\r\n\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        if (!!translator) {\r\n            this.privTranslator = translator;\r\n            this.sessionStarted = (): void => {\r\n                this.privSpeechState = SpeechState.Connected;\r\n            };\r\n\r\n            this.sessionStopped = (): void => {\r\n                this.privSpeechState = SpeechState.Inactive;\r\n            };\r\n\r\n            this.recognizing = (tr: TranslationRecognizer, e: TranslationRecognitionEventArgs): void => {\r\n                if (!!this.privTranslator.recognizing) {\r\n                    this.privTranslator.recognizing(this.privTranslator, e);\r\n                }\r\n            };\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n            this.recognized = async (tr: TranslationRecognizer, e: TranslationRecognitionEventArgs): Promise<void> => {\r\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\r\n                if (e.result?.errorDetails) {\r\n                    await this.cancelSpeech();\r\n                    // TODO: format the error message contained in 'errorDetails'\r\n                    this.fireCancelEvent(e.result.errorDetails);\r\n                } else {\r\n                    if (!!this.privTranslator.recognized) {\r\n                        this.privTranslator.recognized(this.privTranslator, e);\r\n                    }\r\n                }\r\n                return;\r\n            };\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n            this.canceled = async (): Promise<void> => {\r\n                if (this.privSpeechState !== SpeechState.Inactive) {\r\n                    try {\r\n                        await this.cancelSpeech();\r\n                    } catch (error) {\r\n                        this.privSpeechState = SpeechState.Inactive;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    public get state(): SpeechState {\r\n        return this.privSpeechState;\r\n    }\r\n\r\n    public set state(newState: SpeechState) {\r\n        this.privSpeechState = newState;\r\n    }\r\n\r\n    public onConnection(): void {\r\n        this.privSpeechState = SpeechState.Connected;\r\n    }\r\n\r\n    public async onDisconnection(): Promise<void> {\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        await this.cancelSpeech();\r\n    }\r\n\r\n    /**\r\n     * Fire a cancel event\r\n     * @param error\r\n     */\r\n    private fireCancelEvent(error: string): void {\r\n        try {\r\n            if (!!this.privTranslator.canceled) {\r\n                const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n                    CancellationReason.Error,\r\n                    error,\r\n                    CancellationErrorCode.RuntimeError\r\n                    );\r\n\r\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.stopContinuousRecognitionAsync();\r\n            await this.privReco?.disconnect();\r\n            this.privSpeechState = SpeechState.Inactive;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Join, leave or connect to a conversation.\r\n */\r\nexport class ConversationTranslator extends ConversationCommon implements IConversationTranslator, IDisposable {\r\n\r\n    public canceled: (sender: ConversationHandler, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: IConversationTranslator, event: ConversationExpirationEventArgs) => void;\r\n    public participantsChanged: (sender: IConversationTranslator, event: ConversationParticipantsChangedEventArgs) => void;\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public textMessageReceived: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n\r\n    // Callbacks for whole conversation results\r\n    public transcribed: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n    public transcribing: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n\r\n    // Callbacks for detecting speech/translation results from self\r\n    public recognized: (sender: IConversationTranslator, event: TranslationRecognitionEventArgs) => void;\r\n    public recognizing: (sender: IConversationTranslator, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privProperties: PropertyCollection;\r\n    private privIsDisposed: boolean;\r\n    private privCTRecognizer: ConversationTranslationRecognizer;\r\n    private privIsSpeaking: boolean;\r\n    private privConversation: ConversationImpl;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privPlaceholderKey: string;\r\n    private privPlaceholderRegion: string;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        super(audioConfig);\r\n        this.privIsDisposed = false;\r\n        this.privIsSpeaking = false;\r\n        this.privPlaceholderKey = \"abcdefghijklmnopqrstuvwxyz012345\";\r\n        this.privPlaceholderRegion = \"westus\";\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.privConversation?.participants;\r\n    }\r\n\r\n    private get canSpeak(): boolean {\r\n\r\n        // is there a Conversation websocket available and has the Recognizer been set up\r\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\r\n            return false;\r\n        }\r\n\r\n        // is the user already speaking\r\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\r\n            return false;\r\n        }\r\n\r\n        // is the user muted\r\n        if (this.privConversation.isMutedByHost) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    /**\r\n     * Join a conversation. If this is the host, pass in the previously created Conversation object.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, nickname: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversation: string | IConversation, nickname: string, param1?: string | Callback, param2?: Callback, param3?: Callback): void {\r\n\r\n        try {\r\n\r\n            if (typeof conversation === \"string\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                if (!!this.privConversation) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\r\n                }\r\n\r\n                let lang: string = param1 as string;\r\n                if (lang === undefined || lang === null || lang === \"\") {\r\n                    lang = ConversationConnectionConfig.defaultLanguageCode;\r\n                }\r\n\r\n                // create a placeholder config\r\n                this.privSpeechTranslationConfig = SpeechTranslationConfig.fromSubscription(\r\n                    this.privPlaceholderKey,\r\n                    this.privPlaceholderRegion);\r\n                this.privSpeechTranslationConfig.setProfanity(ProfanityOption.Masked);\r\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], nickname);\r\n\r\n                const propertyIdsToCopy: (string | PropertyId)[] = [\r\n                    PropertyId.SpeechServiceConnection_Host,\r\n                    PropertyId.ConversationTranslator_Host,\r\n                    PropertyId.SpeechServiceConnection_Endpoint,\r\n                    PropertyId.SpeechServiceConnection_ProxyHostName,\r\n                    PropertyId.SpeechServiceConnection_ProxyPassword,\r\n                    PropertyId.SpeechServiceConnection_ProxyPort,\r\n                    PropertyId.SpeechServiceConnection_ProxyUserName,\r\n                    \"ConversationTranslator_MultiChannelAudio\",\r\n                    \"ConversationTranslator_Region\"\r\n                ];\r\n\r\n                for (const prop of propertyIdsToCopy) {\r\n                    const value = this.privProperties.getProperty(prop);\r\n                    if (value) {\r\n                        const key = typeof prop === \"string\" ? prop : PropertyId[prop];\r\n                        this.privSpeechTranslationConfig.setProperty(key, value);\r\n                    }\r\n                }\r\n\r\n                const currentProperties  = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n                for (const prop of Object.keys(currentProperties)) {\r\n                    this.privSpeechTranslationConfig.setServiceProperty(prop, currentProperties[prop], ServicePropertyChannel.UriQueryParameter);\r\n                }\r\n\r\n                // join the conversation\r\n                this.privConversation = new ConversationImpl(this.privSpeechTranslationConfig);\r\n                this.privConversation.conversationTranslator = this;\r\n\r\n                this.privConversation.joinConversationAsync(\r\n                    conversation,\r\n                    nickname,\r\n                    lang,\r\n                    ((result: string): void => {\r\n\r\n                        if (!result) {\r\n                            this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\r\n                        }\r\n\r\n                        this.privSpeechTranslationConfig.authorizationToken = result;\r\n                        this.privConversation.room.isHost = false;\r\n\r\n                        // connect to the ws\r\n                        this.privConversation.startConversationAsync(\r\n                            ((): void => {\r\n                                this.handleCallback(param2, param3);\r\n                            }),\r\n                            ((error: any): void => {\r\n                                this.handleError(error, param3);\r\n                            }));\r\n\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, param3);\r\n                    }));\r\n\r\n            } else if (typeof conversation === \"object\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                // save the nickname\r\n                this.privProperties.setProperty(PropertyId.ConversationTranslator_Name, nickname);\r\n                // ref the conversation object\r\n                this.privConversation = conversation as ConversationImpl;\r\n                // ref the conversation translator object\r\n                this.privConversation.conversationTranslator = this;\r\n                this.privConversation.room.isHost = true;\r\n\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                this.privSpeechTranslationConfig = conversation.config;\r\n\r\n                this.handleCallback(param1 as Callback, param2);\r\n            } else {\r\n                this.handleError(\r\n                    new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")),\r\n                    param2);\r\n            }\r\n\r\n        } catch (error) {\r\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Leave the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n\r\n            // stop the speech websocket\r\n            await this.cancelSpeech();\r\n            // stop the websocket\r\n            await this.privConversation.endConversationImplAsync();\r\n            // https delete request\r\n            await this.privConversation.deleteConversationImplAsync();\r\n            this.dispose();\r\n\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n\r\n        try {\r\n            Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\r\n\r\n            this.privConversation.sendTextMessageAsync(message, cb, err);\r\n        } catch (error) {\r\n\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                if (this.privCTRecognizer === undefined) {\r\n                    await this.connectTranslatorRecognizer();\r\n                }\r\n                Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\r\n\r\n                if (!this.canSpeak) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n                }\r\n\r\n                await this.startContinuousRecognition();\r\n\r\n                this.privIsSpeaking = true;\r\n            } catch (error) {\r\n                this.privIsSpeaking = false;\r\n                await this.cancelSpeech();\r\n                throw error;\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stop speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                if (!this.privIsSpeaking) {\r\n                    // stop speech\r\n                    await this.cancelSpeech();\r\n                    return;\r\n                }\r\n\r\n                // stop the recognition but leave the websocket open\r\n                this.privIsSpeaking = false;\r\n                await new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n                    this.privCTRecognizer.stopContinuousRecognitionAsync(resolve, reject);\r\n                });\r\n\r\n            } catch (error) {\r\n                await this.cancelSpeech();\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(reason?: string, success?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            if (this.isDisposed && !this.privIsSpeaking) {\r\n                return;\r\n            }\r\n            await this.cancelSpeech();\r\n            this.privIsDisposed = true;\r\n            this.privSpeechTranslationConfig.close();\r\n            this.privSpeechRecognitionLanguage = undefined;\r\n            this.privProperties = undefined;\r\n            this.privAudioConfig = undefined;\r\n            this.privSpeechTranslationConfig = undefined;\r\n            this.privConversation.dispose();\r\n            this.privConversation = undefined;\r\n        })(), success, err);\r\n    }\r\n\r\n    /**\r\n     * Cancel the speech websocket\r\n     */\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.privIsSpeaking = false;\r\n            await this.privCTRecognizer?.onDisconnection();\r\n            this.privCTRecognizer = undefined;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Connect to the speech translation recognizer.\r\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\r\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\r\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\r\n     */\r\n    private async connectTranslatorRecognizer(): Promise<void> {\r\n        try {\r\n\r\n            if (this.privAudioConfig === undefined) {\r\n                this.privAudioConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n            }\r\n\r\n            // clear the temp subscription key if it's a participant joining\r\n            if (this.privSpeechTranslationConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key])\r\n                === this.privPlaceholderKey) {\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Key], \"\");\r\n            }\r\n\r\n            const convGetter = (): ConversationImpl => this.privConversation;\r\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this, convGetter);\r\n        } catch (error) {\r\n            await this.cancelSpeech();\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the start speaking request\r\n     */\r\n    private startContinuousRecognition(): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { PropertyCollection } from \"../Exports\";\r\n\r\n/**\r\n * Represents a user in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IUser {\r\n    /** Gets the user's ID */\r\n    readonly userId: string;\r\n}\r\n\r\nexport class User implements IUser {\r\n    private privUserId: string;\r\n\r\n    public constructor(userId: string) {\r\n        this.privUserId = userId;\r\n    }\r\n\r\n    public get userId(): string {\r\n        return this.privUserId;\r\n    }\r\n}\r\n\r\nexport interface VoiceSignature {\r\n    Version: number;\r\n    Tag: string;\r\n    Data: string;\r\n}\r\n\r\nexport interface TranscriptionParticipant {\r\n    /** The unique identifier for the participant. */\r\n    readonly id: string;\r\n    /** The participant's preferred spoken language. */\r\n    readonly preferredLanguage: string;\r\n    /** The participant's voice signature */\r\n    readonly voice: string;\r\n}\r\n\r\n/**\r\n * Represents a participant in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IParticipant extends TranscriptionParticipant {\r\n    /** Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). */\r\n    readonly avatar: string;\r\n    /**\r\n     * The participant's display name. Please note that there may be more than one participant\r\n     * with the same name. You can use <see cref=\"Id\"/> property to tell them apart.\r\n     */\r\n    readonly displayName: string;\r\n    /** Gets whether or not this participant is the host. */\r\n    readonly isHost: boolean;\r\n    /** Gets whether or not this participant is muted. */\r\n    readonly isMuted: boolean;\r\n    /** Gets whether or not the participant is using Text To Speech (TTS). */\r\n    readonly isUsingTts: boolean;\r\n    /** Contains properties of the participant. */\r\n    readonly properties: PropertyCollection;\r\n}\r\n\r\nexport class Participant implements IParticipant {\r\n    private privAvatar: string;\r\n    private privDisplayName: string;\r\n    private privId: string;\r\n    private privIsHost: boolean;\r\n    private privIsMuted: boolean;\r\n    private privIsUsingTts: boolean;\r\n    private privPreferredLanguage: string;\r\n    private privVoice: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor(id: string, avatar: string, displayName: string, isHost: boolean, isMuted: boolean, isUsingTts: boolean, preferredLanguage: string, voice?: string) {\r\n        this.privId = id;\r\n        this.privAvatar = avatar;\r\n        this.privDisplayName = displayName;\r\n        this.privIsHost = isHost;\r\n        this.privIsMuted = isMuted;\r\n        this.privIsUsingTts = isUsingTts;\r\n        this.privPreferredLanguage = preferredLanguage;\r\n        this.privVoice = voice;\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privAvatar;\r\n    }\r\n\r\n    public get displayName(): string {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get preferredLanguage(): string {\r\n        return this.privPreferredLanguage;\r\n    }\r\n\r\n    public get isHost(): boolean {\r\n        return this.privIsHost;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n\r\n    public get isUsingTts(): boolean {\r\n        return this.privIsUsingTts;\r\n    }\r\n\r\n    public get voice(): string {\r\n        return this.privVoice;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public static From(id: string, language: string, voice: string): IParticipant {\r\n        return new Participant(id, \"\", id, false, false, false, language, voice);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nexport enum ParticipantChangedReason {\r\n    /** Participant has joined the conversation. */\r\n    JoinedConversation,\r\n\r\n    /** Participant has left the conversation. This could be voluntary, or involuntary\r\n     * (e.g. they are experiencing networking issues).\r\n     */\r\n    LeftConversation,\r\n\r\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\r\n    Updated\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCode, CancellationReason, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Define payload of speech recognition canceled result events.\r\n * @class TranslationRecognitionCanceledEventArgs\r\n */\r\nexport class TranslationRecognitionCanceledEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n    private privSessionId: string;\r\n    private privCancelReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionid - The session id.\r\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {TranslationRecognitionResult} result - The result.\r\n     */\r\n    public constructor(\r\n        sessionid: string,\r\n        cancellationReason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result: TranslationRecognitionResult) {\r\n        this.privCancelReason = cancellationReason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privResult = result;\r\n        this.privSessionId = sessionid;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n\r\n    /**\r\n     * Specifies the session identifier.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privCancelReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Translation text result event arguments.\r\n * @class TranslationRecognitionEventArgs\r\n */\r\nexport class TranslationRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult, Translations } from \"./Exports\";\r\n\r\n/**\r\n * Translation text result.\r\n * @class TranslationRecognitionResult\r\n */\r\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\r\n    private privTranslations: Translations;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {Translations} translations - The translations.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(translations: Translations, resultId?: string, reason?: ResultReason,\r\n                       text?: string, duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privTranslations = translations;\r\n    }\r\n\r\n    public static fromSpeechRecognitionResult(result: SpeechRecognitionResult): TranslationRecognitionResult {\r\n        return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\r\n    }\r\n\r\n    /**\r\n     * Presents the translation results. Each item in the dictionary represents\r\n     * a translation result in one of target languages, where the key is the name\r\n     * of the target language, in BCP-47 format, and the value is the translation\r\n     * text in the specified language.\r\n     * @member TranslationRecognitionResult.prototype.translations\r\n     * @function\r\n     * @public\r\n     * @returns {Translations} the current translation map that holds all translations requested.\r\n     */\r\n    public get translations(): Translations {\r\n        return this.privTranslations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranslationConnectionFactory,\r\n    TranslationServiceRecognizer\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Connection } from \"./Connection\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationSynthesisEventArgs\r\n} from \"./Exports\";\r\nimport { SpeechTranslationConfig, SpeechTranslationConfigImpl } from \"./SpeechTranslationConfig\";\r\n\r\n/**\r\n * Translation recognizer\r\n * @class TranslationRecognizer\r\n */\r\nexport class TranslationRecognizer extends Recognizer {\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member TranslationRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: TranslationRecognizer, event: TranslationRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event synthesizing signals that a translation synthesis result is received.\r\n     * @member TranslationRecognizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: TranslationRecognizer, event: TranslationSynthesisEventArgs) => void;\r\n\r\n    private privDisposedTranslationRecognizer: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the TranslationRecognizer.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     * @param {IConnectionFactory} connectionFactory - An optional connection factory to use to generate the endpoint URIs, headers to set, etc...\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig, connectionFactory?: IConnectionFactory) {\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, connectionFactory || new TranslationConnectionFactory());\r\n\r\n        this.privDisposedTranslationRecognizer = false;\r\n\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\r\n            Contracts.throwIfNullOrWhitespace(\r\n                this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice),\r\n                PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n        }\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\r\n            PropertyId[PropertyId.SpeechServiceConnection_TranslationToLanguages]);\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(\r\n            PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n    }\r\n\r\n    /**\r\n     * TranslationRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechTranslationConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechTranslationConfig: SpeechTranslationConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): TranslationRecognizer {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechTranslationConfigImpl.properties);\r\n        return new TranslationRecognizer(speechTranslationConfig, audioConfig);\r\n    }\r\n\r\n    /**\r\n     * Gets the language name that was set when the recognizer was created.\r\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Gets the language name that was set when the recognizer was created.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets target languages for translation that were set when the recognizer was created.\r\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\r\n     * @member TranslationRecognizer.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\r\n     */\r\n    public get targetLanguages(): string[] {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n    }\r\n\r\n    /**\r\n     * Gets the name of output voice.\r\n     * @member TranslationRecognizer.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} the name of output voice.\r\n     */\r\n    public get voiceName(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this TranslationRecognizer.\r\n     * @member TranslationRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, and stops after the first utterance is recognized.\r\n     * The task returns the translation text as result.\r\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitable only\r\n     * for single shot recognition like command or query. For long-running recognition,\r\n     * use startContinuousRecognitionAsync() instead.\r\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the translation has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: TranslationRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive translation results.\r\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous recognition and translation.\r\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * dynamically remove a language from list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\r\n     * @function\r\n     * @param lang - language to be removed\r\n     * @public\r\n     */\r\n    public removeTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            const languages: string[] = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            const index: number = languages.indexOf(lang);\r\n            if (index > -1) {\r\n                languages.splice(index, 1);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n                this.updateLanguages(languages);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * dynamically add a language to list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.addTargetLanguage\r\n     * @function\r\n     * @param lang - language to be added\r\n     * @public\r\n     */\r\n    public addTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\r\n        let languages: string[] = [];\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            languages = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            if (!languages.includes(lang)) {\r\n                languages.push(lang);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n            }\r\n        } else {\r\n            this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\r\n            languages = [lang];\r\n        }\r\n        this.updateLanguages(languages);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member TranslationRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onConnection\r\n     * @function\r\n     * @public\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public onConnection(): void { }\r\n\r\n    /**\r\n     * handles disconnection events for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onDisconnection\r\n     * @function\r\n     * @public\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public async onDisconnection(): Promise<void> { }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedTranslationRecognizer) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposedTranslationRecognizer = true;\r\n\r\n        if (disposing) {\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n\r\n    private updateLanguages(languages: string[]): void {\r\n        const conn: Connection = Connection.fromRecognizer(this);\r\n        if (!!conn) {\r\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", {to: languages});\r\n            conn.sendMessageAsync(\"event\", JSON.stringify({\r\n                id: \"translation\",\r\n                name: \"updateLanguage\",\r\n                to: languages\r\n                }));\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs, TranslationSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Translation Synthesis event arguments\r\n * @class TranslationSynthesisEventArgs\r\n */\r\nexport class TranslationSynthesisEventArgs extends SessionEventArgs {\r\n    private privResult: TranslationSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationSynthesisResult, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the translation synthesis result.\r\n     * @member TranslationSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\r\n     */\r\n    public get result(): TranslationSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ResultReason } from \"./ResultReason\";\r\n\r\n/**\r\n * Defines translation synthesis result, i.e. the voice output of the translated\r\n * text in the target language.\r\n * @class TranslationSynthesisResult\r\n */\r\nexport class TranslationSynthesisResult {\r\n    private privReason: ResultReason;\r\n    private privAudio: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ResultReason} reason - The synthesis reason.\r\n     * @param {ArrayBuffer} audio - The audio data.\r\n     */\r\n    public constructor(reason: ResultReason, audio: ArrayBuffer) {\r\n        this.privReason = reason;\r\n        this.privAudio = audio;\r\n    }\r\n\r\n    /**\r\n     * Translated text in the target language.\r\n     * @member TranslationSynthesisResult.prototype.audio\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} Translated audio in the target language.\r\n     */\r\n    public get audio(): ArrayBuffer {\r\n        return this.privAudio;\r\n    }\r\n\r\n    /**\r\n     * The synthesis status.\r\n     * @member TranslationSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} The synthesis status.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of parameters and their values.\r\n * @class Translations\r\n */\r\nexport class Translations {\r\n    // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\r\n    private privMap: PropertyCollection = new PropertyCollection();\r\n\r\n    /**\r\n     * Get the languages in the object in a String array.\r\n     * @member Translations.prototype.languages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} languages in translations object.\r\n     */\r\n    public get languages(): string[] {\r\n        return this.privMap.keys;\r\n    }\r\n\r\n    /**\r\n     * Returns the parameter value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member Translations.prototype.get\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public get(key: string, def?: string): string {\r\n        return this.privMap.getProperty(key, def);\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member Translations.prototype.set\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public set(key: string, value: string): void {\r\n        this.privMap.setProperty(key, value);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ITurnStatusResponsePayload,\r\n    TurnStatusResponsePayload\r\n    } from \"../common.speech/ServiceMessages/TurnStatusPayload\";\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class TurnStatusReceivedEventArgs\r\n */\r\nexport class TurnStatusReceivedEventArgs {\r\n    private privTurnStatus: ITurnStatusResponsePayload;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} turnStatus - The JSON-encoded turn status message.\r\n     */\r\n    public constructor(turnStatus: string) {\r\n        this.privTurnStatus = TurnStatusResponsePayload.fromJSON(turnStatus);\r\n    }\r\n\r\n    /**\r\n     * Gets the interaction identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received interaction id.\r\n     */\r\n    public get interactionId(): any {\r\n        return this.privTurnStatus.interactionId;\r\n    }\r\n\r\n    /**\r\n     * Gets the conversation identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received conversation id.\r\n     */\r\n    public get conversationId(): any {\r\n        return this.privTurnStatus.conversationId;\r\n    }\r\n\r\n    /**\r\n     * Gets the received turn status code.\r\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\r\n     * @function\r\n     * @public\r\n     * @returns {number} the received turn status.\r\n     */\r\n    public get statusCode(): number {\r\n        return this.privTurnStatus.statusCode; // eslint-disable-line @typescript-eslint/no-unsafe-return\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the gender of synthesis voices.\r\n * Added in version 1.20.0.\r\n */\r\nexport enum SynthesisVoiceGender {\r\n\r\n    /** Gender unknown */\r\n    Unknown,\r\n\r\n    /** Female voice */\r\n    Female,\r\n\r\n    /** Male voice */\r\n    Male\r\n}\r\n\r\nexport enum SynthesisVoiceType {\r\n    OnlineNeural = 1,\r\n    OnlineStandard = 2,\r\n    OfflineNeural = 3,\r\n    OfflineStandard = 4,\r\n}\r\n\r\n/**\r\n * Information about Speech Synthesis voice\r\n * Added in version 1.20.0.\r\n * @class VoiceInfo\r\n */\r\nexport class VoiceInfo {\r\n    private privName: string;\r\n    private privLocale: string;\r\n    private privShortName: string;\r\n    private privLocalName: string;\r\n    private privLocaleName: string;\r\n    private privGender: SynthesisVoiceGender;\r\n    private privVoiceType: SynthesisVoiceType;\r\n    private privStyleList: string[] = [];\r\n    private privVoicePath: string;\r\n\r\n    public constructor(json: { Name: string; LocalName: string; ShortName: string; Gender: string; VoiceType: string; LocaleName: string ; Locale: string; StyleList: string[] }) {\r\n        this.privVoicePath = \"\";\r\n        if (!!json) {\r\n            this.privName = json.Name;\r\n            this.privLocale = json.Locale;\r\n            this.privShortName = json.ShortName;\r\n            this.privLocaleName = json.LocaleName;\r\n            this.privLocalName = json.LocalName;\r\n            this.privVoiceType = json.VoiceType.endsWith(\"Standard\") ? SynthesisVoiceType.OnlineStandard : SynthesisVoiceType.OnlineNeural;\r\n            this.privGender = json.Gender === \"Male\" ? SynthesisVoiceGender.Male : json.Gender === \"Female\" ? SynthesisVoiceGender.Female : SynthesisVoiceGender.Unknown;\r\n            if (!!json.StyleList && Array.isArray(json.StyleList)) {\r\n                for (const style of json.StyleList) {\r\n                    this.privStyleList.push(style);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privLocale;\r\n    }\r\n\r\n    public get shortName(): string {\r\n        return this.privShortName;\r\n    }\r\n\r\n    public get localName(): string {\r\n        return this.privLocalName;\r\n    }\r\n\r\n    public get localeName(): string {\r\n        return this.privLocaleName;\r\n    }\r\n\r\n    public get gender(): SynthesisVoiceGender {\r\n        return this.privGender;\r\n    }\r\n\r\n    public get voiceType(): SynthesisVoiceType {\r\n        return this.privVoiceType;\r\n    }\r\n\r\n    public get styleList(): string[] {\r\n        return this.privStyleList;\r\n    }\r\n\r\n    public get voicePath(): string {\r\n        return this.privVoicePath;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { VoiceProfileType } from \"./Exports\";\r\n\r\n/**\r\n * Defines Voice Profile class for Speaker Recognition\r\n * @class VoiceProfile\r\n */\r\nexport class VoiceProfile {\r\n    private privId: string;\r\n    private privProfileType: VoiceProfileType;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} profileId - profileId of this Voice Profile.\r\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\r\n     */\r\n    public constructor(profileId: string, profileType: VoiceProfileType) {\r\n        this.privId = profileId;\r\n        this.privProfileType = profileType;\r\n    }\r\n\r\n    /**\r\n     * profileId of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileId\r\n     * @function\r\n     * @public\r\n     * @returns {string} profileId of this Voice Profile instance.\r\n     */\r\n    public get profileId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * profileType of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileType\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\r\n     */\r\n    public get profileType(): VoiceProfileType {\r\n        return this.privProfileType;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    VoiceProfileConnectionFactory,\r\n    VoiceServiceRecognizer\r\n} from \"../common.speech/Exports\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioInputStream,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    ResultReason,\r\n    VoiceProfile,\r\n    VoiceProfileEnrollmentResult,\r\n    VoiceProfilePhraseResult,\r\n    VoiceProfileResult,\r\n    VoiceProfileType\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines VoiceProfileClient class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class VoiceProfileClient\r\n */\r\nexport class VoiceProfileClient extends Recognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privVoiceAdapter: VoiceServiceRecognizer;\r\n    private privDisposedVoiceAdapter: boolean;\r\n\r\n    /**\r\n     * VoiceProfileClient constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        super(AudioConfig.fromStreamInput(AudioInputStream.createPushStream()), speechConfigImpl.properties, new VoiceProfileConnectionFactory());\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privVoiceAdapter = this.privReco as VoiceServiceRecognizer;\r\n        this.privDisposedVoiceAdapter = false;\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this VoiceProfileClient.\r\n     * @member VoiceProfileClient.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.createProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\r\n     */\r\n    public async createProfileAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfile> {\r\n        const profileIds: string[] = await this.privVoiceAdapter.createProfile(profileType, lang);\r\n        return new VoiceProfile(profileIds[0], profileType);\r\n    }\r\n\r\n    /**\r\n     * Get current information of a voice profile\r\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async retrieveEnrollmentResultAsync(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        return this.privVoiceAdapter.retrieveEnrollmentResult(profile);\r\n    }\r\n\r\n    /**\r\n     * Get all voice profiles on account with given voice profile type\r\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\r\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\r\n     */\r\n    public async getAllProfilesAsync(profileType: VoiceProfileType): Promise<VoiceProfileEnrollmentResult[]> {\r\n        return this.privVoiceAdapter.getAllProfiles(profileType);\r\n        /*\r\n        const result: { json: { value: EnrollmentResultJSON[] } } = await this.privAdapter.getProfiles(profileType);\r\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\r\n        }\r\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\r\n        */\r\n    }\r\n\r\n    /**\r\n     * Get valid authorization phrases for voice profile enrollment\r\n     * @member VoiceProfileClient.prototype.getActivationPhrasesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     */\r\n    public async getActivationPhrasesAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfilePhraseResult> {\r\n        return this.privVoiceAdapter.getActivationPhrases(profileType, lang);\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\r\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async enrollProfileAsync(profile: VoiceProfile, audioConfig: AudioConfig): Promise<VoiceProfileEnrollmentResult> {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\r\n        this.audioConfig = audioConfig;\r\n        this.privVoiceAdapter.SpeakerAudioSource = configImpl;\r\n\r\n        return this.privVoiceAdapter.enrollProfile(profile);\r\n    }\r\n\r\n    /**\r\n     * Delete a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be deleted\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async deleteProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        return this.privVoiceAdapter.deleteProfile(profile);\r\n    }\r\n\r\n    /**\r\n     * Remove all enrollments for a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.resetProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be reset\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async resetProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        return this.privVoiceAdapter.resetProfile(profile);\r\n    }\r\n\r\n    /**\r\n     * Clean up object and close underlying connection\r\n     * @member VoiceProfileClient.prototype.close\r\n     * @function\r\n     * @async\r\n     * @public\r\n     */\r\n    public async close(): Promise<void> {\r\n        await this.dispose(true);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new VoiceServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedVoiceAdapter) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposedVoiceAdapter = true;\r\n\r\n        if (disposing) {\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.properties);\r\n    }\r\n\r\n    private getResult(result: IRestResponse, successReason: ResultReason): VoiceProfileResult {\r\n        const response: VoiceProfileResult =\r\n            new VoiceProfileResult(\r\n                result.ok ? successReason : ResultReason.Canceled,\r\n                result.statusText\r\n            );\r\n        return (response);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason\r\n} from \"./Exports\";\r\n\r\nexport interface EnrollmentResultDetails {\r\n    profileId: string;\r\n    enrollmentsCount: number;\r\n    enrollmentsLength: number;\r\n    enrollmentsSpeechLength: number;\r\n    remainingEnrollmentsCount: number;\r\n    remainingEnrollmentsSpeechLength: number;\r\n    audioLength: number;\r\n    audioSpeechLength: number;\r\n    enrollmentStatus: string;\r\n}\r\n\r\nexport interface EnrollmentResultJSON {\r\n    profileId: string;\r\n    enrollmentsCount: number;\r\n    enrollmentsLength: string;\r\n    enrollmentsSpeechLength: string;\r\n    remainingEnrollmentsCount: number;\r\n    remainingEnrollmentsSpeechLength: string;\r\n    audioLength: string;\r\n    audioSpeechLength: string;\r\n    enrollmentStatus: string;\r\n    remainingEnrollments?: number;\r\n    identificationProfileId?: string;\r\n    verificationProfileId?: string;\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileEnrollmentResult\r\n */\r\nexport class VoiceProfileEnrollmentResult {\r\n    private privReason: ResultReason;\r\n    private privDetails: EnrollmentResultDetails;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, json: string, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (!!json) {\r\n                this.privDetails = JSON.parse(json) as EnrollmentResultDetails;\r\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\r\n                    this.privReason = ResultReason.EnrollingVoiceProfile;\r\n                }\r\n            }\r\n        } else {\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get enrollmentsCount(): number {\r\n        return this.privDetails.enrollmentsCount;\r\n    }\r\n\r\n    public get enrollmentsLength(): number {\r\n        return this.privDetails.enrollmentsLength;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get enrollmentResultDetails(): EnrollmentResultDetails {\r\n        return this.privDetails;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public static FromIdentificationProfileList(json: { value: EnrollmentResultJSON[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getIdentificationDetails(item) as EnrollmentResultDetails;\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public static FromVerificationProfileList(json: { value: EnrollmentResultJSON[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getVerificationDetails(item) as EnrollmentResultDetails;\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private static getIdentificationDetails(json: EnrollmentResultJSON): unknown {\r\n        return {\r\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\r\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount || 0,\r\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\r\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\r\n            profileId: json.profileId || json.identificationProfileId,\r\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\r\n        };\r\n    }\r\n\r\n    private static getVerificationDetails(json: EnrollmentResultJSON): unknown {\r\n        return {\r\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\r\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount,\r\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\r\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\r\n            profileId: json.profileId || json.verificationProfileId,\r\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\r\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileEnrollmentCancellationDetails\r\n */\r\nexport class VoiceProfileEnrollmentCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\r\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileEnrollmentResult): VoiceProfileEnrollmentCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])]; //eslint-disable-line\r\n        }\r\n\r\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ResultReason,\r\n    VoiceProfileResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfilePhraseResult\r\n */\r\nexport class VoiceProfilePhraseResult extends VoiceProfileResult {\r\n    private privPhrases: string[] = [];\r\n    private privType: string;\r\n\r\n    public constructor(reason: ResultReason, statusText: string, type: string, phraseArray: string[]) {\r\n        super(reason, statusText);\r\n        Contracts.throwIfNullOrUndefined(phraseArray, \"phrase array\");\r\n        this.privType = type;\r\n        if (!!phraseArray && !!phraseArray[0]) {\r\n            this.privPhrases = phraseArray;\r\n        }\r\n    }\r\n\r\n    public get phrases(): string[] {\r\n        return this.privPhrases;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileResult\r\n */\r\nexport class VoiceProfileResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (reason === ResultReason.Canceled) {\r\n            Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileCancellationDetails\r\n */\r\nexport class VoiceProfileCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\r\n     * @member VoiceProfileCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileResult): VoiceProfileCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])]; //eslint-disable-line\r\n        }\r\n\r\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileType\r\n */\r\nexport enum VoiceProfileType {\r\n\r\n    /**\r\n     * Text independent speaker identification\r\n     * @member VoiceProfileType.TextIndependentIdentification\r\n     */\r\n    TextIndependentIdentification,\r\n\r\n    /**\r\n     * Text dependent speaker verification\r\n     * @member VoiceProfileType.TextDependentVerification\r\n     */\r\n    TextDependentVerification,\r\n\r\n    /**\r\n     * Text independent speaker verification\r\n     * @member VoiceProfileType.TextIndependentVerification\r\n     */\r\n    TextIndependentVerification,\r\n}\r\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpenAIApi = exports.OpenAIApiFactory = exports.OpenAIApiFp = exports.OpenAIApiAxiosParamCreator = exports.CreateImageRequestResponseFormatEnum = exports.CreateImageRequestSizeEnum = exports.ChatCompletionResponseMessageRoleEnum = exports.ChatCompletionRequestMessageRoleEnum = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"./common\");\n// @ts-ignore\nconst base_1 = require(\"./base\");\nexports.ChatCompletionRequestMessageRoleEnum = {\n    System: 'system',\n    User: 'user',\n    Assistant: 'assistant',\n    Function: 'function'\n};\nexports.ChatCompletionResponseMessageRoleEnum = {\n    System: 'system',\n    User: 'user',\n    Assistant: 'assistant',\n    Function: 'function'\n};\nexports.CreateImageRequestSizeEnum = {\n    _256x256: '256x256',\n    _512x512: '512x512',\n    _1024x1024: '1024x1024'\n};\nexports.CreateImageRequestResponseFormatEnum = {\n    Url: 'url',\n    B64Json: 'b64_json'\n};\n/**\n * OpenAIApi - axios parameter creator\n * @export\n */\nexports.OpenAIApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Immediately cancel a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to cancel\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelFineTune: (fineTuneId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fineTuneId' is not null or undefined\n            common_1.assertParamExists('cancelFineTune', 'fineTuneId', fineTuneId);\n            const localVarPath = `/fine-tunes/{fine_tune_id}/cancel`\n                .replace(`{${\"fine_tune_id\"}}`, encodeURIComponent(String(fineTuneId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n         * @param {CreateAnswerRequest} createAnswerRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createAnswer: (createAnswerRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createAnswerRequest' is not null or undefined\n            common_1.assertParamExists('createAnswer', 'createAnswerRequest', createAnswerRequest);\n            const localVarPath = `/answers`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createAnswerRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a model response for the given chat conversation.\n         * @param {CreateChatCompletionRequest} createChatCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createChatCompletion: (createChatCompletionRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createChatCompletionRequest' is not null or undefined\n            common_1.assertParamExists('createChatCompletion', 'createChatCompletionRequest', createChatCompletionRequest);\n            const localVarPath = `/chat/completions`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createChatCompletionRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n         * @param {CreateClassificationRequest} createClassificationRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createClassification: (createClassificationRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createClassificationRequest' is not null or undefined\n            common_1.assertParamExists('createClassification', 'createClassificationRequest', createClassificationRequest);\n            const localVarPath = `/classifications`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createClassificationRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a completion for the provided prompt and parameters.\n         * @param {CreateCompletionRequest} createCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCompletion: (createCompletionRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createCompletionRequest' is not null or undefined\n            common_1.assertParamExists('createCompletion', 'createCompletionRequest', createCompletionRequest);\n            const localVarPath = `/completions`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createCompletionRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a new edit for the provided input, instruction, and parameters.\n         * @param {CreateEditRequest} createEditRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEdit: (createEditRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createEditRequest' is not null or undefined\n            common_1.assertParamExists('createEdit', 'createEditRequest', createEditRequest);\n            const localVarPath = `/edits`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createEditRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates an embedding vector representing the input text.\n         * @param {CreateEmbeddingRequest} createEmbeddingRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmbedding: (createEmbeddingRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createEmbeddingRequest' is not null or undefined\n            common_1.assertParamExists('createEmbedding', 'createEmbeddingRequest', createEmbeddingRequest);\n            const localVarPath = `/embeddings`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createEmbeddingRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n         * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n         * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile: (file, purpose, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'file' is not null or undefined\n            common_1.assertParamExists('createFile', 'file', file);\n            // verify required parameter 'purpose' is not null or undefined\n            common_1.assertParamExists('createFile', 'purpose', purpose);\n            const localVarPath = `/files`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (file !== undefined) {\n                localVarFormParams.append('file', file);\n            }\n            if (purpose !== undefined) {\n                localVarFormParams.append('purpose', purpose);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {CreateFineTuneRequest} createFineTuneRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFineTune: (createFineTuneRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createFineTuneRequest' is not null or undefined\n            common_1.assertParamExists('createFineTune', 'createFineTuneRequest', createFineTuneRequest);\n            const localVarPath = `/fine-tunes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createFineTuneRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates an image given a prompt.\n         * @param {CreateImageRequest} createImageRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImage: (createImageRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createImageRequest' is not null or undefined\n            common_1.assertParamExists('createImage', 'createImageRequest', createImageRequest);\n            const localVarPath = `/images/generations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createImageRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates an edited or extended image given an original image and a prompt.\n         * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n         * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n         * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageEdit: (image, prompt, mask, n, size, responseFormat, user, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'image' is not null or undefined\n            common_1.assertParamExists('createImageEdit', 'image', image);\n            // verify required parameter 'prompt' is not null or undefined\n            common_1.assertParamExists('createImageEdit', 'prompt', prompt);\n            const localVarPath = `/images/edits`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (image !== undefined) {\n                localVarFormParams.append('image', image);\n            }\n            if (mask !== undefined) {\n                localVarFormParams.append('mask', mask);\n            }\n            if (prompt !== undefined) {\n                localVarFormParams.append('prompt', prompt);\n            }\n            if (n !== undefined) {\n                localVarFormParams.append('n', n);\n            }\n            if (size !== undefined) {\n                localVarFormParams.append('size', size);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (user !== undefined) {\n                localVarFormParams.append('user', user);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a variation of a given image.\n         * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageVariation: (image, n, size, responseFormat, user, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'image' is not null or undefined\n            common_1.assertParamExists('createImageVariation', 'image', image);\n            const localVarPath = `/images/variations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (image !== undefined) {\n                localVarFormParams.append('image', image);\n            }\n            if (n !== undefined) {\n                localVarFormParams.append('n', n);\n            }\n            if (size !== undefined) {\n                localVarFormParams.append('size', size);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (user !== undefined) {\n                localVarFormParams.append('user', user);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Classifies if text violates OpenAI\\'s Content Policy\n         * @param {CreateModerationRequest} createModerationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createModeration: (createModerationRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createModerationRequest' is not null or undefined\n            common_1.assertParamExists('createModeration', 'createModerationRequest', createModerationRequest);\n            const localVarPath = `/moderations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createModerationRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n         * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n         * @param {CreateSearchRequest} createSearchRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createSearch: (engineId, createSearchRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'engineId' is not null or undefined\n            common_1.assertParamExists('createSearch', 'engineId', engineId);\n            // verify required parameter 'createSearchRequest' is not null or undefined\n            common_1.assertParamExists('createSearch', 'createSearchRequest', createSearchRequest);\n            const localVarPath = `/engines/{engine_id}/search`\n                .replace(`{${\"engine_id\"}}`, encodeURIComponent(String(engineId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createSearchRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Transcribes audio into the input language.\n         * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranscription: (file, model, prompt, responseFormat, temperature, language, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'file' is not null or undefined\n            common_1.assertParamExists('createTranscription', 'file', file);\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('createTranscription', 'model', model);\n            const localVarPath = `/audio/transcriptions`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (file !== undefined) {\n                localVarFormParams.append('file', file);\n            }\n            if (model !== undefined) {\n                localVarFormParams.append('model', model);\n            }\n            if (prompt !== undefined) {\n                localVarFormParams.append('prompt', prompt);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (temperature !== undefined) {\n                localVarFormParams.append('temperature', temperature);\n            }\n            if (language !== undefined) {\n                localVarFormParams.append('language', language);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Translates audio into into English.\n         * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranslation: (file, model, prompt, responseFormat, temperature, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'file' is not null or undefined\n            common_1.assertParamExists('createTranslation', 'file', file);\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('createTranslation', 'model', model);\n            const localVarPath = `/audio/translations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (file !== undefined) {\n                localVarFormParams.append('file', file);\n            }\n            if (model !== undefined) {\n                localVarFormParams.append('model', model);\n            }\n            if (prompt !== undefined) {\n                localVarFormParams.append('prompt', prompt);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (temperature !== undefined) {\n                localVarFormParams.append('temperature', temperature);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Delete a file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile: (fileId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fileId' is not null or undefined\n            common_1.assertParamExists('deleteFile', 'fileId', fileId);\n            const localVarPath = `/files/{file_id}`\n                .replace(`{${\"file_id\"}}`, encodeURIComponent(String(fileId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'DELETE' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n         * @param {string} model The model to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteModel: (model, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('deleteModel', 'model', model);\n            const localVarPath = `/models/{model}`\n                .replace(`{${\"model\"}}`, encodeURIComponent(String(model)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'DELETE' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Returns the contents of the specified file\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile: (fileId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fileId' is not null or undefined\n            common_1.assertParamExists('downloadFile', 'fileId', fileId);\n            const localVarPath = `/files/{file_id}/content`\n                .replace(`{${\"file_id\"}}`, encodeURIComponent(String(fileId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        listEngines: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/engines`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Returns a list of files that belong to the user\\'s organization.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFiles: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/files`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Get fine-grained status updates for a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n         * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTuneEvents: (fineTuneId, stream, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fineTuneId' is not null or undefined\n            common_1.assertParamExists('listFineTuneEvents', 'fineTuneId', fineTuneId);\n            const localVarPath = `/fine-tunes/{fine_tune_id}/events`\n                .replace(`{${\"fine_tune_id\"}}`, encodeURIComponent(String(fineTuneId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            if (stream !== undefined) {\n                localVarQueryParameter['stream'] = stream;\n            }\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary List your organization\\'s fine-tuning jobs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTunes: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/fine-tunes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listModels: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/models`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n         * @param {string} engineId The ID of the engine to use for this request\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        retrieveEngine: (engineId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'engineId' is not null or undefined\n            common_1.assertParamExists('retrieveEngine', 'engineId', engineId);\n            const localVarPath = `/engines/{engine_id}`\n                .replace(`{${\"engine_id\"}}`, encodeURIComponent(String(engineId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Returns information about a specific file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFile: (fileId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fileId' is not null or undefined\n            common_1.assertParamExists('retrieveFile', 'fileId', fileId);\n            const localVarPath = `/files/{file_id}`\n                .replace(`{${\"file_id\"}}`, encodeURIComponent(String(fileId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {string} fineTuneId The ID of the fine-tune job\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFineTune: (fineTuneId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fineTuneId' is not null or undefined\n            common_1.assertParamExists('retrieveFineTune', 'fineTuneId', fineTuneId);\n            const localVarPath = `/fine-tunes/{fine_tune_id}`\n                .replace(`{${\"fine_tune_id\"}}`, encodeURIComponent(String(fineTuneId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n         * @param {string} model The ID of the model to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveModel: (model, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('retrieveModel', 'model', model);\n            const localVarPath = `/models/{model}`\n                .replace(`{${\"model\"}}`, encodeURIComponent(String(model)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\n/**\n * OpenAIApi - functional programming interface\n * @export\n */\nexports.OpenAIApiFp = function (configuration) {\n    const localVarAxiosParamCreator = exports.OpenAIApiAxiosParamCreator(configuration);\n    return {\n        /**\n         *\n         * @summary Immediately cancel a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to cancel\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelFineTune(fineTuneId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.cancelFineTune(fineTuneId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n         * @param {CreateAnswerRequest} createAnswerRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createAnswer(createAnswerRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createAnswer(createAnswerRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a model response for the given chat conversation.\n         * @param {CreateChatCompletionRequest} createChatCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createChatCompletion(createChatCompletionRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createChatCompletion(createChatCompletionRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n         * @param {CreateClassificationRequest} createClassificationRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createClassification(createClassificationRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createClassification(createClassificationRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a completion for the provided prompt and parameters.\n         * @param {CreateCompletionRequest} createCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCompletion(createCompletionRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createCompletion(createCompletionRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a new edit for the provided input, instruction, and parameters.\n         * @param {CreateEditRequest} createEditRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEdit(createEditRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createEdit(createEditRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates an embedding vector representing the input text.\n         * @param {CreateEmbeddingRequest} createEmbeddingRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmbedding(createEmbeddingRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createEmbedding(createEmbeddingRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n         * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n         * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile(file, purpose, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createFile(file, purpose, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {CreateFineTuneRequest} createFineTuneRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFineTune(createFineTuneRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createFineTune(createFineTuneRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates an image given a prompt.\n         * @param {CreateImageRequest} createImageRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImage(createImageRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createImage(createImageRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates an edited or extended image given an original image and a prompt.\n         * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n         * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n         * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageEdit(image, prompt, mask, n, size, responseFormat, user, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createImageEdit(image, prompt, mask, n, size, responseFormat, user, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a variation of a given image.\n         * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageVariation(image, n, size, responseFormat, user, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createImageVariation(image, n, size, responseFormat, user, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Classifies if text violates OpenAI\\'s Content Policy\n         * @param {CreateModerationRequest} createModerationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createModeration(createModerationRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createModeration(createModerationRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n         * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n         * @param {CreateSearchRequest} createSearchRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createSearch(engineId, createSearchRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createSearch(engineId, createSearchRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Transcribes audio into the input language.\n         * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranscription(file, model, prompt, responseFormat, temperature, language, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createTranscription(file, model, prompt, responseFormat, temperature, language, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Translates audio into into English.\n         * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranslation(file, model, prompt, responseFormat, temperature, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createTranslation(file, model, prompt, responseFormat, temperature, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Delete a file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile(fileId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.deleteFile(fileId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n         * @param {string} model The model to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteModel(model, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.deleteModel(model, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Returns the contents of the specified file\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile(fileId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.downloadFile(fileId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        listEngines(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listEngines(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Returns a list of files that belong to the user\\'s organization.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFiles(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listFiles(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Get fine-grained status updates for a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n         * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTuneEvents(fineTuneId, stream, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listFineTuneEvents(fineTuneId, stream, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary List your organization\\'s fine-tuning jobs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTunes(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listFineTunes(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listModels(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listModels(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n         * @param {string} engineId The ID of the engine to use for this request\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        retrieveEngine(engineId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveEngine(engineId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Returns information about a specific file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFile(fileId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveFile(fileId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {string} fineTuneId The ID of the fine-tune job\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFineTune(fineTuneId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveFineTune(fineTuneId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n         * @param {string} model The ID of the model to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveModel(model, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveModel(model, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\n/**\n * OpenAIApi - factory interface\n * @export\n */\nexports.OpenAIApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = exports.OpenAIApiFp(configuration);\n    return {\n        /**\n         *\n         * @summary Immediately cancel a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to cancel\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelFineTune(fineTuneId, options) {\n            return localVarFp.cancelFineTune(fineTuneId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n         * @param {CreateAnswerRequest} createAnswerRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createAnswer(createAnswerRequest, options) {\n            return localVarFp.createAnswer(createAnswerRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a model response for the given chat conversation.\n         * @param {CreateChatCompletionRequest} createChatCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createChatCompletion(createChatCompletionRequest, options) {\n            return localVarFp.createChatCompletion(createChatCompletionRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n         * @param {CreateClassificationRequest} createClassificationRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createClassification(createClassificationRequest, options) {\n            return localVarFp.createClassification(createClassificationRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a completion for the provided prompt and parameters.\n         * @param {CreateCompletionRequest} createCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCompletion(createCompletionRequest, options) {\n            return localVarFp.createCompletion(createCompletionRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a new edit for the provided input, instruction, and parameters.\n         * @param {CreateEditRequest} createEditRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEdit(createEditRequest, options) {\n            return localVarFp.createEdit(createEditRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates an embedding vector representing the input text.\n         * @param {CreateEmbeddingRequest} createEmbeddingRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmbedding(createEmbeddingRequest, options) {\n            return localVarFp.createEmbedding(createEmbeddingRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n         * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n         * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile(file, purpose, options) {\n            return localVarFp.createFile(file, purpose, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {CreateFineTuneRequest} createFineTuneRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFineTune(createFineTuneRequest, options) {\n            return localVarFp.createFineTune(createFineTuneRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates an image given a prompt.\n         * @param {CreateImageRequest} createImageRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImage(createImageRequest, options) {\n            return localVarFp.createImage(createImageRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates an edited or extended image given an original image and a prompt.\n         * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n         * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n         * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageEdit(image, prompt, mask, n, size, responseFormat, user, options) {\n            return localVarFp.createImageEdit(image, prompt, mask, n, size, responseFormat, user, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a variation of a given image.\n         * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageVariation(image, n, size, responseFormat, user, options) {\n            return localVarFp.createImageVariation(image, n, size, responseFormat, user, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Classifies if text violates OpenAI\\'s Content Policy\n         * @param {CreateModerationRequest} createModerationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createModeration(createModerationRequest, options) {\n            return localVarFp.createModeration(createModerationRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n         * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n         * @param {CreateSearchRequest} createSearchRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createSearch(engineId, createSearchRequest, options) {\n            return localVarFp.createSearch(engineId, createSearchRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Transcribes audio into the input language.\n         * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranscription(file, model, prompt, responseFormat, temperature, language, options) {\n            return localVarFp.createTranscription(file, model, prompt, responseFormat, temperature, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Translates audio into into English.\n         * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranslation(file, model, prompt, responseFormat, temperature, options) {\n            return localVarFp.createTranslation(file, model, prompt, responseFormat, temperature, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Delete a file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile(fileId, options) {\n            return localVarFp.deleteFile(fileId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n         * @param {string} model The model to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteModel(model, options) {\n            return localVarFp.deleteModel(model, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Returns the contents of the specified file\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile(fileId, options) {\n            return localVarFp.downloadFile(fileId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        listEngines(options) {\n            return localVarFp.listEngines(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Returns a list of files that belong to the user\\'s organization.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFiles(options) {\n            return localVarFp.listFiles(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Get fine-grained status updates for a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n         * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTuneEvents(fineTuneId, stream, options) {\n            return localVarFp.listFineTuneEvents(fineTuneId, stream, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary List your organization\\'s fine-tuning jobs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTunes(options) {\n            return localVarFp.listFineTunes(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listModels(options) {\n            return localVarFp.listModels(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n         * @param {string} engineId The ID of the engine to use for this request\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        retrieveEngine(engineId, options) {\n            return localVarFp.retrieveEngine(engineId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Returns information about a specific file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFile(fileId, options) {\n            return localVarFp.retrieveFile(fileId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {string} fineTuneId The ID of the fine-tune job\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFineTune(fineTuneId, options) {\n            return localVarFp.retrieveFineTune(fineTuneId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n         * @param {string} model The ID of the model to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveModel(model, options) {\n            return localVarFp.retrieveModel(model, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n/**\n * OpenAIApi - object-oriented interface\n * @export\n * @class OpenAIApi\n * @extends {BaseAPI}\n */\nclass OpenAIApi extends base_1.BaseAPI {\n    /**\n     *\n     * @summary Immediately cancel a fine-tune job.\n     * @param {string} fineTuneId The ID of the fine-tune job to cancel\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    cancelFineTune(fineTuneId, options) {\n        return exports.OpenAIApiFp(this.configuration).cancelFineTune(fineTuneId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n     * @param {CreateAnswerRequest} createAnswerRequest\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createAnswer(createAnswerRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createAnswer(createAnswerRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a model response for the given chat conversation.\n     * @param {CreateChatCompletionRequest} createChatCompletionRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createChatCompletion(createChatCompletionRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createChatCompletion(createChatCompletionRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n     * @param {CreateClassificationRequest} createClassificationRequest\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createClassification(createClassificationRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createClassification(createClassificationRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a completion for the provided prompt and parameters.\n     * @param {CreateCompletionRequest} createCompletionRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createCompletion(createCompletionRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createCompletion(createCompletionRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a new edit for the provided input, instruction, and parameters.\n     * @param {CreateEditRequest} createEditRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createEdit(createEditRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createEdit(createEditRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates an embedding vector representing the input text.\n     * @param {CreateEmbeddingRequest} createEmbeddingRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createEmbedding(createEmbeddingRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createEmbedding(createEmbeddingRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n     * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n     * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createFile(file, purpose, options) {\n        return exports.OpenAIApiFp(this.configuration).createFile(file, purpose, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n     * @param {CreateFineTuneRequest} createFineTuneRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createFineTune(createFineTuneRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createFineTune(createFineTuneRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates an image given a prompt.\n     * @param {CreateImageRequest} createImageRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createImage(createImageRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createImage(createImageRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates an edited or extended image given an original image and a prompt.\n     * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n     * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n     * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n     * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n     * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n     * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n     * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createImageEdit(image, prompt, mask, n, size, responseFormat, user, options) {\n        return exports.OpenAIApiFp(this.configuration).createImageEdit(image, prompt, mask, n, size, responseFormat, user, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a variation of a given image.\n     * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n     * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n     * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n     * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n     * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createImageVariation(image, n, size, responseFormat, user, options) {\n        return exports.OpenAIApiFp(this.configuration).createImageVariation(image, n, size, responseFormat, user, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Classifies if text violates OpenAI\\'s Content Policy\n     * @param {CreateModerationRequest} createModerationRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createModeration(createModerationRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createModeration(createModerationRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n     * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n     * @param {CreateSearchRequest} createSearchRequest\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createSearch(engineId, createSearchRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createSearch(engineId, createSearchRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Transcribes audio into the input language.\n     * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n     * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n     * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n     * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n     * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n     * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createTranscription(file, model, prompt, responseFormat, temperature, language, options) {\n        return exports.OpenAIApiFp(this.configuration).createTranscription(file, model, prompt, responseFormat, temperature, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Translates audio into into English.\n     * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n     * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n     * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n     * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n     * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createTranslation(file, model, prompt, responseFormat, temperature, options) {\n        return exports.OpenAIApiFp(this.configuration).createTranslation(file, model, prompt, responseFormat, temperature, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Delete a file.\n     * @param {string} fileId The ID of the file to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    deleteFile(fileId, options) {\n        return exports.OpenAIApiFp(this.configuration).deleteFile(fileId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n     * @param {string} model The model to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    deleteModel(model, options) {\n        return exports.OpenAIApiFp(this.configuration).deleteModel(model, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Returns the contents of the specified file\n     * @param {string} fileId The ID of the file to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    downloadFile(fileId, options) {\n        return exports.OpenAIApiFp(this.configuration).downloadFile(fileId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listEngines(options) {\n        return exports.OpenAIApiFp(this.configuration).listEngines(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Returns a list of files that belong to the user\\'s organization.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listFiles(options) {\n        return exports.OpenAIApiFp(this.configuration).listFiles(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Get fine-grained status updates for a fine-tune job.\n     * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n     * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listFineTuneEvents(fineTuneId, stream, options) {\n        return exports.OpenAIApiFp(this.configuration).listFineTuneEvents(fineTuneId, stream, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary List your organization\\'s fine-tuning jobs\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listFineTunes(options) {\n        return exports.OpenAIApiFp(this.configuration).listFineTunes(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listModels(options) {\n        return exports.OpenAIApiFp(this.configuration).listModels(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n     * @param {string} engineId The ID of the engine to use for this request\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveEngine(engineId, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveEngine(engineId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Returns information about a specific file.\n     * @param {string} fileId The ID of the file to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveFile(fileId, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveFile(fileId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n     * @param {string} fineTuneId The ID of the fine-tune job\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveFineTune(fineTuneId, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveFineTune(fineTuneId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n     * @param {string} model The ID of the model to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveModel(model, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveModel(model, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.OpenAIApi = OpenAIApi;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;\nconst axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://api.openai.com/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nclass BaseAPI {\n    constructor(configuration, basePath = exports.BASE_PATH, axios = axios_1.default) {\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n}\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = \"RequiredError\";\n    }\n}\nexports.RequiredError = RequiredError;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestFunction = exports.toPathString = exports.serializeDataIfNeeded = exports.setSearchParams = exports.setOAuthToObject = exports.setBearerAuthToObject = exports.setBasicAuthToObject = exports.setApiKeyToObject = exports.assertParamExists = exports.DUMMY_BASE_URL = void 0;\nconst base_1 = require(\"./base\");\n/**\n *\n * @export\n */\nexports.DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexports.assertParamExists = function (functionName, paramName, paramValue) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new base_1.RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n};\n/**\n *\n * @export\n */\nexports.setApiKeyToObject = function (object, keyParamName, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.apiKey) {\n            const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n                ? yield configuration.apiKey(keyParamName)\n                : yield configuration.apiKey;\n            object[keyParamName] = localVarApiKeyValue;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setBasicAuthToObject = function (object, configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n};\n/**\n *\n * @export\n */\nexports.setBearerAuthToObject = function (object, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const accessToken = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken()\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + accessToken;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setOAuthToObject = function (object, name, scopes, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken(name, scopes)\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n        }\n    });\n};\nfunction setFlattenedQueryParams(urlSearchParams, parameter, key = \"\") {\n    if (parameter == null)\n        return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        }\n        else {\n            Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n        }\n    }\n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        }\n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n/**\n *\n * @export\n */\nexports.setSearchParams = function (url, ...objects) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n};\n/**\n *\n * @export\n */\nexports.serializeDataIfNeeded = function (value, requestOptions, configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n};\n/**\n *\n * @export\n */\nexports.toPathString = function (url) {\n    return url.pathname + url.search + url.hash;\n};\n/**\n *\n * @export\n */\nexports.createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n    return (axios = globalAxios, basePath = BASE_PATH) => {\n        const axiosRequestArgs = Object.assign(Object.assign({}, axiosArgs.options), { url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url });\n        return axios.request(axiosRequestArgs);\n    };\n};\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nconst packageJson = require(\"../package.json\");\nclass Configuration {\n    constructor(param = {}) {\n        this.apiKey = param.apiKey;\n        this.organization = param.organization;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n        this.formDataCtor = param.formDataCtor;\n        if (!this.baseOptions) {\n            this.baseOptions = {};\n        }\n        this.baseOptions.headers = Object.assign({ 'User-Agent': `OpenAI/NodeJS/${packageJson.version}`, 'Authorization': `Bearer ${this.apiKey}` }, this.baseOptions.headers);\n        if (this.organization) {\n            this.baseOptions.headers['OpenAI-Organization'] = this.organization;\n        }\n        if (!this.formDataCtor) {\n            this.formDataCtor = require(\"form-data\");\n        }\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\nexports.Configuration = Configuration;\n","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./configuration\"), exports);\n","import * as wasm from \"./tiktoken_bg.wasm\";\nimport { __wbg_set_wasm } from \"./tiktoken_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./tiktoken_bg.js\";\n","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} encoding\n* @param {any} extend_special_tokens\n* @returns {Tiktoken}\n*/\nexport function get_encoding(encoding, extend_special_tokens) {\n    if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(encoding, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.get_encoding(retptr, ptr0, len0, addHeapObject(extend_special_tokens));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return Tiktoken.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} model\n* @param {any} extend_special_tokens\n* @returns {Tiktoken}\n*/\nexport function encoding_for_model(model, extend_special_tokens) {\n    if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(model, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.encoding_for_model(retptr, ptr0, len0, addHeapObject(extend_special_tokens));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return Tiktoken.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_export_3(addHeapObject(e));\n    }\n}\n\nconst TiktokenFinalization = new FinalizationRegistry(ptr => wasm.__wbg_tiktoken_free(ptr >>> 0));\n/**\n*/\nexport class Tiktoken {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Tiktoken.prototype);\n        obj.__wbg_ptr = ptr;\n        TiktokenFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        TiktokenFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_tiktoken_free(ptr);\n    }\n    /**\n    * @param {string} tiktoken_bfe\n    * @param {any} special_tokens\n    * @param {string} pat_str\n    */\n    constructor(tiktoken_bfe, special_tokens, pat_str) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        const ptr0 = passStringToWasm0(tiktoken_bfe, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(pat_str, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.tiktoken_new(ptr0, len0, addHeapObject(special_tokens), ptr1, len1);\n        return Tiktoken.__wrap(ret);\n    }\n    /**\n    * @returns {string | undefined}\n    */\n    get name() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.tiktoken_name(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v1;\n            if (r0 !== 0) {\n                v1 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_export_2(r0, r1 * 1);\n            }\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} text\n    * @param {any} allowed_special\n    * @param {any} disallowed_special\n    * @returns {Uint32Array}\n    */\n    encode(text, allowed_special, disallowed_special) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(text, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.tiktoken_encode(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(allowed_special), addHeapObject(disallowed_special));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            if (r3) {\n                throw takeObject(r2);\n            }\n            var v2 = getArrayU32FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_2(r0, r1 * 4);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} text\n    * @returns {Uint32Array}\n    */\n    encode_ordinary(text) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(text, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.tiktoken_encode_ordinary(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v2 = getArrayU32FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_2(r0, r1 * 4);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} text\n    * @param {any} allowed_special\n    * @param {any} disallowed_special\n    * @returns {any}\n    */\n    encode_with_unstable(text, allowed_special, disallowed_special) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(text, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.tiktoken_encode_with_unstable(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(allowed_special), addHeapObject(disallowed_special));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {number}\n    */\n    encode_single_token(bytes) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        const ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_export_0);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.tiktoken_encode_single_token(this.__wbg_ptr, ptr0, len0);\n        return ret >>> 0;\n    }\n    /**\n    * @param {Uint32Array} tokens\n    * @returns {Uint8Array}\n    */\n    decode(tokens) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray32ToWasm0(tokens, wasm.__wbindgen_export_0);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.tiktoken_decode(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v2 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_2(r0, r1 * 1);\n            return v2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} token\n    * @returns {Uint8Array}\n    */\n    decode_single_token_bytes(token) {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.tiktoken_decode_single_token_bytes(retptr, this.__wbg_ptr, token);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_2(r0, r1 * 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    token_byte_values() {\n        if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n        const ret = wasm.tiktoken_token_byte_values(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_stringify_e25465938f3f611f() { return handleError(function (arg0) {\n    const ret = JSON.stringify(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_string_get(arg0, arg1) {\n    if (wasm == null) throw new Error(\"tiktoken: WASM binary has not been propery initialized.\");\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    var len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_error_new(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_parse_670c19d4e984792e() { return handleError(function (arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","const getWaveBlob = require(\"./wavBlobUtil\");\r\nconst downloadWav = require(\"./downloadUtil\");\r\n\r\n/** Class Representing a WavRecorder */\r\nclass WavRecorder {\r\n    /**\r\n     * @property {MediaRecorder} mediaRecorder - MediaRecorder instance\r\n     */\r\n    mediaRecorder;\r\n\r\n    /**\r\n     * @property {MediaStream} - stream User's MediaStream\r\n     */\r\n    stream;\r\n\r\n    /**\r\n     * @property {Blob} __data - Recorded WEBM data\r\n     */\r\n    __data;\r\n\r\n    /**\r\n     * Access user media from the audio input, will be asking audio permission if not available already\r\n     * @param {MediaTrackConstraints} constraints - MediaTrackConstraints to be applied, if any defaults = { audio: true, video: false }\r\n     * @return - Got User MediaStream or not\r\n     */\r\n    async start(constraints = { audio: true, video: false }) {\r\n        if (this.mediaRecorder?.state === \"recording\") return true;\r\n\r\n        const mediaTrackConstraints = constraints || { audio: true, video: false };\r\n\r\n        try {\r\n            this.stream = await navigator.mediaDevices.getUserMedia(mediaTrackConstraints);\r\n\r\n            this.mediaRecorder = new MediaRecorder(this.stream);\r\n\r\n            this.mediaRecorder.ondataavailable = (e) => this.__data = e.data;\r\n        } catch (err) {\r\n            console.error(err);\r\n            return false;\r\n        }\r\n\r\n        this.mediaRecorder?.start();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Stop recording the audio\r\n     * @returns {void}\r\n     */\r\n    stop() {\r\n        if (this.mediaRecorder?.state !== \"recording\") return true;\r\n\r\n        this.mediaRecorder.stop();\r\n        this.mediaRecorder.onstop = () => {\r\n            this.stream.getTracks().forEach(track => track.stop());\r\n            this.mediaRecorder = undefined;\r\n            this.stream = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Download the wav audio file\r\n     * @param {string} filename - Optional name of the file to be downloaded, without extension \r\n     * @param {boolean} as32Bit - Audio required in 32-bit, default is 16-bit.\r\n     * @param {AudioContextOptions} contextOptions - optiosn needs to be used for encoding\r\n     * @returns {void}\r\n     */\r\n    async download(\r\n        filename = null, as32Bit = false, contextOptions = undefined\r\n    ) {\r\n        if (this.__data) return await downloadWav(this.__data, as32Bit, filename, contextOptions);\r\n    }\r\n\r\n    /**\r\n     * Get the recorded wav audio Blob\r\n     * @param {boolean} as32Bit - Get 32-bit audio, default is 16-bit\r\n     * @param {AudioContextOptions} contextOptions - optiosn needs to be used for encoding\r\n     * @returns {void}\r\n     */\r\n    async getBlob(as32Bit = false, contextOptions = undefined) {\r\n        if (this.__data) return await getWaveBlob(this.__data, as32Bit, contextOptions);\r\n    }\r\n}\r\n\r\nmodule.exports = WavRecorder;","const getWaveBlob = require(\"./wavBlobUtil\");\r\n\r\n/**\r\n * @param {Blob | Blob[]} blobData - Blob or Blob[] to be converted to audio/wave Blob\r\n * @param {boolean} as32BitFloat - Convert to 16-bit or 32-bit file\r\n * @param {string} filename - Name of the file\r\n * @param {AudioContextOptions} contextOptions - audio context options for encoding\r\n * @returns\r\n */\r\nasync function downloadWav(\r\n    blobData, as32BitFloat, filename = null, contextOptions = undefined\r\n) {\r\n    const blob = await getWaveBlob(blobData, as32BitFloat, contextOptions);\r\n\r\n    const anchorElement = document.createElement('a');\r\n    anchorElement.href = window.URL.createObjectURL(blob);\r\n    anchorElement.download = filename || `recording('${as32BitFloat ? '32bit' : '16bit'}).wav`;\r\n    anchorElement.style.display = 'none';\r\n    document.body.appendChild(anchorElement);\r\n    anchorElement.click();\r\n    document.body.removeChild(anchorElement);\r\n}\r\n\r\nmodule.exports = downloadWav;","module.exports.WavRecorder = require(\"./WavRecorder\");\r\nmodule.exports.getWaveBlob = require(\"./wavBlobUtil\");\r\nmodule.exports.downloadWav = require(\"./downloadUtil\");","function _writeStringToArray(aString, targetArray, offset) {\r\n    for (let i = 0; i < aString.length; ++i)\r\n        targetArray[offset + i] = aString.charCodeAt(i);\r\n}\r\n\r\nfunction _writeInt16ToArray(aNumber, targetArray, offset) {\r\n    aNumber = Math.floor(aNumber);\r\n    targetArray[offset + 0] = aNumber & 255;          // byte 1\r\n    targetArray[offset + 1] = (aNumber >> 8) & 255;   // byte 2\r\n}\r\n\r\nfunction _writeInt32ToArray(aNumber, targetArray, offset) {\r\n    aNumber = Math.floor(aNumber);\r\n    targetArray[offset + 0] = aNumber & 255;          // byte 1\r\n    targetArray[offset + 1] = (aNumber >> 8) & 255;   // byte 2\r\n    targetArray[offset + 2] = (aNumber >> 16) & 255;  // byte 3\r\n    targetArray[offset + 3] = (aNumber >> 24) & 255;  // byte 4\r\n}\r\n\r\n// Return the bits of the float as a 32-bit integer value.  This\r\n// produces the raw bits; no intepretation of the value is done.\r\nfunction _floatBits(f) {\r\n    const buf = new ArrayBuffer(4);\r\n    (new Float32Array(buf))[0] = f;\r\n    const bits = (new Uint32Array(buf))[0];\r\n    // Return as a signed integer.\r\n    return bits | 0;\r\n}\r\n\r\nfunction _writeAudioBufferToArray(\r\n    audioBuffer,\r\n    targetArray,\r\n    offset,\r\n    bitDepth\r\n) {\r\n    let index = 0, channel = 0;\r\n    const length = audioBuffer.length;\r\n    const channels = audioBuffer.numberOfChannels;\r\n    let channelData, sample;\r\n\r\n    // Clamping samples onto the 16-bit resolution.\r\n    for (index = 0; index < length; ++index) {\r\n        for (channel = 0; channel < channels; ++channel) {\r\n            channelData = audioBuffer.getChannelData(channel);\r\n\r\n            // Branches upon the requested bit depth\r\n            if (bitDepth === 16) {\r\n                sample = channelData[index] * 32768.0;\r\n                if (sample < -32768)\r\n                    sample = -32768;\r\n                else if (sample > 32767)\r\n                    sample = 32767;\r\n                _writeInt16ToArray(sample, targetArray, offset);\r\n                offset += 2;\r\n            } else if (bitDepth === 32) {\r\n                // This assumes we're going to out 32-float, not 32-bit linear.\r\n                sample = _floatBits(channelData[index]);\r\n                _writeInt32ToArray(sample, targetArray, offset);\r\n                offset += 4;\r\n            } else {\r\n                console.log('Invalid bit depth for PCM encoding.');\r\n                return;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n// Converts the Blob data to AudioBuffer\r\nasync function _getAudioBuffer(blobData, contextOptions = undefined) {\r\n    let blob = blobData;\r\n\r\n    if (!(blob instanceof Blob)) blob = new Blob([blobData]);\r\n\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const response = await fetch(url);\r\n\r\n    const arrayBuffer = await response.arrayBuffer();\r\n\r\n    const audioContext = new AudioContext(contextOptions);\r\n\r\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer)\r\n\r\n    return audioBuffer;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Blob | Blob[]} blobData - Blob or Blob[] to be converted to audio/wave Blob\r\n * @param {boolean} as32BitFloat - Convert to 16-bit or 32-bit file, default 16-bit\r\n * @param {AudioContextOptions} contextOptions - optiosn needs to be used for encoding\r\n * @returns \r\n */\r\nasync function getWaveBlob(\r\n    blobData, as32BitFloat, contextOptions = undefined\r\n) {\r\n    const audioBuffer = await _getAudioBuffer(blobData, contextOptions);\r\n\r\n    // Encoding setup.\r\n    const frameLength = audioBuffer.length;\r\n    const numberOfChannels = audioBuffer.numberOfChannels;\r\n    const sampleRate = audioBuffer.sampleRate;\r\n    const bitsPerSample = as32BitFloat ? 32 : 16;\r\n    const bytesPerSample = bitsPerSample / 8;\r\n    const byteRate = sampleRate * numberOfChannels * bitsPerSample / 8;\r\n    const blockAlign = numberOfChannels * bitsPerSample / 8;\r\n    const wavDataByteLength = frameLength * numberOfChannels * bytesPerSample;\r\n    const headerByteLength = 44;\r\n    const totalLength = headerByteLength + wavDataByteLength;\r\n    const waveFileData = new Uint8Array(totalLength);\r\n    const subChunk1Size = 16;\r\n    const subChunk2Size = wavDataByteLength;\r\n    const chunkSize = 4 + (8 + subChunk1Size) + (8 + subChunk2Size);\r\n\r\n    _writeStringToArray('RIFF', waveFileData, 0);\r\n    _writeInt32ToArray(chunkSize, waveFileData, 4);\r\n    _writeStringToArray('WAVE', waveFileData, 8);\r\n    _writeStringToArray('fmt ', waveFileData, 12);\r\n\r\n    // SubChunk1Size (4)\r\n    _writeInt32ToArray(subChunk1Size, waveFileData, 16);\r\n    // AudioFormat (2): 3 means 32-bit float, 1 means integer PCM.\r\n    _writeInt16ToArray(as32BitFloat ? 3 : 1, waveFileData, 20);\r\n    // NumChannels (2)\r\n    _writeInt16ToArray(numberOfChannels, waveFileData, 22);\r\n    // SampleRate (4)\r\n    _writeInt32ToArray(sampleRate, waveFileData, 24);\r\n    // ByteRate (4)\r\n    _writeInt32ToArray(byteRate, waveFileData, 28);\r\n    // BlockAlign (2)\r\n    _writeInt16ToArray(blockAlign, waveFileData, 32);\r\n    // BitsPerSample (4)\r\n    _writeInt32ToArray(bitsPerSample, waveFileData, 34);\r\n    _writeStringToArray('data', waveFileData, 36);\r\n    // SubChunk2Size (4)\r\n    _writeInt32ToArray(subChunk2Size, waveFileData, 40);\r\n\r\n    // Write actual audio data starting at offset 44.\r\n    _writeAudioBufferToArray(audioBuffer, waveFileData, 44, bitsPerSample);\r\n\r\n    return new Blob([waveFileData], {\r\n        type: 'audio/wave'\r\n    });\r\n}\r\n\r\nmodule.exports = getWaveBlob;\r\n","class AMRecorder {\r\n    constructor (start, stop) {\r\n        // state: init | trans | rec | shot | err\r\n        this.state = \"init\";\r\n        this.start = start;\r\n        this.stop = stop;\r\n    }\r\n\r\n    toInit() {\r\n        switch (this.state) {\r\n            case \"init\":\r\n                return true;\r\n            case \"rec\":\r\n            case \"shot\":\r\n                var res = this.stop();\r\n                if (res) {\r\n                    this.state = \"init\";\r\n                    return true;\r\n                } else {\r\n                    this.state = \"err\";\r\n                    return false;\r\n                }\r\n            default:\r\n                this.state = \"err\";\r\n                return false;\r\n        }\r\n    }\r\n\r\n    toTrans() {\r\n        switch (this.state)  {\r\n            case \"init\":\r\n                var res = this.start();\r\n                if (res) {\r\n                    this.state = \"trans\";\r\n                    return true;\r\n                } else {\r\n                    this.state = \"err\";\r\n                    return false;\r\n                }\r\n            default:\r\n                this.state = \"err\";\r\n                return false;\r\n        }\r\n    }\r\n\r\n    toRec() {\r\n        switch (this.state) {\r\n            case \"trans\":\r\n                this.state = \"rec\";\r\n                return true;\r\n            default:\r\n                this.state = \"err\";\r\n                return false;\r\n        }\r\n    }\r\n\r\n    toShot() {\r\n        switch (this.state) {\r\n            case \"trans\":\r\n                this.state = \"shot\";\r\n                return true;\r\n            default:\r\n                this.state = \"err\";\r\n                return false;\r\n        }\r\n    }\r\n\r\n    isRecording() {\r\n        switch (this.state) {\r\n            case \"init\":\r\n                return false;\r\n            case \"trans\":\r\n            case \"rec\":\r\n            case \"shot\":\r\n                return true;\r\n            case \"err\":\r\n                return false;\r\n        }\r\n    }\r\n\r\n    isErr() {\r\n        return (this.state == \"err\");\r\n    }\r\n\r\n    reset() {\r\n        this.state = \"init\";\r\n    }\r\n}\r\n\r\nexport default AMRecorder;\r\n","const SDK = require(\"microsoft-cognitiveservices-speech-sdk\");\r\nimport { SpeechConfig, SpeechRecognizer, AudioConfig } from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport Credential from \"./Credential\";\r\nimport Conversation from \"./Conversation\";\r\n\r\nconst API = (function() {\r\n    let secret = undefined;\r\n    let speechConfig = undefined;\r\n    let openaiClient = undefined;\r\n\r\n    return class {\r\n        constructor() {\r\n            this.speech_key = new Credential(\"speech_key\");\r\n            this.speech_region = new Credential(\"speech_region\");\r\n            this.openai_key = new Credential(\"openai_key\");\r\n        }\r\n\r\n        init() {\r\n            const speech_key = this.speech_key.load(secret);\r\n            const speech_region = this.speech_region.load(secret);\r\n            speechConfig = SpeechConfig.fromSubscription(speech_key, speech_region);\r\n            speechConfig.speechRecognitionLanguage = \"ja-JP\";\r\n\r\n            const openai_key = this.openai_key.load(secret);\r\n            const openaiConfig = new Configuration({\r\n                apiKey: openai_key\r\n            });\r\n            openaiClient = new OpenAIApi(openaiConfig);\r\n        }\r\n\r\n        ready() {\r\n            return (!!speechConfig) && (!!openaiClient);\r\n        }\r\n\r\n        signup(speech_key, speech_region, openai_key, passwd) {\r\n            this.speech_key.store(speech_key, passwd);\r\n            this.speech_region.store(speech_region, passwd);\r\n            this.openai_key.store(openai_key, passwd);\r\n            secret = passwd;\r\n            this.init();\r\n        }\r\n\r\n        logout() {\r\n            secret = undefined;\r\n            speechConfig = undefined;\r\n            openaiClient = undefined;\r\n        }\r\n\r\n        login(passwd) {\r\n            if (!this.speech_key.login(passwd)) {\r\n                return false;\r\n            }\r\n            if (!this.speech_region.login(passwd)) {\r\n                return false;\r\n            }\r\n            if (!this.openai_key.login(passwd)) {\r\n                return false;\r\n            }\r\n            secret = passwd;\r\n            this.init();\r\n            return true;\r\n        }\r\n\r\n        loggedin() {\r\n            if (!secret) {\r\n                return false;\r\n            }\r\n\r\n            return this.login(secret);\r\n        }\r\n\r\n        exists() {\r\n            if (!this.speech_key.exists()) {\r\n                return false;\r\n            }\r\n            if (!this.speech_region.exists()) {\r\n                return false;\r\n            }\r\n            if (!this.openai_key.exists()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        async recognize(file) {\r\n            if (!this.ready()) {\r\n                return null;\r\n            }\r\n\r\n            let audioConfig = AudioConfig.fromWavFileInput(file);\r\n            let speechRecognizer = new SpeechRecognizer(speechConfig, audioConfig);\r\n\r\n            return new Promise((resolve, reject) => {\r\n                speechRecognizer.recognizeOnceAsync(result => {\r\n                    switch (result.reason) {\r\n                        case SDK.ResultReason.RecognizedSpeech:\r\n                            resolve(result.text);\r\n                            break;\r\n                        case SDK.ResultReason.NoMatch:\r\n                            console.log(\"NOMATCH: Speech could not be recognized.\");\r\n                            reject(result);\r\n                            break\r\n                        case SDK.ResultReason.Canceled:\r\n                            const cancellation = SDK.CancellationDetails.fromResult(result);\r\n                            console.log(`CANCELED: Reason=${cancellation.reason}`);\r\n\r\n                            if (cancellation.reason == SDK.CancellationReason.Error) {\r\n                                console.log(`CANCELED: ErrorCode=${cancellation.ErrorCode}`);\r\n                                console.log(`CANCELED: ErrorDetails=${cancellation.errorDetails}`);\r\n                                console.log(\"CANCELED: Did you set the speech resource key and region values?\");\r\n                            }\r\n                            reject(result);\r\n                            break;\r\n                    }\r\n                    speechRecognizer.close();\r\n                });\r\n            });\r\n        }\r\n\r\n        conversation(context=[], model=\"gpt-3.5-turbo\") {\r\n            if (!this.ready()) {\r\n                return null;\r\n            }\r\n\r\n            return new Conversation(openaiClient, context, model);\r\n        }\r\n\r\n        debug() {\r\n            if (!this.loggedin()) {\r\n                return null;\r\n            }\r\n\r\n            const speech_key = this.speech_key.load(secret);\r\n            const speech_region = this.speech_region.load(secret);\r\n            const openai_key = this.openai_key.load(secret);\r\n\r\n            //\r\n            // Commented out for security reason.\r\n            //\r\n            // console.log([speech_key, speech_region, openai_key]);\r\n        }\r\n    };\r\n})();\r\n\r\nexport default API;\r\n","class BtnControl {\r\n    constructor(button, onDown, onLong, onUp, thTime=500) {\r\n        this.button = button;\r\n        this.thTime = thTime;\r\n        this.isDown = false;\r\n        this.downTime = 0;\r\n        this.isTouch = false;\r\n\r\n        const _onDown = (event) => {\r\n            event.preventDefault();\r\n\r\n            if (this.isDown) {\r\n                return;\r\n            }\r\n\r\n            this.isDown = true;\r\n            this.downTime = new Date().getTime();\r\n            onDown();\r\n\r\n            setTimeout(() => {\r\n                if (this.isLongDown()) {\r\n                    onLong();\r\n                }\r\n            }, this.thTime);\r\n        }\r\n\r\n        const _onUp = (event) => {\r\n            event.preventDefault();\r\n\r\n            if (!this.isDown) {\r\n                return;\r\n            }\r\n\r\n            this.isDown = false;\r\n            onUp();\r\n        }\r\n\r\n        if (button.ontouchstart === undefined) {\r\n            button.onmousedown = _onDown;\r\n            button.onmouseup = _onUp;\r\n        } else {\r\n            button.ontouchstart = _onDown;\r\n            button.ontouchend = _onUp;\r\n        }\r\n    }\r\n\r\n    isShortDown() {\r\n        if (!this.isDown) {\r\n            return false;\r\n        }\r\n\r\n        const nowTime = new Date().getTime();\r\n        const duration = nowTime - this.downTime;\r\n        return (duration < this.thTime);\r\n    }\r\n\r\n    isLongDown() {\r\n        if (!this.isDown) {\r\n            return false;\r\n        }\r\n\r\n        const nowTime = new Date().getTime();\r\n        const duration = nowTime - this.downTime;\r\n        return (duration >= this.thTime);\r\n    }\r\n}\r\n\r\nexport default BtnControl;\r\n","import CryptoJS from \"crypto-js\";\r\n\r\nclass Credential {\r\n    constructor(key) {\r\n        this.key = key;\r\n    }\r\n\r\n    static available() {\r\n        return !(localStorage === undefined);\r\n    }\r\n\r\n    store(value, passwd) {\r\n        const data = [value, passwd];\r\n        const cipher = CryptoJS.AES.encrypt(JSON.stringify(data), passwd).toString();\r\n        localStorage.setItem(this.key, cipher);\r\n    }\r\n\r\n    load(passwd) {\r\n        const cipher = localStorage.getItem(this.key);\r\n        const bytes  = CryptoJS.AES.decrypt(cipher, passwd);\r\n\r\n        try {\r\n            const data = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n            const [value, expected] = data;\r\n            if (passwd == expected) {\r\n                return value;\r\n            } else {\r\n                return null;\r\n            }\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    login(passwd) {\r\n        return !!this.load(passwd);\r\n    }\r\n\r\n    exists() {\r\n        return !!localStorage.getItem(this.key);\r\n    }\r\n}\r\n\r\nexport default Credential;\r\n","export function wait(request) {\r\n    return new Promise((resolve, reject) => {\r\n        request.onsuccess = (event) => resolve(event.target.transaction);\r\n        request.onerror = reject;\r\n    }) ;\r\n}\r\n\r\nclass DB extends EventTarget {\r\n    static available() {\r\n        return !(window.indexedDB === undefined)\r\n    }\r\n\r\n    constructor(name, version) {\r\n        super();\r\n        this.name = name;\r\n        this.version = version;\r\n        this.db = null;\r\n    }\r\n\r\n    ready() {\r\n        return !(this.db === null)\r\n    }\r\n\r\n    destroy() {\r\n        if (!DB.available()) {\r\n            const msg = \"IndexedDB is not available\";\r\n            throw new Error(msg);\r\n        }\r\n        window.indexedDB.deleteDatabase(this.name);\r\n    }\r\n\r\n    async connect(migration) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!DB.available()) {\r\n                const msg = \"IndexedDB is not available\";\r\n                reject(new Error(msg));\r\n            }\r\n\r\n            const request = window.indexedDB.open(this.name, this.version);\r\n\r\n            request.onupgradeneeded = (event) => {\r\n                const db = event.target.result;\r\n                const transaction = event.target.transaction;\r\n                migration.migrate(event.oldVersion, event.newVersion, db, transaction);\r\n            };\r\n\r\n            request.onsuccess = (event) => {\r\n                const db = event.target.result;\r\n                this.db = db;\r\n                resolve(db);\r\n            };\r\n\r\n            request.onerror = reject;\r\n        });\r\n    }\r\n\r\n    async add(store, value) {\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = this.db.transaction(store, \"readwrite\");\r\n            const request = transaction.objectStore(store).add(value);\r\n\r\n            request.onsuccess = (event) => {\r\n                event.stopPropagation();\r\n                resolve(request.result);\r\n            };\r\n            request.onerror = (event) => {\r\n                event.stopPropagation();\r\n                reject(event);\r\n            };\r\n        });\r\n    }\r\n\r\n    async get(store, key) {\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = this.db.transaction(store, \"readwrite\");\r\n            const request = transaction.objectStore(store).get(key);\r\n\r\n            request.onsuccess = (event) => {\r\n                event.stopPropagation();\r\n                resolve(request.result);\r\n            };\r\n            request.onerror = (event) => {\r\n                event.stopPropagation();\r\n                reject(event);\r\n            };\r\n        });\r\n    }\r\n\r\n    async getAll(store) {\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = this.db.transaction(store, \"readwrite\");\r\n            const request = transaction.objectStore(store).getAll();\r\n\r\n            request.onsuccess = (event) => {\r\n                event.stopPropagation();\r\n                resolve(request.result);\r\n            };\r\n            request.onerror = (event) => {\r\n                event.stopPropagation();\r\n                reject(event);\r\n            };\r\n        });\r\n    }\r\n\r\n    async delete(store, key) {\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = this.db.transaction(store, \"readwrite\");\r\n            const request = transaction.objectStore(store).delete(key);\r\n\r\n            request.onsuccess = (event) => {\r\n                event.stopPropagation();\r\n                resolve(event);\r\n            };\r\n            request.onerror = (event) => {\r\n                event.stopPropagation();\r\n                reject(event);\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nexport default DB;\r\n","class Graph {\r\n    constructor() {\r\n        this.map = {}\r\n    }\r\n\r\n    add(before, after, value) {\r\n        this.map[before] = this.map[before] || {};\r\n        this.map[before][after] = value;\r\n    }\r\n\r\n    trace(before, after) {\r\n        const hs = [{ ps: [before], vs: [] }];\r\n        while (hs.length > 0) {\r\n            const {ps, vs} = hs.shift();\r\n            const p = ps.slice(-1)[0];\r\n\r\n            for (const n in this.map[p]) {\r\n                const v = this.map[p][n];\r\n\r\n                if (n == after) {\r\n                    return (vs.concat([v]));\r\n                }\r\n\r\n                if (ps.includes(n)) {\r\n                    continue;\r\n                }\r\n\r\n                hs.push({\r\n                    ps: ps.concat([n]),\r\n                    vs: vs.concat([v])\r\n                });\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\nclass Migration {\r\n    constructor() {\r\n        this.updates = new Graph();\r\n    }\r\n\r\n    add(before, after, update) {\r\n        const value = (db, transaction) => {\r\n            console.log(`Migrating from ${before} to ${after}.`);\r\n            return update(db, transaction);\r\n        }\r\n        this.updates.add(before, after, value);\r\n    }\r\n\r\n    async migrate(before, after, db, transaction) {\r\n        const trace = this.updates.trace(before, after);\r\n\r\n        if (trace === null) {\r\n            throw new Error(`Migration path is not found: from ${before} to ${after}.`);\r\n        }\r\n\r\n        for (const update of trace) {\r\n            transaction = await update(db, transaction);\r\n        }\r\n        return transaction;\r\n    }\r\n}\r\n\r\nexport default Migration;\r\n","class MockStream {\r\n    constructor(audioElement) {\r\n        const audioContext = new window.AudioContext();\r\n        const track = audioContext.createMediaElementSource(audioElement);\r\n        const dest = audioContext.createMediaStreamDestination();\r\n\r\n        track.connect(audioContext.destination);\r\n        track.connect(dest);\r\n\r\n        this.stream = dest.stream;\r\n    }\r\n}\r\n\r\nexport default MockStream;\r\n","import DB, { wait } from \"./DB.js\"\r\nimport Migration from \"./Migration.js\";\r\n\r\nconst version = 3;\r\nconst migration = new Migration();\r\n\r\nmigration.add(0, 1, async (db, transaction) => {\r\n    db.createObjectStore(\"records\", { autoIncrement: true }); \r\n\r\n    return transaction;\r\n});\r\nmigration.add(1, 2, async (db, transaction) => {\r\n    var request = transaction.objectStore(\"records\").getAll();\r\n\r\n    transaction = await wait(request);\r\n    const blobs = request.result;\r\n\r\n    db.deleteObjectStore(\"records\");\r\n    db.createObjectStore(\"records\", { autoIncrement: true }); \r\n\r\n    const promises = [];\r\n    for (const blob of blobs) {\r\n        const data = {\r\n            blob,\r\n            script: null\r\n        };\r\n        request = transaction.objectStore(\"records\").add(data);\r\n        promises.push(wait(request));\r\n    }\r\n    const transactions = await Promise.all(promises);\r\n    transactions.push(transaction)\r\n\r\n    return transactions[0];\r\n});\r\nmigration.add(0, 2, async (db, transaction) => {\r\n    db.createObjectStore(\"records\", { autoIncrement: true }); \r\n\r\n    return transaction;\r\n});\r\nmigration.add(2, 3, async (db, transaction) => {\r\n    var request = transaction.objectStore(\"records\").getAll();\r\n\r\n    transaction = await wait(request);\r\n    const data = request.result;\r\n\r\n    db.deleteObjectStore(\"records\");\r\n    db.createObjectStore(\"records\", { keyPath: \"id\", autoIncrement: true }); \r\n\r\n    const promises = [];\r\n    for (const rec of data) {\r\n        request = transaction.objectStore(\"records\").add(rec);\r\n        promises.push(wait(request));\r\n    }\r\n    const transactions = await Promise.all(promises);\r\n    transactions.push(transaction)\r\n\r\n    return transactions[0];\r\n});\r\nmigration.add(0, 3, async (db, transaction) => {\r\n    db.createObjectStore(\"records\", { keyPath: \"id\", autoIncrement: true }); \r\n\r\n    return transaction;\r\n});\r\n\r\nclass Record {\r\n    static name = \"BouncyDB\";\r\n    static version = version;\r\n    static store = \"records\";\r\n\r\n    constructor() {\r\n        this.db = new DB(Record.name, Record.version);\r\n    }\r\n\r\n    async connect() {\r\n        return (await this.db.connect(migration));\r\n    }\r\n\r\n    async get(key) {\r\n        return (await this.db.get(Record.store, key));\r\n    }\r\n\r\n    async list() {\r\n        return (await this.db.getAll(Record.store));\r\n    }\r\n\r\n    async save(data) {\r\n        return await this.db.add(Record.store, data);\r\n    }\r\n\r\n    async delete(key) {\r\n        await this.db.delete(Record.store, key);\r\n    }\r\n}\r\n\r\nexport default Record;\r\n","module.exports = {\"name\":\"openai\",\"version\":\"3.3.0\",\"description\":\"Node.js library for the OpenAI API\",\"repository\":{\"type\":\"git\",\"url\":\"git@github.com:openai/openai-node.git\"},\"keywords\":[\"openai\",\"open\",\"ai\",\"gpt-3\",\"gpt3\"],\"author\":\"OpenAI\",\"license\":\"MIT\",\"main\":\"./dist/index.js\",\"types\":\"./dist/index.d.ts\",\"scripts\":{\"build\":\"tsc --outDir dist/\"},\"dependencies\":{\"axios\":\"^0.26.0\",\"form-data\":\"^4.0.0\"},\"devDependencies\":{\"@types/node\":\"^12.11.5\",\"typescript\":\"^3.6.4\"}}","// extracted by mini-css-extract-plugin\nexport {};","import { OpenAIApi } from \"../node_modules/openai/dist/api\";\r\nimport { Tiktoken, encoding_for_model } from \"../node_modules/tiktoken/tiktoken\";\r\n\r\ntype Message = {\r\n    role: 'system' | 'user' | 'assistant',\r\n    content: string\r\n};\r\ntype Passage = Message & {\r\n    token_len: number\r\n};\r\n\r\ntype ModelType = 'gpt-3.5-turbo';\r\n\r\nclass Conversation {\r\n    api: OpenAIApi;\r\n    history: Passage[];\r\n    model: ModelType;\r\n    encoding: Tiktoken;\r\n\r\n    constructor(openai: OpenAIApi,\r\n                context: string[]=[],\r\n                model: ModelType=\"gpt-3.5-turbo\") {\r\n        this.api = openai;\r\n        this.model = model;\r\n\r\n        this.encoding = encoding_for_model(model);\r\n        this.history = context.map(content => (\r\n            {\r\n                role: 'system',\r\n                content,\r\n                token_len: this.getTokenLen(content)\r\n            }\r\n        ));\r\n    }\r\n\r\n    getTokenLen(str: string): number {\r\n        return this.encoding.encode(str).length;\r\n    }\r\n\r\n    addHistory(msg: Message) {\r\n        this.history.push({\r\n            ...msg,\r\n            token_len: this.getTokenLen(msg.content)\r\n        });\r\n    }\r\n\r\n    getHistoryMessages(): Message[] {\r\n        return this.history.map(({ role, content }) => ({ role, content }));\r\n    }\r\n\r\n    async say(msg: string): Promise<string> {\r\n        const message: Message = { role: 'user', content: msg };\r\n\r\n        const res = await this.api.createChatCompletion({\r\n            model: this.model,\r\n            messages: [\r\n                ...this.getHistoryMessages(),\r\n                message\r\n            ]\r\n        });\r\n        this.addHistory(message);\r\n\r\n        const reply: Message = res.data.choices[0].message;\r\n        this.addHistory(reply);\r\n\r\n        return reply.content;\r\n    }\r\n}\r\n\r\nexport default Conversation;\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && !queue.d) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = 1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && (queue.d = 0);\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"my-webpack-project:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = fetch(__webpack_require__.p + \"\" + wasmModuleHash + \".module.wasm\");\n\tif (typeof WebAssembly.instantiateStreaming === 'function') {\n\t\treturn WebAssembly.instantiateStreaming(req, importsObj)\n\t\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n\t}\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_webpack_project\"] = self[\"webpackChunkmy_webpack_project\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\n__webpack_require__(\"./index.js\");\nvar __webpack_exports__ = __webpack_require__(\"./index.scss\");\n",""],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_inherits","subClass","superClass","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","_isNativeFunction","has","get","set","Wrapper","_construct","Parent","bind","a","Function","sham","Proxy","Boolean","valueOf","e","toString","indexOf","o","p","text","dom","DOMParser","parseFromString","html","querySelector","innerHTML","template","document","createElement","content","AudioPost","_HTMLElement","_super","src","script","api","id","_this","root","attachShadow","mode","appendChild","cloneNode","audio","button","loadScript","_x","_loadScript","_callee2","blob","file","_callee2$","_context2","File","recognize","getAttribute","dataset","open","lock","onclick","_callee","_res","_callee$","_context","classList","remove","textContent","fetch","add","handler","_this2","HTMLElement","customElements","getWaveBlob","AMRecorder","BtnControl","MockStream","Record","API","data","url","URL","createObjectURL","ul","li","post","onDelete","_ref","removeChild","init","_init","_callee5","_callee5$","_context5","connect","list","save","_x2","_save","_callee6","_callee6$","_context6","_objectSpread","configure","stream","recorder","window","MediaRecorder","chunks","recording","ondataavailable","event","size","onstop","Blob","onDown","amr","toTrans","alert","onLong","toShot","onUp","toRec","toInit","bc","start","navigator","mediaDevices","getUserMedia","video","accountElement","signupElements","querySelectorAll","loginElements","login","logout","register","form","conversation","_ref3","_callee3","speech_key","speech_region","openai_key","_callee3$","_context3","azure","region","openai","_x3","console","log","loggedin","exists","elem","onsubmit","preventDefault","formData","FormData","passwd","signup","write","msg","say","textarea","_callee4","req","rep","_callee4$","_context4","module","require","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","transitionalDefaults","Cancel","xhrAdapter","config","dispatchXhrRequest","requestData","requestHeaders","headers","responseType","onCanceled","cancelToken","unsubscribe","signal","removeEventListener","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","toUpperCase","params","paramsSerializer","timeout","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","response","status","statusText","_resolve","_reject","onreadystatechange","handleLoad","readyState","responseURL","setTimeout","onabort","handleAbort","onerror","handleError","ontimeout","handleTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","toLowerCase","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","Axios","mergeConfig","defaults","createInstance","defaultConfig","extend","instanceConfig","axios","CancelToken","isCancel","VERSION","version","all","promises","spread","isAxiosError","default","message","__CANCEL__","executor","resolvePromise","promise","promiseExecutor","token","_listeners","l","onfulfilled","reason","throwIfRequested","listener","index","splice","source","c","InterceptorManager","dispatchRequest","validator","validators","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","unshiftRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","pushResponseInterceptors","chain","Array","concat","shift","newConfig","onFulfilled","onRejected","getUri","replace","forEachMethodNoData","forEachMethodWithData","handlers","use","options","eject","forEachHandler","h","isAbsoluteURL","combineURLs","requestedURL","enhanceError","code","transformData","throwIfCancellationRequested","transformRequest","merge","common","cleanHeaderConfig","adapter","onAdapterResolution","transformResponse","onAdapterRejection","toJSON","description","number","fileName","lineNumber","columnNumber","stack","config1","config2","getMergedValue","isPlainObject","isArray","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","computeConfigValue","configValue","validateStatus","fns","transform","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","getDefaultAdapter","process","stringifySafely","rawValue","parser","encoder","isString","JSON","parse","trim","stringify","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","encode","serializedParams","parts","serialize","parseValue","v","isDate","toISOString","join","hashmarkIndex","relativeURL","standardBrowserEnv","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","match","RegExp","decodeURIComponent","now","nonStandardBrowserEnv","test","payload","msie","userAgent","urlParsingNode","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parsed","normalizedName","processHeader","ignoreDuplicateOf","split","line","substr","callback","arr","thing","deprecatedWarnings","formatMessage","opt","opts","warn","schema","allowUnknown","ArrayBuffer","isView","isFunction","pipe","str","product","assignValue","b","stripBOM","charCodeAt","core","StatusError","captureStackTrace","statusMessage","statusCode","json","arrayBuffer","entries","mkrequest","statusCodes","encoding","baseurl","_url","body","_headers","Headers","resp","encodings","Set","startsWith","factory","undef","amd","CryptoJS","C","C_lib","lib","BlockCipher","C_algo","algo","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","d","x","xi","sx","x2","x4","x8","t","RCON","AES","_doReset","_nRounds","_keyPriorReset","_key","keyWords","words","keySize","sigBytes","nRounds","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","encryptBlock","M","offset","_doCryptBlock","decryptBlock","s0","s1","s2","s3","round","t0","t1","t2","t3","_createHelper","Cipher","Base","WordArray","BufferedBlockAlgorithm","C_enc","enc","Utf8","Base64","EvpKDF","cfg","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","dataUpdate","_append","_process","finalize","finalProcessedData","_doFinalize","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","encrypt","decrypt","ciphertext","StreamCipher","finalProcessedBlocks","blockSize","C_mode","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","CBC","processBlock","xorBlock","_prevBlock","thisBlock","block","C_pad","pad","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","modeCreator","_minBufferSize","_mode","__creator","_doProcessBlock","_data","CipherParams","cipherParams","mixIn","formatter","C_format","format","OpenSSLFormatter","OpenSSL","wordArray","salt","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","plaintext","C_kdf","kdf","OpenSSLKdf","execute","random","compute","derivedParams","Math","crypto","globalThis","msCrypto","global","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","subtype","overrides","$super","properties","propertyName","clone","Hex","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","j","ceil","nBytes","hexChars","bite","hexStr","hexStrLength","parseInt","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","escape","utf8Str","_nDataBytes","doFlush","processedWords","dataWords","dataSigBytes","nBlocksReady","max","nWordsReady","nBytesReady","min","Hasher","update","messageUpdate","hasher","_createHmacHelper","HMAC","map","_map","base64Chars","byte1","byte2","byte3","triplet","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bits2","bitsCombined","Base64url","urlSafe","_safe_map","Utf16BE","Utf16","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","swapEndian","word","MD5","iterations","derivedKey","derivedKeyWords","HexFormatter","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","superInit","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","T","abs","sin","_hash","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","H_i","s","n","HmacMD5","CFB","generateKeystreamAndEncrypt","keystream","CTRGladman","incWord","b1","b2","b3","incCounter","counter","_counter","CTR","ECB","OFB","_keystream","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","SHA1","PBKDF2","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","S","C_","G","RabbitLegacy","K","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","gh","gl","Rabbit","RC4","keySigBytes","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","hl","hr","zl","zr","sl","sr","al","bl","cl","dl","el","ar","br","cr","dr","er","f1","f2","f3","f4","f5","rotl","y","z","HmacRIPEMD160","W","HmacSHA1","SHA256","SHA224","HmacSHA224","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","f","g","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","HmacSHA256","C_x64","x64","X64Word","Word","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newX","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","_state","nBlockSizeLanes","M2i","M2i1","lane","high","low","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","X64WordArray","SHA512","SHA384","HmacSHA384","X64Word_create","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","bh","dh","eh","fh","fl","hh","Wil","Wih","Wi","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1l","t1h","t2l","t2h","toX32","HmacSHA512","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","mask","TripleDES","key1","key2","key3","_des1","_des2","_des3","X32WordArray","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","ConsoleLoggingListener","Events","attachConsoleListener","fs","LogLevel","Contracts","logLevelFilter","None","privLogPath","privEnableConsoleOutput","privLogLevelFilter","logPath","throwIfNullOrUndefined","openSync","enableConsoleOutput","enableOutput","onEvent","eventType","writeFileSync","flag","Debug","debug","Info","Warning","logFragments","eventTime","valueToLog","connectivity","AudioSourceErrorEvent","AudioSourceInitializingEvent","AudioSourceOffEvent","AudioSourceReadyEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeAttachingEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","ChunkedArrayBufferStream","createNoDashGuid","Deferred","EventSource","AudioStreamFormat","FileAudioSource","filename","audioSourceId","privStreams","privHeaderEnd","privId","privEvents","privSource","privFilename","privAudioFormatPromise","readHeader","turnOn","lastIndexOf","errorMsg","attach","audioNodeId","detach","__awaiter","readEnded","turnOff","close","streamId","isClosed","events","deviceInfo","bitspersample","bitsPerSample","channelcount","channels","Unknown","manufacturer","model","samplerate","samplesPerSec","maxHeaderSize","header","headerResult","view","DataView","getWord","getUint8","formatSize","getInt32","channelCount","getUint16","sampleRate","getUint32","pos","getWaveFormatPCM","reader","FileReader","onload","readAsArrayBuffer","avgBytesPerSec","chunk","processFile","buff","writeStreamChunk","isEnd","timeReceived","ev","fileBuffer","AudioStreamFormatImpl","AudioWorkletSourceURLPropertyName","MicAudioSource","privRecorder","deviceId","mediaStream","privOutputChunkSize","AUDIOFORMAT","privMediaStream","privIsClosing","privInitializeDeferral","createAudioContext","typedError","nav","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","successCallback","errorCallback","catch","active","privContext","resume","listen","destroyAudioContext","getMicrophoneLabel","label","Microphones","setProperty","setWorkletUrl","defaultMicrophoneName","privMicrophoneLabel","microphoneDeviceId","getTracks","getSettings","deferred","enumerateDevices","devices","device","getAudioContext","releaseMediaResources","hasClose","suspend","getDefaultInputFormat","RiffPcmEncoder","PcmRecorder","stopInputOnRelease","privStopInputOnRelease","outputStream","desiredSampleRate","waveStreamEncoder","micInput","createMediaStreamSource","attachScriptProcessor","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","onaudioprocess","inputFrame","inputBuffer","getChannelData","waveFrame","destination","privMediaResources","scriptProcessorNode","audioWorklet","privSpeechProcessorScript","workletScript","addModule","workletNode","AudioWorkletNode","onmessage","disconnect","track","PropertyId","ProxyInfo","proxyHostName","proxyPort","proxyUserName","proxyPassword","privProxyHostName","privProxyPort","privProxyUserName","privProxyPassword","fromParameters","parameters","getProperty","SpeechServiceConnection_ProxyHostName","SpeechServiceConnection_ProxyPort","SpeechServiceConnection_ProxyUserName","SpeechServiceConnection_ProxyPassword","fromRecognizerConfig","HostName","Port","UserName","Password","ReplayableAudioNode","audioSource","bytesPerSecond","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privLastChunkAcquiredTime","privAudioNode","privBytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","replay","shrinkBuffers","findTimeAtOffset","startOffset","endOffset","serial","RestConfigBase","requestOptions","privDefaultRequestOptions","configParams","privDefaultParams","restErrors","privRestErrors","Accept","ignoreCache","authInvalidSubscriptionKey","authInvalidSubscriptionRegion","invalidArgs","invalidCreateJoinConversationResponse","invalidParticipantRequest","permissionDeniedConnect","permissionDeniedConversation","permissionDeniedParticipant","permissionDeniedSend","permissionDeniedStart","apiVersion","authorization","clientAppId","contentTypeKey","correlationId","languageCode","nickname","profanity","requestId","roomId","sessionToken","subscriptionKey","subscriptionRegion","bent","ArgumentNullError","RestRequestType","RestMessageAdapter","privHeaders","privIgnoreCache","extractHeaderValue","headerKey","headerValue","headerMap","setHeaders","uri","queryParams","responseReceivedDeferral","requestCommand","handleRestResponse","ok","postData","sendRequest","Delete","_a","Post","k","WebsocketMessageAdapter","WebsocketConnection","queryParameters","messageFormatter","proxyInfo","enableCompression","connectionId","privIsDisposed","privMessageFormatter","paramName","headerName","privUri","privConnectionMessageAdapter","dispose","isDisposed","net","tls","Agent","HttpsProxyAgent","ws","HeaderNames","BackgroundEvent","ConnectionClosedEvent","ConnectionErrorEvent","ConnectionEstablishedEvent","ConnectionMessageReceivedEvent","ConnectionMessageSentEvent","ConnectionOpenResponse","ConnectionStartEvent","ConnectionState","MessageType","Queue","RawWebsocketMessage","privConnectionEvents","privConnectionId","privConnectionState","privEnableCompression","ConnectionId","privLastErrorReceived","Disconnected","privConnectionEstablishDeferral","privCertificateValidatedDeferral","Connecting","WebSocket","forceNpmWebSocket","privWebsocketClient","perMessageDeflate","agent","getAgent","toLocaleLowerCase","binaryType","privReceivingMessageQueue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","onopen","Connected","onclose","onClose","networkReceivedTime","enqueueFromPromise","rawMessage","Binary","toConnectionMessage","connectionMessage","Text","messageSendStatusDeferral","messageSendDeferral","fromConnectionMessage","Message","sendStatusDeferral","dequeue","sendRawMessage","sendItem","isWebsocketOpen","closeReason","drainAndDispose","pendingSendItem","itemToSend","sendError","createConnection","GetProxyAgent","httpProxyOptions","Buffer","requestOCSP","httpProxyAgent","socketPromise","assign","servername","baseAgent","socket","secureEndpoint","OPEN","AddedLmIntent","modelImpl","intentName","AgentConfig","toJsonString","iPrivConfig","AuthInfo","CognitiveSubscriptionKeyAuthentication","privAuthInfo","AuthKey","authFetchEventId","fetchOnExpiry","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","privFetchCallback","privFetchOnExpiryCallback","privTokenPrefix","ServicePropertiesPropertyName","QueryParameterNames","ConnectionFactoryBase","getHostSuffix","setCommonUrlParams","endpoint","propertyIdToParameterMap","Speech_SegmentationSilenceTimeoutMs","SegmentationSilenceTimeoutMs","SpeechServiceConnection_EnableAudioLogging","EnableAudioLogging","SpeechServiceConnection_EndSilenceTimeoutMs","EndSilenceTimeoutMs","SpeechServiceConnection_InitialSilenceTimeoutMs","InitialSilenceTimeoutMs","SpeechServiceResponse_PostProcessingOption","Postprocessing","SpeechServiceResponse_ProfanityOption","Profanity","SpeechServiceResponse_RequestWordLevelTimestamps","EnableWordLevelTimestamps","SpeechServiceResponse_StablePartialResultThreshold","StableIntermediateThreshold","parameterName","propertyId","setUrlParameter","serviceProperties","propId","OutputFormat","PropertyCollection","ResultReason","SpeechRecognitionResult","DetailedSpeechPhrase","EnumTranslation","OutputFormatPropertyName","RecognitionStatus","ServiceRecognizerBase","SimpleSpeechPhrase","SpeechHypothesis","ConversationServiceRecognizer","authentication","connectionFactory","recognizerConfig","recognizer","handleSpeechPhraseMessage","textBody","handleSpeechPhrase","handleSpeechHypothesisMessage","handleSpeechHypothesis","processTypeSpecificMessages","handleRecognizedCallback","sessionId","handleRecognizingCallback","duration","processSpeechMessages","processed","cancelRecognition","cancellationReason","errorCode","simple","fromJSON","resultReason","implTranslateRecognitionResult","resultProps","SpeechServiceResponse_JsonResult","simpleOffset","Offset","privRequestSession","currentTurnAudioOffset","onPhraseRecognized","Duration","Canceled","cancelReason","implTranslateCancelResult","cancellationErrorCode","implTranslateCancelErrorCode","cancelRecognitionLocal","implTranslateErrorDetails","isSpeechEnded","NoMatch","InitialSilenceTimeout","privRecognizerConfig","Simple","DisplayText","Language","LanguageDetectionConfidence","SpeakerId","detailed","totalOffset","offsetCorrectedJson","getJsonWithCorrectedOffsets","hypothesis","RecognizingSpeech","onHypothesis","DialogServiceConfig","WebsocketMessageFormatter","DialogConnectionFactory","authInfo","applicationId","Conversation_ApplicationId","dialogType","Conversation_DialogType","SpeechServiceConnection_Region","language","SpeechServiceConnection_RecoLanguage","requestTurnStatus","Conversation_Request_Bot_Status_Messages","Format","RequestBotStatusMessages","BotId","DialogTypes","CustomCommands","CustomCommandsAppId","resourceInfix","BotFramework","SpeechServiceConnection_Endpoint","hostSuffix","SpeechServiceConnection_Host","BaseUrl","standardizedHost","endsWith","ApiKey","SendingAgentContextMessageEvent","createGuid","ServiceEvent","AudioOutputFormatImpl","ActivityReceivedEventArgs","CancellationErrorCode","CancellationReason","RecognitionEventArgs","SessionEventArgs","SpeechRecognitionCanceledEventArgs","SpeechRecognitionEventArgs","TurnStatusReceivedEventArgs","DialogServiceTurnStateManager","CancellationErrorCodePropertyName","SpeechDetected","SpeechKeyword","ActivityPayloadResponse","SpeechConnectionMessage","DialogServiceAdapter","dialogServiceConnector","privDialogServiceConnector","receiveMessageOverride","receiveDialogMessageOverride","privTurnStateManager","recognizeOverride","recoMode","listenOnce","postConnectImplOverride","connection","dialogConnectImpl","configConnectionOverride","configConnection","disconnectOverride","privDisconnect","privDialogAudioSource","agentConfigSent","privLastResult","connectionEvents","connectionEvent","terminateMessageLoop","sendMessage","interactionGuid","agentMessage","interactionId","messagePayload","agentMessageJson","fetchConnection","NoError","messageType","speechPhrase","TooManyRequests","fireEventForResult","recognized","recognizing","keyword","Status","RecognizedKeyword","resultId","audioRequestId","turn","GetTurn","binaryBody","endAudioStream","audioStream","handleResponseMessage","defferal","isRecognizing","onStopRecognizing","canceled","cancelEvent","privSuccessCallback","recognitionMode","privErrorCallback","startNewRecognition","listenForServiceTelemetry","Speech_SessionId","conPromise","connectImpl","preAudioPromise","sendPreAudioMessages","node","audioNode","onAudioSourceAttachCompleted","SpeechServiceConfig","ConnectionFailure","sessionStartEventArgs","privRecognizer","sessionStarted","audioSendPromise","sendAudio","RuntimeError","privConnectionLoop","startMessageLoop","communicationCustodian","loop","turnRequestId","audioSessionReqId","StartTurn","onServiceTurnStartResponse","speechStartDetected","speechStartEventArgs","speechStopDetected","onServiceRecognized","speechStopEventArgs","speechEndDetected","turnEndRequestId","CompleteTurn","sessionStopEventArgs","onServiceTurnEndResponse","isContinuousRecognition","sessionStopped","serviceEvents","ret","sendSpeechServiceConfig","sendAgentConfig","addKeywordContextData","sendSpeechContext","sendAgentContext","sendWaveHeader","agentConfig","botInfo","commandsCulture","agentConfigJson","guid","speechActivityTemplate","Conversation_Speech_Activity_Template","agentContext","channelData","agentContextJson","serviceResult","responseMessage","responsePayload","responseRequestId","activityPayload","conversationId","updateAgentConfig","pullAudioOutputStream","processActivityPayload","fromSpeechSynthesisOutputFormatString","SpeechServiceConnection_SynthOutputFormat","activity","activityReceived","turnStatusReceived","keywordPropertyValue","keywordOffsetPropertyValue","keywordDurationPropertyValue","keywords","keywordOffsets","keywordDurations","keywordDefinitionArray","definition","speechContext","setSection","clientDetectedKeywords","onReject","action","AudioOutputStream","MessageDataStreamType","DialogServiceTurnState","manager","privRequestId","privIsCompleted","privAudioStream","privTurnManager","resetTurnEndTimeout","audioFormat","messageDataStreamType","TextToSpeechAudio","createPullStream","getDefaultOutputFormat","privTimeoutToken","clearTimeout","InvalidOperationError","privTurnMap","turnState","delete","DynamicGrammarBuilder","addPhrase","phrase","privPhrases","clearPhrases","addReferenceGrammar","grammar","privGrammars","clearGrammars","generateGrammarObject","retObj","ReferenceGrammars","retPhrases","Groups","Type","Items","recognitionStatus","Success","RecognizedSpeech","BabbleTimeout","EndOfDictation","BadRequest","Forbidden","EndOfStream","ServiceError","BadRequestParameters","errorDetails","ForceDictationPropertyName","AutoDetectSourceLanguagesOpenRangeOptionName","SpIDAuthKey","ContentType","Path","RequestId","RequestStreamId","RequestTimestamp","privHeaderName","privToken","IntentConnectionFactory","SpeechServiceConnection_IntentRegion","SpeechServiceConnection_Url","getSpeechRegionFromIntentRegion","intentRegion","IntentRecognitionCanceledEventArgs","IntentRecognitionEventArgs","IntentRecognitionResult","IntentResponse","IntentServiceRecognizer","privIntentRecognizer","privIntentDataSent","setIntents","addedIntents","umbrellaIntent","privAddedLmIntents","privUmbrellaIntent","speechHypothesis","RecognizingIntent","sendEvent","privPendingIntentArgs","intentResponse","topScoringIntent","intent","addedIntent","intentId","RecognizedIntent","LanguageUnderstandingServiceResponse_JsonResult","CustomSpeechDeploymentId","CustomVoiceDeploymentId","EnableLanguageId","StableTranslation","TestHooks","CtsMeetingId","CtsDeviceId","CtsIsParticipant","EventType","PlatformEvent","SpeechRecognitionEvent","eventName","privSessionId","RecognitionTriggeredEvent","privAudioSourceId","privAudioNodeId","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","privAuthFetchEventid","RecognitionStartedEvent","privAuthFetchEventId","RecognitionCompletionStatus","RecognitionEndedEvent","serviceTag","privStatus","privError","privServiceTag","RecognitionMode","SpeechResultFormat","RecognizerConfig","speechServiceConfig","privSpeechServiceConfig","privParameters","privMaxRetryCount","privLanguageIdMode","SpeechServiceConnection_LanguageIdMode","privRecognitionMode","privRecognitionActivityTimeout","Interactive","Recognition","recognitionActivityTimeout","languageIdMode","autoDetectSourceLanguages","SpeechServiceConnection_AutoDetectSourceLanguages","recognitionEndpointVersion","SpeechServiceConnection_RecognitionEndpointVersion","sourceLanguageModels","models","modelsExist","customProperty","SpeechServiceConnection_EndpointId","modelId","maxRetryCount","replacement","substring","recognition","os","system","System","SPEECHSDK_CLIENTSDK_VERSION","build","lang","OS","platform","Device","ServiceTelemetryListener","RequestSession","privDetachables","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","privHypothesisReceived","privBytesSent","privRecogNumber","privInTurn","privConnectionAttempts","privTurnDeferral","turnCompletionPromise","recogNumber","numConnectionAttempts","bytesSent","eventSource","privServiceTelemetryListener","attachListener","isError","onComplete","onPreConnectionStart","onAuthCompleted","onConnectionEstablishCompleted","continuousRecognition","onSpeechContext","hypothesisReceived","phraseReceived","onAudioSent","onRetryConnection","detachable","getTelemetry","hasTelemetry","onSpeechEnded","detachAudioNode","privActivityResponse","privDetailedSpeechPhrase","baseOffset","NBest","firstWordOffset","Words","details","DisplayWords","PrimaryLanguage","Confidence","Display","SynthesisStatus","privIntentResponse","query","entities","privSimpleSpeechPhrase","privSpeechStartDetected","privSpeechHypothesis","privSpeechKeyword","MetadataType","SynthesisAudioMetadata","privSynthesisAudioMetadata","Metadata","TranslationStatus","TranslationHypothesis","privTranslationHypothesis","Translation","TranslationPhrase","privTranslationPhrase","fromTranslationResponse","translationResponse","SpeechPhrase","TranslationSynthesisEnd","privSynthesisEnd","FailureReason","TurnStatusResponsePayload","privMessageStatusResponse","Timeout","SpeechContext","privConnectionConfigurationPromise","privConnectionPromise","privSetTimeout","privIsLiveAudio","recognizeSpeaker","sendPrePayloadJSONOverride","privMustReportEndOfStream","privAuthentication","privConnectionFactory","privAudioSource","privServiceEvents","privDynamicGrammar","privSpeechContext","privAgentConfig","Worker","connectionClosedEvent","phraseDetection","sourceLanguages","speechContextLidMode","Priority","languages","onSuccess","onUnknown","interimResults","resultType","phraseResults","customModels","onInterim","isEmpty","setSpeechSegmentationTimeout","speechSegmentationTimeout","Conversation","Dictation","segmentationSilenceTimeoutMs","getSection","segmentation","dynamicGrammar","conversationTranslatorToken","ConversationTranslator_Token","voiceProfileType","SpeechServiceConnection_SpeakerIdMode","errorCallBack","audioStreamNode","receiveMessage","stopRecognizing","sendFinalAudio","connectAsync","cb","sendNetworkMessage","contentType","activityTemplate","privActivityTemplate","sendTelemetryData","telemetryData","telemetryDataEnabled","privServiceHasSentMessage","sendPrePayloadJSON","generateNewRequestId","speechContextJson","noOp","retryableConnect","requestSession","SpeechServiceConfigJson","withTelemetry","DisableReferenceChannel","MicSpec","configureConnection","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","readAndUploadCycle","audioStreamChunk","sendDelay","delay","isUnAuthorized","lastStatusCode","lastReason","authPromise","delayMs","writeBufferToConsole","out","readView","padStart","ConnectionEstablishErrorEvent","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","privReceivedMessages","privPhraseLatencies","privHypothesisLatencies","audioReceivedTime","End","Name","Start","privMicStartTime","privConnectionStartTime","Id","getConnectionError","maxMessagesToSend","metrics","PhraseLatencyMs","FirstHypothesisLatencyMs","telemetry","Metrics","ReceivedMessages","SpeakerRecognitionConfig","SpeakerRecognitionConnectionFactoryBase","endpointPath","scenario","scenarioToPath","SpeechServiceConnection_Key","SpeakerRecognitionConnectionFactory","VoiceProfileConnectionFactory","SpeakerRecognitionResult","SpeakerServiceRecognizer","privSpeakerRecognizer","privSpeakerAudioSource","recognizeSpeakerOnce","RecognizedSpeaker","privResultDeferral","privSpeakerModel","extractSpeakerContext","sendSpeakerRecognition","speakerContextJson","features","interimResult","progressiveDetection","profileIds","SpeechConnectionFactory","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","universalUri","endpointId","webSocketConnection","ConnectionMessage","additionalHeaders","privPath","privContentType","privStreamId","privAdditionalHeaders","sectionName","setPronunciationAssessmentParams","enrichment","pronunciationAssessment","setWordLevelTimings","phraseOutput","dgi","SpeechServiceRecognizer","speechRecognizer","privSpeechRecognizer","SpeechSynthesisConnectionFactory","synthesisUri","hostPrefix","SpeechSynthesisBookmarkEventArgs","SpeechSynthesisEventArgs","SpeechSynthesisResult","SpeechSynthesisVisemeEventArgs","SpeechSynthesisWordBoundaryEventArgs","SynthesisContext","SynthesisTurn","SynthesisAdapterBase","synthesizerConfig","speechSynthesizer","audioDestination","speakOverride","connectImplOverride","privSynthesizerConfig","privSpeechSynthesizer","privSessionAudioDestination","privSynthesisTurn","privSynthesisContext","cancelSynthesisLocal","synthesisContext","audioOutputFormat","privAudioOutputFormat","addHeader","hasHeader","updateHeader","tmp","Speak","isSSML","ssml","buildSsml","startNewSynthesis","sendSynthesisContext","sendSsmlMessage","synthesisStartEventArgs","SynthesizingAudioStarted","synthesisStarted","cancelSynthesis","SynthesisCanceled","isSynthesizing","onStopSynthesizing","onServiceResponseMessage","onAudioChunkReceived","synthesizing","audioWithHeader","SynthesizingAudio","metadataList","metadata","WordBoundary","SentenceBoundary","onTextBoundaryEvent","wordBoundaryEventArgs","Data","Length","currentTextOffset","currentSentenceOffset","BoundaryType","wordBoundary","Bookmark","bookmarkEventArgs","bookmarkReached","Viseme","onVisemeMetadataReceived","IsLastAnimation","visemeEventArgs","VisemeId","getAndClearVisemeAnimation","visemeReceived","SessionEnd","onSessionEnd","audioBuffer","getAllReceivedAudioWithHeader","SynthesizingAudioCompleted","audioDuration","synthesisCompleted","synthesisContextJson","synthesisSection","buildSynthesisContext","metadataOptions","bookmarkEnabled","punctuationBoundaryEnabled","SpeechServiceResponse_RequestPunctuationBoundary","sentenceBoundaryEnabled","SpeechServiceResponse_RequestSentenceBoundary","sessionEndEnabled","visemeEnabled","wordBoundaryEnabled","SpeechServiceResponse_RequestWordBoundary","outputFormat","requestAudioFormatString","autoDetection","autoDetectSourceLanguage","SpeechSynthesisEvent","SynthesisTriggeredEvent","sessionAudioDestinationId","turnAudioDestinationId","privSessionAudioDestinationId","privTurnAudioDestinationId","audioSessionDestinationId","audioTurnDestinationId","ConnectingToSynthesisServiceEvent","SynthesisStartedEvent","SynthesisRestAdapter","privRestAdapter","getVoicesList","Get","PullAudioOutputStreamImpl","privIsSynthesizing","privIsSynthesisEnded","privBytesReceived","privTextOffset","privNextSearchTextIndex","privSentenceOffset","privNextSearchSentenceIndex","isSynthesisEnded","bytesReceived","privAudioDuration","getAllReceivedAudio","privReceivedAudio","readAllAudioFromStream","privReceivedAudioWithHeader","rawText","privRawText","privIsSSML","privAudioOutputStream","privPartialVisemeAnimation","privTurnAudioDestination","responseJson","updateTextOffset","AnimationChunk","animation","isXmlTag","withinXmlTag","idx","SynthesisServiceType","SynthesizerConfig","privSynthesisServiceType","Standard","synthesisServiceType","TranscriberConnectionFactory","multiaudioRelativeUri","hostDefault","setQueryParams","endpointUrl","wordLevelTimings","Detailed","ConversationTranscriptionCanceledEventArgs","TranscriptionServiceRecognizer","transcriber","privTranscriberRecognizer","sendTranscriptionStartJSON","sendSpeechEventAsync","command","sendSpeechEvent","createSpeechEventPayload","getConversationInfo","speechEventJson","eventDict","meeting","conversationProperties","attendees","participants","audiorecording","ConversationConnectionConfig","privHost","privApiVersion","privClientAppId","defaultLanguageCode","privDefaultLanguageCode","restPath","privRestPath","webSocketPath","privWebSocketPath","transcriptionEventKeys","privTranscriptionEventKeys","ConversationWebsocketMessageFormatter","ConversationConnectionFactory","endpointHost","ConversationTranslator_Host","ConversationTranslator_CorrelationId","ConversationConnectionMessage","privConversationMessageType","conversationMessageType","ConversationManager","privRequestParams","privErrors","createOrJoin","conversationCode","ConversationTranslator_Name","authToken","SpeechServiceAuthorization_Token","throwIfNullOrWhitespace","errorMessage","errMessageRaw","leave","ConversationRequestSession","privRequestCompletionDeferral","completionPromise","ConversationExpirationEventArgs","ConversationTranslationCanceledEventArgs","ConversationTranslationResult","Translations","ConversationReceivedTranslationEventArgs","LockRoomEventArgs","MuteAllEventArgs","ParticipantAttributeEventArgs","ParticipantEventArgs","ParticipantsListEventArgs","ConversationTranslatorCommandTypes","ConversationTranslatorMessageTypes","CommandResponsePayload","ParticipantPayloadResponse","ParticipantsListPayloadResponse","SpeechResponsePayload","TextResponsePayload","ConversationServiceAdapter","conversationServiceConnector","privConnectionConfigPromise","privLastPartialUtteranceId","privConversationServiceConnector","privConversationAuthentication","receiveConversationMessageOverride","conversationConnectImpl","privConversationRequestSession","privConversationConnectionFactory","privConversationIsDisposed","sendMessageAsync","sendFinal","commandPayload","participantsPayload","participantsResult","participant","avatar","participantId","isHost","ishost","isMuted","ismuted","isUsingTts","usetts","preferredLanguage","locale","participantsListReceived","roomid","translateTo","profanityFilter","roomProfanityFilter","roomLocked","muteAll","participantUpdateCommandReceived","setTranslateToLanguages","setProfanityFiltering","setMute","muteAllCommandReceived","conversationExpiration","setUseTTS","lockRoomCommandReceived","changeNickname","joinParticipantPayload","joiningParticipant","participantJoinCommandReceived","leavingParticipant","participantLeaveCommandReceived","disconnectParticipant","authorizationToken","speechPayload","speechResult","getTranslations","translations","isFinal","translationReceived","final","partial","textPayload","textResult","originalText","instantMessage","messageRetrievalPromise","r","serviceResultTranslations","translation","StringUtils","TranslationConnectionFactory","ConversationTranslatorConnectionFactory","convGetter","privConvGetter","isVirtMicArrayEndpoint","convInfo","room","cognitiveSpeechRegion","replacementValues","CTS_VIRT_MIC_PATH","hostName","formatString","parsedUrl","searchParams","connFactory","getEndpointUrl","privIsMuted","isLocked","privIsLocked","privParticipant","privKey","privValue","privParticipantId","isRoomLocked","isMuteAll","privRoomId","privSessionToken","privTranslateTo","privProfanityFilter","privRoomProfanityFilter","privIsRoomLocked","privParticipants","privIsMuteAll","privPayload","privCommand","InternalParticipants","meId","addOrUpdateParticipant","getParticipantIndex","getParticipant","findIndex","find","deleteParticipant","filter","me","keepAlive","participantCommand","translatedMessage","disconnectSession","ejectParticipant","instant_message","joinSession","leaveSession","participantList","roomExpirationWarning","setLockState","setMuteAll","Connection","Recognizer","ConversationRecognizerFactory","fromConfig","speechConfig","audioConfig","ConversationTranslatorRecognizer","serviceConfigImpl","throwIfNull","conversationImpl","privConversation","privProperties","privConnection","fromRecognizer","privClearTimeout","connected","disconnected","speechRecognitionLanguage","privSpeechRecognitionLanguage","throwIfDisposed","privReco","resetConversationTimeout","closeConnection","disposing","createRecognizerConfig","createServiceRecognizer","withAsync","PromiseToEmptyCallback","getKeepAlive","deferral","incomingMessage","binaryContent","TranscriberRecognizer","parseCommandResponse","privCommandResponse","parseListResponse","parseParticipantResponse","privParticipantsPayloadResponse","privParticipantPayloadResponse","parseSpeechResponse","parseTextResponse","privSpeechResponse","timestamp","privTextResponse","marshalPromiseToCallbacks","speechTranslationConfig","speechTranslationConfigImpl","audioConfigImpl","privDisposedRecognizer","conversationInfo","startContinuousRecognitionAsync","startContinuousRecognitionAsyncImpl","stopContinuousRecognitionAsync","stopContinuousRecognitionAsyncImpl","pushConversationEvent","reco","enforceAudioGating","connectCallbacks","transcribing","transcribed","disconnectCallbacks","implRecognizerStop","configImpl","returnRegionPlaceholder","from","to","SpeechServiceConnection_TranslationToLanguages","SpeechServiceResponse_TranslationRequestStablePartialResult","translationVoice","SpeechServiceConnection_TranslationVoice","voice","TranslationRecognitionCanceledEventArgs","TranslationRecognitionEventArgs","TranslationRecognitionResult","TranslationSynthesisEventArgs","TranslationSynthesisResult","TranslationServiceRecognizer","translationRecognizer","privTranslationRecognizer","onConnection","onDisconnection","handleTranslationPhrase","translatedPhrase","sendSynthesisAudio","synthEnd","retEvent","canceledResult","fromSpeechRecognitionResult","confidence","TranslatedSpeech","TranslatingSpeech","DeferralMap","VoiceProfileEnrollmentResult","VoiceProfilePhraseResult","VoiceProfileResult","VoiceProfileType","VoiceServiceRecognizer","privDeferralMap","SpeakerAudioSource","operation","handleCreateResponse","handleResultResponse","enrollmentResponse","handleFetchResponse","phraseResponse","handlePhrasesResponse","enrollmentReasonFrom","enrollment","enrollmentStatus","getId","createProfile","profileType","createProfileDeferral","sendCreateProfile","resetProfile","profile","sendCommonRequest","deleteProfile","retrieveEnrollmentResult","privExpectedProfileId","profileId","getAllProfiles","getActivationPhrases","getPhrasesDeferral","sendPhrasesRequest","enrollProfile","enrollmentDeferral","sendBaseRequest","scenarioFrom","profileCreateRequest","TextIndependentIdentification","TextIndependentVerification","profileRequest","maxPageSize","passPhraseType","phrases","EnrollingVoiceProfile","profiles","successReason","DeletedVoiceProfile","ResetVoiceProfile","profileInfo","iProfiles","profileResults","EnrolledVoiceProfile","CRLF","textMessage","headerBodySplit","binaryMessage","dataView","headerLength","getInt16","headersString","getInt8","makeHeaders","headerBuffer","stringToArrayBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","separatorIndex","setUint8","AudioSourceEvent","AudioStreamNodeEvent","Stream","targetChunkSize","privTargetChunkSize","privNextBufferReadyBytes","bytesCopiedFromBuffer","privNextBufferToWrite","privNextBufferStartTime","bytesToCopy","targetView","sourceView","jsonstring","privJsonResult","jsonString","ConnectionEvent","privReason","privStatusCode","privMessage","privType","statuscode","networkReceivedTimeISO","privNetworkReceivedTime","networkSentTimeISO","privNetworkSentTime","networkSentTime","privBody","privMessageType","privSize","privMap","DialogEvent","argumentName","ObjectDisposedError","objectName","privEventListeners","privConsoleListener","privMetadata","eventId","onEventCallback","setEventSource","privInstance","v4","uuid","List","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","privDisposeReason","privList","item","itemIndex","first","last","insertAt","triggerSubscriptions","removeFirst","removeAt","removeLast","count","removedElements","clear","onAdded","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","seperator","toArray","cloneCopy","any","where","select","selectList","filteredList","orderBy","compareFn","clonedArray","orderedArray","sort","orderByDesc","concatArray","array","subscriptions","privName","privEventId","privEventTime","privEventType","PromiseState","PromiseResult","promiseResultEventSource","throwIfError","on","privIsError","privResult","isCompleted","PromiseResultEventSource","setResult","privOnSetResult","setError","privOnSetError","onSetResult","onSetError","privResolve","privReject","privPromise","Sink","privState","privPromiseResult","privPromiseResultEvents","privSuccessHandlers","privErrorHandlers","Resolved","executeSuccessCallback","detachHandlers","Rejected","errorHandler","executeErrorCallback","SubscriberType","privPromiseStore","privIsDrainInProgress","privIsDisposing","privSubscribers","drain","enqueue","throwIfDispose","deferredSubscriber","Dequeue","peek","subs","Peek","pendingItemProcessor","subscriber","promiseArray","wrapper","finally","lists","dequeuedItem","actualSampleRate","privActualSampleRate","privDesiredSampleRate","actualAudioFrame","audioFrame","downSampleAudioFrame","audioLength","floatTo16BitPCM","setString","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","dstFrame","srcOffset","dstOffset","nextSrcOffset","accum","privIsWriteEnded","privIsReadEnded","privReaderQueue","isReadEnded","streamChunk","throwIfClosed","replacements","formatted","appendToFormatted","appendToKey","appendFunc","load","scheduledTimeoutFunctions","unhandledRequests","workerScript","workerUrl","worker","isCallNotification","timerId","idOrFunc","unhandledTimerId","isClearResponse","postMessage","func","performance","loadWorkerTimers","workerTimers","timers","privActivity","AudioInputStream","PullAudioInputStreamCallback","PullAudioOutputStream","PushAudioOutputStream","PushAudioOutputStreamCallback","SpeakerAudioDestination","AudioFileWriter","PullAudioInputStreamImpl","PushAudioOutputStreamImpl","AudioConfig","fromDefaultMicrophoneInput","pcmRecorder","AudioConfigImpl","fromMicrophoneInput","fromWavFileInput","fromStreamInput","MediaStream","fromDefaultSpeakerOutput","AudioOutputConfigImpl","fromSpeakerOutput","player","fromAudioFileOutput","fromStreamOutput","def","privDestination","privFd","throwIfNotUndefined","privAudioFormat","headerOffset","privWriteStream","createWriteStream","fd","autoClose","bytesWritten","writeSync","closeSync","end","createPushStream","PushAudioInputStream","PullAudioInputStream","PushAudioInputStreamImpl","privFormat","privStream","dataBuffer","toBuffer","buf","alloc","privCallback","privIsClosed","privBufferSize","totalBytes","transmitBuff","readBuff","pulledBytes","intView","SpeechSynthesisOutputFormat","AudioFormatTag","formatTag","blockAlign","audioFormatString","priAudioFormatString","priRequestAudioFormatString","priHasHeader","fromSpeechSynthesisOutputFormat","speechSynthesisOutputFormat","SpeechSynthesisOutputFormatToString","speechSynthesisOutputFormatString","MuLaw","Siren","MP3","SILKSkype","PCM","OGG_OPUS","WEBM_OPUS","OPUS","FLAC","ALaw","privHeader","setUint32","Raw8Khz8BitMonoMULaw","Riff16Khz16KbpsMonoSiren","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz128KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Raw16Khz16BitMonoTrueSilk","Riff16Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff24Khz16BitMonoPcm","Riff8Khz8BitMonoMULaw","Raw16Khz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","Raw48Khz16BitMonoPcm","Riff48Khz16BitMonoPcm","Audio48Khz96KBitRateMonoMp3","Audio48Khz192KBitRateMonoMp3","Ogg48Khz16BitMonoOpus","Webm16Khz16BitMonoOpus","Webm24Khz16BitMonoOpus","Webm24Khz16Bit24KbpsMonoOpus","Raw24Khz16BitMonoTrueSilk","Raw8Khz8BitMonoALaw","Riff8Khz8BitMonoALaw","Audio16Khz16Bit32KbpsMonoOpus","Audio24Khz16Bit48KbpsMonoOpus","Audio24Khz16Bit24KbpsMonoOpus","Raw22050Hz16BitMonoPcm","Riff22050Hz16BitMonoPcm","Raw44100Hz16BitMonoPcm","Riff44100Hz16BitMonoPcm","privLastChunkView","tmpBuffer","getWaveFormat","samplesPerSecond","isWavFormat","setUint16","AudioContext","webkitAudioContext","getSupportedConstraints","BaseAudioPlayer","audioContext","gainNode","autoUpdateBufferTimer","playAudioSample","newAudioData","ensureInitializedContext","audioData","formatAudioData","newSamplesData","samples","stopAudio","clearInterval","timerPeriod","setInterval","updateAudioBuffer","createGain","gain","startTime","currentTime","formatArrayBuffer","maxValue","float32Data","bufferSource","createBufferSource","frameCount","createBuffer","channel","channelOffset","playAudio","decodeAudioData","newBuffer","MediaDurationPlaceholderSeconds","AudioFormatToMimeType","audioDestinationId","privPlaybackStarted","privAppendingToBuffer","privMediaSourceOpened","privIsPaused","privAudioBuffer","updateSourceBuffer","privSourceBuffer","handleSourceBufferUpdateEnd","onAudioEnd","receivedAudio","audioBlob","privAudio","notifyPlayback","mimeType","MediaSource","isTypeSupported","Audio","privMediaSource","onsourceopen","addSourceBuffer","onupdate","onupdateend","onupdatestart","volume","mute","muted","unmute","pause","play","internalAudio","sourceBufferAvailable","binary","appendBuffer","canEndStream","endOfStream","onAudioStart","onended","updating","LanguageIdMode","AutoDetectSourceLanguageConfig","AtStart","fromOpenRange","fromLanguages","throwIfArrayEmptyOrWhitespace","fromSourceLanguageConfigs","configs","autoConfig","langs","Continuous","AutoDetectSourceLanguageResult","languageDetectionConfidence","privLanguage","privLanguageDetectionConfidence","fromResult","DialogServiceConfigImpl","BotFrameworkConfig","fromSubscription","subscription","botId","botFrameworkConfig","fromAuthorizationToken","fromHost","resolvedHost","fromEndpoint","CancellationDetailsBase","RecognitionResult","CancellationDetails","simpleSpeech","privErrorDetails","privErrorCode","ErrorCode","CancellationEventArgsBase","ConnectionMessageImpl","ConnectionEventArgs","ConnectionMessageEventArgs","ServiceEventArgs","recoBase","internalData","privInternalData","setupEvents","fromSynthesizer","synthesizer","synthBase","openConnection","setMessageProperty","propertyValue","success","privEventListener","messageSent","messageReceived","privServiceEventListener","receivedServiceMessage","privConnectionMessage","isTextMessage","isBinaryMessage","TextMessage","param","throwIfNullOrTooLong","maxLength","throwIfNullOrTooShort","minLength","throwIfFileDoesNotExist","CustomCommandsConfig","customCommandsConfig","Diagnostics","SetLoggingLevel","logLevel","privListener","StartConsoleOutput","StopConsoleOutput","SetLogOutputPath","SpeechConfigImpl","privSpeechConfig","setProxy","setServiceProperty","DialogServiceConnector","dialogConfig","dialogServiceConfigImpl","isTurnComplete","buildAgentConfig","listenOnceAsync","callbackHolder","retPromise","sendActivityAsync","errCb","communicationType","commType","Conversation_Agent_Connection_Id","Conversation_Conversation_Id","fromId","Conversation_From_Id","ttsAudioFormat","KeywordRecognitionModel","LanguageUnderstandingModel","ConversationTranscriptionEventArgs","SpeechConfig","SpeechTranslationConfig","SpeechTranslationConfigImpl","SpeechRecognizer","IntentRecognizer","TranslationRecognizer","NoMatchReason","NoMatchDetails","PhraseListGrammar","ServicePropertyChannel","ProfanityOption","VoiceProfile","VoiceProfileEnrollmentCancellationDetails","VoiceProfileCancellationDetails","VoiceProfileClient","SpeakerRecognizer","SpeakerIdentificationModel","SpeakerVerificationModel","SourceLanguageConfig","SpeakerRecognitionResultType","SpeakerRecognitionCancellationDetails","ConversationParticipantsChangedEventArgs","ConversationTranslationEventArgs","ConversationTranslator","ConversationTranscriber","Participant","ParticipantChangedReason","User","SpeechSynthesizer","SynthesisResult","SpeechSynthesisBoundaryType","SynthesisVoicesResult","VoiceInfo","PronunciationAssessmentGradingSystem","PronunciationAssessmentGranularity","PronunciationAssessmentConfig","PronunciationAssessmentResult","privIntentId","privAddedIntents","privDisposedIntentRecognizer","recognizeOnceAsync","buildSpeechContext","Intent","intentReco","recognizeOnceAsyncImpl","startKeywordRecognitionAsync","stopKeywordRecognitionAsync","addIntent","simplePhrase","addIntentWithLanguageModel","appId","addAllIntents","errorCb","audioImpl","refGrammers","addedLmIntent","grammer","provider","privDisposed","fromFile","fromStream","langModelImp","LanguageUnderstandingModelImpl","firstDot","lastSegment","fromAppId","NotRecognized","InitialBabbleTimeout","recogBase","privGrammerBuilder","addPhrases","referenceText","gradingSystem","FivePoint","granularity","Phoneme","enableMiscue","PronunciationAssessment_ReferenceText","PronunciationAssessment_GradingSystem","PronunciationAssessment_Granularity","PronunciationAssessment_EnableMiscue","PronunciationAssessment_Json","updateJson","PronunciationAssessment_Params","applyTo","phonemeAlphabet","privPhonemeAlphabet","enableMiscueString","nbestPhonemeCount","privNBestPhonemeCount","paramsJson","dimension","privPronJson","detailResult","accuracyScore","PronunciationAssessment","AccuracyScore","pronunciationScore","PronScore","completenessScore","CompletenessScore","fluencyScore","FluencyScore","privKeys","privValues","keyToUse","clonedMap","mergeTo","destinationCollection","privOffset","privResultId","privText","privDuration","privJson","implCommonRecognizerSetup","telemetryEnabled","enableTelemetry","enabled","osPlatform","osName","osVersion","appVersion","getAuthFromProperties","privEventName","privEndpointId","fromLanguage","privVoiceProfiles","privProfileIds","fromProfiles","voiceProfileIds","Identify","Verify","privProfileId","identificationResult","identifiedProfile","privScore","score","RecognizedSpeakers","verificationResult","recognitionResult","privAudioConfigImpl","privDisposedSpeakerRecognizer","recognizeSpeakerOnceAsyncImpl","privVoiceProfile","fromProfile","voiceProfile","TextDependentVerification","speechImpl","endPoint","currentProperties","setProfanity","enableAudioLogging","requestWordLevelTimestamps","enableDictation","speechSynthesisLanguage","SpeechServiceConnection_SynthLanguage","speechSynthesisVoiceName","SpeechServiceConnection_SynthVoice","speakerId","privSpeakerId","speechConfigImpl","FromConfig","autoDetectSourceLanguageConfig","audioOffset","privAudioOffset","privAudioData","visemeId","privVisemeId","privAnimation","wordLength","textOffset","boundaryType","privWordLength","privBoundaryType","privSynthesizing","synthesisRequestQueue","implCommonSynthesizeSetup","languageToDefaultVoice","XMLEncode","speakTextAsync","speakImpl","speakSsmlAsync","getVoicesAsync","getVoices","privAdapter","createSynthesizerConfig","createSynthesisAdapter","IsSsml","dataStream","SynthesisRequest","adapterSpeak","Locale","privSpeechProperties","addTargetLanguage","targetLanguages","voiceName","VoicesListRetrieved","privVoices","voices","createConversationAsync","arg2","arg3","arg4","ConversationImpl","onConnected","privIsConnected","privConversationTranslator","onDisconnected","onParticipantUpdateCommandReceived","updatedParticipant","translateToLanguages","participantsChanged","Updated","toParticipant","onLockRoomCommandReceived","onMuteAllCommandReceived","toParticipants","onParticipantJoinCommandReceived","newParticipant","JoinedConversation","onParticipantLeaveCommandReceived","ejectedParticipant","LeftConversation","onTranslationReceived","textMessageReceived","onParticipantsListReceived","privRoom","privIsReady","changeNicknameAsync","onConversationExpiration","privConversationId","privManager","Masked","hostNickname","privConfig","privTextMessageMaxLength","privConversationRecognizer","isMutedByHost","isConnected","transcriberRecognizer","convId","part","canSend","canSendAsHost","conversationTranslator","handleCallback","startConversationAsync","addParticipantAsync","addParticipantImplAsync","joinConversationAsync","cognitiveSpeechAuthToken","deleteConversationAsync","deleteConversationImplAsync","endConversationAsync","endConversationImplAsync","lockConversationAsync","getLockCommand","muteAllParticipantsAsync","getMuteAllCommand","muteParticipantAsync","userId","getMuteCommand","removeParticipantAsync","removeParticipantImplAsync","user","getEjectCommand","unlockConversationAsync","unmuteAllParticipantsAsync","unmuteParticipantAsync","sendTextMessageAsync","getMessageCommand","setTranslatedLanguagesAsync","getSetTranslateToLanguagesCommand","getChangeNicknameCommand","connectTranscriberRecognizer","includeHost","ConversationCommon","privAudioConfig","expirationTime","privExpirationTime","startTranscribingAsync","stopTranscribingAsync","leaveConversationAsync","originalLanguage","privOrigLang","originalLang","SpeechState","ConversationTranslationRecognizer","translator","privSpeechState","Inactive","privTranslator","tr","cancelSpeech","fireCancelEvent","newState","privIsSpeaking","privPlaceholderKey","privPlaceholderRegion","canSpeak","privCTRecognizer","param1","param2","param3","privSpeechTranslationConfig","propertyIdsToCopy","UriQueryParameter","connectTranslatorRecognizer","startContinuousRecognition","privUserId","privAvatar","privDisplayName","privIsHost","privIsUsingTts","privPreferredLanguage","privVoice","From","sessionid","privCancelReason","privTranslations","privDisposedTranslationRecognizer","removeTargetLanguage","updateLanguages","includes","conn","turnStatus","privTurnStatus","SynthesisVoiceGender","SynthesisVoiceType","privStyleList","privVoicePath","privLocale","privShortName","ShortName","privLocaleName","LocaleName","privLocalName","LocalName","privVoiceType","VoiceType","OnlineStandard","OnlineNeural","privGender","Gender","Male","Female","StyleList","style","shortName","localName","localeName","gender","voiceType","styleList","voicePath","privProfileType","privVoiceAdapter","privDisposedVoiceAdapter","createProfileAsync","retrieveEnrollmentResultAsync","getAllProfilesAsync","getActivationPhrasesAsync","enrollProfileAsync","deleteProfileAsync","resetProfileAsync","getResult","privDetails","enrollmentsCount","enrollmentsLength","enrollmentResultDetails","FromIdentificationProfileList","results","getIdentificationDetails","FromVerificationProfileList","getVerificationDetails","parseFloat","audioSpeechLength","enrollmentsSpeechLength","identificationProfileId","remainingEnrollmentsSpeechLength","verificationProfileId","remainingEnrollmentsCount","remainingEnrollments","phraseArray","_arguments","P","adopt","step","OpenAIApi","OpenAIApiFactory","OpenAIApiFp","OpenAIApiAxiosParamCreator","CreateImageRequestResponseFormatEnum","CreateImageRequestSizeEnum","ChatCompletionResponseMessageRoleEnum","ChatCompletionRequestMessageRoleEnum","axios_1","common_1","base_1","Assistant","_256x256","_512x512","_1024x1024","Url","B64Json","configuration","cancelFineTune","fineTuneId","assertParamExists","localVarPath","localVarUrlObj","DUMMY_BASE_URL","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","setSearchParams","headersFromBaseOptions","toPathString","createAnswer","createAnswerRequest","serializeDataIfNeeded","createChatCompletion","createChatCompletionRequest","createClassification","createClassificationRequest","createCompletion","createCompletionRequest","createEdit","createEditRequest","createEmbedding","createEmbeddingRequest","createFile","purpose","localVarFormParams","formDataCtor","append","getHeaders","createFineTune","createFineTuneRequest","createImage","createImageRequest","createImageEdit","image","prompt","responseFormat","createImageVariation","createModeration","createModerationRequest","createSearch","engineId","createSearchRequest","createTranscription","temperature","createTranslation","deleteFile","fileId","deleteModel","downloadFile","listEngines","listFiles","listFineTuneEvents","listFineTunes","listModels","retrieveEngine","retrieveFile","retrieveFineTune","retrieveModel","localVarAxiosParamCreator","localVarAxiosArgs","createRequestFunction","BASE_PATH","basePath","localVarFp","BaseAPI","RequiredError","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","setOAuthToObject","setBearerAuthToObject","setBasicAuthToObject","setApiKeyToObject","functionName","paramValue","keyParamName","apiKey","localVarApiKeyValue","accessToken","scopes","localVarAccessTokenValue","setFlattenedQueryParams","urlSearchParams","parameter","currentKey","objects","URLSearchParams","nonString","needsSerialization","isJsonMime","axiosArgs","globalAxios","axiosRequestArgs","Configuration","packageJson","organization","mime","jsonMime","__createBinding","m","k2","__exportStar","wasm","__wbg_set_wasm","heap","fill","getObject","heap_next","dropObject","takeObject","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","memory","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","isLikeNone","cachedInt32Memory0","getInt32Memory0","lTextDecoder","TextDecoder","cachedTextDecoder","ignoreBOM","fatal","decode","getStringFromWasm0","addHeapObject","cachedUint32Memory0","getUint32Memory0","getArrayU32FromWasm0","passArray8ToWasm0","passArray32ToWasm0","getArrayU8FromWasm0","get_encoding","extend_special_tokens","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_export_0","__wbindgen_export_1","len0","r0","r1","r2","Tiktoken","__wrap","encoding_for_model","__wbindgen_export_3","TiktokenFinalization","FinalizationRegistry","__wbg_tiktoken_free","__wbg_ptr","__destroy_into_raw","unregister","free","tiktoken_bfe","special_tokens","pat_str","ptr1","len1","tiktoken_new","tiktoken_name","v1","__wbindgen_export_2","allowed_special","disallowed_special","tiktoken_encode","r3","v2","encode_ordinary","tiktoken_encode_ordinary","encode_with_unstable","tiktoken_encode_with_unstable","encode_single_token","bytes","tiktoken_encode_single_token","tokens","tiktoken_decode","decode_single_token_bytes","tiktoken_decode_single_token_bytes","token_byte_values","tiktoken_token_byte_values","__wbindgen_object_drop_ref","arg0","__wbindgen_is_undefined","__wbg_stringify_e25465938f3f611f","__wbindgen_string_get","arg1","__wbindgen_error_new","__wbg_parse_670c19d4e984792e","__wbindgen_throw","randomUUID","rnds8","rng","validate","byteToHex","unsafeStringify","native","rnds","REGEX","downloadWav","WavRecorder","mediaRecorder","__data","mediaTrackConstraints","download","as32Bit","contextOptions","getBlob","blobData","as32BitFloat","anchorElement","display","click","_writeStringToArray","aString","targetArray","_writeInt16ToArray","aNumber","_writeInt32ToArray","_floatBits","bits","_writeAudioBufferToArray","bitDepth","numberOfChannels","sample","_getAudioBuffer","frameLength","bytesPerSample","byteRate","wavDataByteLength","headerByteLength","totalLength","waveFileData","subChunk1Size","subChunk2Size","chunkSize","isRecording","isErr","SDK","Credential","secret","openaiClient","_class","openaiConfig","ready","store","_recognize","cancellation","thTime","isDown","downTime","isTouch","_onDown","getTime","isLongDown","_onUp","ontouchstart","onmousedown","onmouseup","ontouchend","isShortDown","nowTime","localStorage","setItem","getItem","_slicedToArray","expected","_unused","available","wait","onsuccess","transaction","DB","_EventTarget","db","destroy","indexedDB","deleteDatabase","_connect","migration","onupgradeneeded","migrate","oldVersion","newVersion","_add","_this3","objectStore","stopPropagation","_get","_this4","_x4","_x5","_getAll","_this5","getAll","_x6","_delete2","_this6","_delete","_x7","_x8","EventTarget","_createForOfIteratorHelper","allowArrayLike","it","_unsupportedIterableToArray","_e","normalCompletion","didErr","_e2","minLen","_arrayLikeToArray","arr2","Graph","before","after","trace","hs","ps","vs","_hs$shift","Migration","updates","_migrate","_iterator","_step","audioElement","createMediaElementSource","dest","createMediaStreamDestination","createObjectStore","autoIncrement","_ref2","blobs","transactions","deleteObjectStore","_ref4","_iterator2","_step2","rec","keyPath","_ref5","_x9","_x10","_callee7","_callee7$","_context7","_x11","_list","_callee8","_callee8$","_context8","_callee9","_callee9$","_context9","_x12","_callee10","_callee10$","_context10","_x13","_defineProperty"],"sourceRoot":""}